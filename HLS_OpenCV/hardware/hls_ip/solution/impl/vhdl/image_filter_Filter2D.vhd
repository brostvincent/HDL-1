-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity image_filter_Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of image_filter_Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_pp0_stg0_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st14_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_FFD : STD_LOGIC_VECTOR (11 downto 0) := "111111111101";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_24 : BOOLEAN;
    signal p_027_0_i_reg_326 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_src_cols_V_read_cast_fu_337_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_src_rows_V_read_cast_fu_341_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_77 : BOOLEAN;
    signal p_neg392_i_cast_fu_354_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_phi_fu_308_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_anchor_2_1_cast_cast_fu_368_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_384_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_0_1_cast_fu_390_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal OP2_V_0_1_cast_reg_1630 : STD_LOGIC_VECTOR (33 downto 0);
    signal OP2_V_0_2_cast_fu_393_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal OP2_V_0_2_cast_reg_1635 : STD_LOGIC_VECTOR (33 downto 0);
    signal OP2_V_1_cast_fu_396_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal OP2_V_1_cast_reg_1640 : STD_LOGIC_VECTOR (34 downto 0);
    signal OP2_V_1_2_cast_fu_399_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal OP2_V_1_2_cast_reg_1645 : STD_LOGIC_VECTOR (34 downto 0);
    signal OP2_V_2_cast_fu_402_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_2_cast_reg_1650 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_2_1_cast_fu_405_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal OP2_V_2_1_cast_reg_1655 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_9_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_cast_fu_426_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_4_fu_430_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_fu_435_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_11_fu_440_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_V_fu_455_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_1688 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_120 : BOOLEAN;
    signal tmp_13_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1693 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_1697 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1702 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_1707 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_1_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_1_reg_1711 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_2_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_2_reg_1715 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_1719 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_739_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_39_reg_1726 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_fu_782_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_reg_1731 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_49_fu_825_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_49_reg_1736 : STD_LOGIC_VECTOR (1 downto 0);
    signal rev_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_1741 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_152 : BOOLEAN;
    signal row_assign_s_fu_838_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_s_reg_1746 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_fu_842_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_reg_1751 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_fu_846_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_reg_1756 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1761 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_170 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_1761_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1770 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_194 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal or_cond_i_reg_1798 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1798_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_214 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_1761_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_859_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_cond_i_i_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_fu_912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal ImagLoc_x_cast_mux_fu_917_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_cast_mux_reg_1780 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_fu_939_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_reg_1785 : STD_LOGIC_VECTOR (11 downto 0);
    signal brmerge_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1791 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_reg_1791_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1798_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1798_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1798_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1798_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1798_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1798_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1802 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_3_t_fu_1013_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_3_t_reg_1808 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1815 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1821 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_val_0_0_fu_1137_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_0_0_reg_1827 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1827_pp0_it3 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_1_0_fu_1155_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_1_0_reg_1832 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_2_0_fu_1173_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_2_0_reg_1838 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_2_1_lo_1_reg_1858 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_2_1_1_s_reg_1863 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_5_0_1_fu_1287_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_5_0_1_reg_1883 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_1211_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_2_1_reg_1888 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp28_fu_1296_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp28_reg_1893 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_5_0_2_fu_1309_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_5_0_2_reg_1898 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1255_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_1_reg_1903 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1263_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_1_2_reg_1908 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp27_fu_1318_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp27_reg_1913 : STD_LOGIC_VECTOR (33 downto 0);
    signal isneg_reg_1918 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_4_fu_1353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_reg_1924 : STD_LOGIC_VECTOR (31 downto 0);
    signal newsignbit_reg_1930 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_i_fu_1375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_i_reg_1936 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not38_i_i_i_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not38_i_i_i_reg_1941 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_1449_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_reg_1946 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_304 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_014_0_i_reg_315 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_396 : BOOLEAN;
    signal tmp_29_fu_1006_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_val_0_1_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_0_1_1_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_1_1_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_1_1_1_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_2_1_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_kernel_win_0_val_2_1_1_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_border_buf_0_val_0_1_fu_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_buf_0_val_0_0_fu_1047_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_border_buf_0_val_0_1_1_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_border_buf_0_val_2_1_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_border_buf_0_val_1_1_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_buf_0_val_1_0_fu_1065_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_border_buf_0_val_1_1_1_fu_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_border_buf_0_val_2_1_1_fu_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_buf_0_val_2_0_fu_1083_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_351_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal not_tmp_s_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_377_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_413_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_fu_420_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_360_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_471_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_cast_cast_fu_446_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_17_fu_509_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_18_fu_515_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_540_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_548_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i413_i_fu_554_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_1_fu_574_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_fu_580_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_148_1_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_605_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_1_fu_613_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i413_i_1_fu_619_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_2_fu_639_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_fu_645_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_148_2_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_670_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_2_fu_678_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i413_i_2_fu_684_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond_i412_i_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_709_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_fu_567_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_25_fu_570_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_721_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_48_fu_725_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge2_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_713_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_52_fu_731_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i412_i_1_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_752_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_632_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_635_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_158_1_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_764_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_55_fu_768_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge3_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_756_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_56_fu_774_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i412_i_2_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_795_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_38_fu_697_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_41_fu_700_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_158_2_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_807_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_59_fu_811_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge4_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_799_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_fu_817_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_fu_865_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_18_cast_cast_fu_850_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_fu_881_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_62_fu_887_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_925_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_933_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp1_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast_fu_960_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ImagLoc_x_cast_mux_cast_fu_957_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_assign_2_fu_967_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_27_fu_963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_972_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_fu_990_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal col_assign_cast_fu_998_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_1002_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_33_fu_1036_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1054_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_1072_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_1126_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_1144_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_1162_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1193_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1202_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1211_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1246_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1255_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1263_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1193_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_cast_fu_1284_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_166_2_2_cast_cast_cast_fu_1293_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1202_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1246_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_166_0_2_cast_cast_fu_1305_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_5_0_1_cast_fu_1302_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp28_cast_fu_1315_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_5_1_1_fu_1323_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp26_fu_1327_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp26_cast_fu_1332_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp27_cast_fu_1336_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_3_fu_1339_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_51_fu_1365_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal brmerge_i_i_i_fu_1387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_i_fu_1391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_0_not_i_i_i_fu_1402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_i_i_i_fu_1407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_i_i_fu_1423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_i_fu_1417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_1429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_mux_i_i_fu_1435_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_i_i_fu_1442_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1193_ce : STD_LOGIC;
    signal grp_fu_1202_ce : STD_LOGIC;
    signal grp_fu_1211_ce : STD_LOGIC;
    signal grp_fu_1246_ce : STD_LOGIC;
    signal grp_fu_1255_ce : STD_LOGIC;
    signal grp_fu_1263_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_bdd_1212 : BOOLEAN;
    signal ap_sig_bdd_1214 : BOOLEAN;
    signal ap_sig_bdd_1211 : BOOLEAN;
    signal ap_sig_bdd_1217 : BOOLEAN;

    component image_filter_mux_3to1_sel2_32_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component image_filter_mul_2s_32s_34_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component image_filter_mul_2s_32s_33_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (32 downto 0) );
    end component;


    component image_filter_mul_3ns_32s_34_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component image_filter_mul_3s_32s_35_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component image_filter_mul_4ns_32s_35_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component image_filter_Filter2D_k_buf_0_val_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component image_filter_Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => k_buf_0_val_3_d1);

    k_buf_0_val_4_U : component image_filter_Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component image_filter_Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 32,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    image_filter_mux_3to1_sel2_32_1_U11 : component image_filter_mux_3to1_sel2_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => right_border_buf_0_val_0_1_fu_172,
        din2 => right_border_buf_0_val_0_1_1_fu_176,
        din3 => ap_const_lv32_0,
        din4 => col_assign_3_t_reg_1808,
        dout => tmp_33_fu_1036_p5);

    image_filter_mux_3to1_sel2_32_1_U12 : component image_filter_mux_3to1_sel2_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => right_border_buf_0_val_1_1_fu_184,
        din2 => right_border_buf_0_val_1_1_1_fu_188,
        din3 => ap_const_lv32_0,
        din4 => col_assign_3_t_reg_1808,
        dout => tmp_34_fu_1054_p5);

    image_filter_mux_3to1_sel2_32_1_U13 : component image_filter_mux_3to1_sel2_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => right_border_buf_0_val_2_1_1_fu_192,
        din2 => right_border_buf_0_val_2_1_fu_180,
        din3 => ap_const_lv32_0,
        din4 => col_assign_3_t_reg_1808,
        dout => tmp_35_fu_1072_p5);

    image_filter_mux_3to1_sel2_32_1_U14 : component image_filter_mux_3to1_sel2_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => col_buf_0_val_0_0_fu_1047_p3,
        din2 => col_buf_0_val_1_0_fu_1065_p3,
        din3 => col_buf_0_val_2_0_fu_1083_p3,
        din4 => row_assign_s_reg_1746,
        dout => tmp_40_fu_1126_p5);

    image_filter_mux_3to1_sel2_32_1_U15 : component image_filter_mux_3to1_sel2_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => col_buf_0_val_0_0_fu_1047_p3,
        din2 => col_buf_0_val_1_0_fu_1065_p3,
        din3 => col_buf_0_val_2_0_fu_1083_p3,
        din4 => row_assign_10_1_t_reg_1751,
        dout => tmp_45_fu_1144_p5);

    image_filter_mux_3to1_sel2_32_1_U16 : component image_filter_mux_3to1_sel2_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => col_buf_0_val_0_0_fu_1047_p3,
        din2 => col_buf_0_val_1_0_fu_1065_p3,
        din3 => col_buf_0_val_2_0_fu_1083_p3,
        din4 => row_assign_10_2_t_reg_1756,
        dout => tmp_50_fu_1162_p5);

    image_filter_mul_2s_32s_34_3_U17 : component image_filter_mul_2s_32s_34_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 32,
        dout_WIDTH => 34)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1193_p0,
        din1 => src_kernel_win_0_val_2_1_fu_164,
        ce => grp_fu_1193_ce,
        dout => grp_fu_1193_p2);

    image_filter_mul_2s_32s_33_3_U18 : component image_filter_mul_2s_32s_33_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 32,
        dout_WIDTH => 33)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1202_p0,
        din1 => src_kernel_win_0_val_0_1_1_fu_152,
        ce => grp_fu_1202_ce,
        dout => grp_fu_1202_p2);

    image_filter_mul_3ns_32s_34_3_U19 : component image_filter_mul_3ns_32s_34_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 3,
        din1_WIDTH => 32,
        dout_WIDTH => 34)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1211_p0,
        din1 => src_kernel_win_0_val_0_1_fu_148,
        ce => grp_fu_1211_ce,
        dout => grp_fu_1211_p2);

    image_filter_mul_2s_32s_34_3_U20 : component image_filter_mul_2s_32s_34_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 32,
        dout_WIDTH => 34)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1246_p0,
        din1 => src_kernel_win_0_val_2_0_reg_1838,
        ce => grp_fu_1246_ce,
        dout => grp_fu_1246_p2);

    image_filter_mul_3s_32s_35_3_U21 : component image_filter_mul_3s_32s_35_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 3,
        din1_WIDTH => 32,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1255_p0,
        din1 => src_kernel_win_0_val_1_1_1_fu_160,
        ce => grp_fu_1255_ce,
        dout => grp_fu_1255_p2);

    image_filter_mul_4ns_32s_35_3_U22 : component image_filter_mul_4ns_32s_35_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 4,
        din1_WIDTH => 32,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1263_p0,
        din1 => src_kernel_win_0_val_1_0_reg_1832,
        ce => grp_fu_1263_ce,
        dout => grp_fu_1263_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = exitcond_fu_854_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
                        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) then 
                        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                    ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- p_014_0_i_reg_315 assign process. --
    p_014_0_i_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_5)) then 
                p_014_0_i_reg_315 <= i_V_reg_1688;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_5_phi_fu_308_p4 = ap_const_lv1_0))) then 
                p_014_0_i_reg_315 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- p_027_0_i_reg_326 assign process. --
    p_027_0_i_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = exitcond_fu_854_p2))) then 
                p_027_0_i_reg_326 <= j_V_fu_859_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                p_027_0_i_reg_326 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- tmp_5_reg_304 assign process. --
    tmp_5_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                tmp_5_reg_304 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_5_phi_fu_308_p4 = ap_const_lv1_0)))) then 
                tmp_5_reg_304 <= tmp_6_fu_345_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = exitcond_fu_854_p2))) then
                ImagLoc_x_cast_mux_reg_1780 <= ImagLoc_x_cast_mux_fu_917_p3;
                brmerge1_reg_1774 <= brmerge1_fu_912_p2;
                brmerge_reg_1791 <= brmerge_fu_947_p2;
                or_cond_i_i_reg_1770 <= or_cond_i_i_fu_906_p2;
                or_cond_i_reg_1798 <= or_cond_i_fu_952_p2;
                p_p2_i_i_reg_1785 <= p_p2_i_i_fu_939_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_5_phi_fu_308_p4 = ap_const_lv1_0))) then
                OP2_V_0_1_cast_reg_1630 <= OP2_V_0_1_cast_fu_390_p1;
                OP2_V_0_2_cast_reg_1635 <= OP2_V_0_2_cast_fu_393_p1;
                    OP2_V_1_2_cast_reg_1645(3 downto 0) <= OP2_V_1_2_cast_fu_399_p1(3 downto 0);
                OP2_V_1_cast_reg_1640 <= OP2_V_1_cast_fu_396_p1;
                    OP2_V_2_1_cast_reg_1655(2 downto 0) <= OP2_V_2_1_cast_fu_405_p1(2 downto 0);
                OP2_V_2_cast_reg_1650 <= OP2_V_2_cast_fu_402_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                ap_reg_ppstg_brmerge_reg_1791_pp0_it1 <= brmerge_reg_1791;
                ap_reg_ppstg_exitcond_reg_1761_pp0_it1 <= exitcond_reg_1761;
                ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1 <= or_cond_i_i_reg_1770;
                ap_reg_ppstg_or_cond_i_reg_1798_pp0_it1 <= or_cond_i_reg_1798;
                exitcond_reg_1761 <= exitcond_fu_854_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then
                ap_reg_ppstg_exitcond_reg_1761_pp0_it2 <= ap_reg_ppstg_exitcond_reg_1761_pp0_it1;
                ap_reg_ppstg_or_cond_i_reg_1798_pp0_it2 <= ap_reg_ppstg_or_cond_i_reg_1798_pp0_it1;
                ap_reg_ppstg_or_cond_i_reg_1798_pp0_it3 <= ap_reg_ppstg_or_cond_i_reg_1798_pp0_it2;
                ap_reg_ppstg_or_cond_i_reg_1798_pp0_it4 <= ap_reg_ppstg_or_cond_i_reg_1798_pp0_it3;
                ap_reg_ppstg_or_cond_i_reg_1798_pp0_it5 <= ap_reg_ppstg_or_cond_i_reg_1798_pp0_it4;
                ap_reg_ppstg_or_cond_i_reg_1798_pp0_it6 <= ap_reg_ppstg_or_cond_i_reg_1798_pp0_it5;
                ap_reg_ppstg_or_cond_i_reg_1798_pp0_it7 <= ap_reg_ppstg_or_cond_i_reg_1798_pp0_it6;
                ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1827_pp0_it3 <= src_kernel_win_0_val_0_0_reg_1827;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = exitcond_reg_1761))) then
                col_assign_3_t_reg_1808 <= col_assign_3_t_fu_1013_p2;
                k_buf_0_val_3_addr_reg_1802 <= tmp_29_fu_1006_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1815 <= tmp_29_fu_1006_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1821 <= tmp_29_fu_1006_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_V_reg_1688 <= i_V_fu_455_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond1_fu_450_p2))) then
                icmp_reg_1702 <= icmp_fu_481_p2;
                tmp_122_1_reg_1711 <= tmp_122_1_fu_492_p2;
                tmp_122_2_reg_1715 <= tmp_122_2_fu_498_p2;
                tmp_13_reg_1693 <= tmp_13_fu_461_p2;
                tmp_15_reg_1707 <= tmp_15_fu_487_p2;
                tmp_16_reg_1719 <= tmp_16_fu_504_p2;
                tmp_39_reg_1726 <= tmp_39_fu_739_p3;
                tmp_44_reg_1731 <= tmp_44_fu_782_p3;
                tmp_49_reg_1736 <= tmp_49_fu_825_p3;
                ult_reg_1697 <= ult_fu_466_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1798_pp0_it5)))) then
                isneg_reg_1918 <= p_Val2_3_fu_1339_p2(35 downto 35);
                newsignbit_reg_1930 <= p_Val2_3_fu_1339_p2(31 downto 31);
                p_Val2_4_reg_1924 <= p_Val2_4_fu_1353_p1;
                p_not38_i_i_i_reg_1941 <= p_not38_i_i_i_fu_1381_p2;
                p_not_i_i_i_reg_1936 <= p_not_i_i_i_fu_1375_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1798_pp0_it4)))) then
                p_Val2_1_2_reg_1908 <= grp_fu_1263_p2;
                p_Val2_1_reg_1903 <= grp_fu_1255_p2;
                p_Val2_5_0_2_reg_1898 <= p_Val2_5_0_2_fu_1309_p2;
                tmp27_reg_1913 <= tmp27_fu_1318_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1798_pp0_it3)))) then
                p_Val2_2_1_reg_1888 <= grp_fu_1211_p2;
                p_Val2_5_0_1_reg_1883 <= p_Val2_5_0_1_fu_1287_p2;
                tmp28_reg_1893 <= tmp28_fu_1296_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1798_pp0_it6)))) then
                p_Val2_s_reg_1946 <= p_Val2_s_fu_1449_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                rev_reg_1741 <= rev_fu_833_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1702)) and not((ap_const_lv1_0 = tmp_13_reg_1693)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                right_border_buf_0_val_0_1_1_fu_176 <= right_border_buf_0_val_0_1_fu_172;
                right_border_buf_0_val_0_1_fu_172 <= col_buf_0_val_0_0_fu_1047_p3;
                right_border_buf_0_val_1_1_1_fu_188 <= right_border_buf_0_val_1_1_fu_184;
                right_border_buf_0_val_1_1_fu_184 <= col_buf_0_val_1_0_fu_1065_p3;
                right_border_buf_0_val_2_1_1_fu_192 <= col_buf_0_val_2_0_fu_1083_p3;
                right_border_buf_0_val_2_1_fu_180 <= right_border_buf_0_val_2_1_1_fu_192;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_16_reg_1719)))) then
                row_assign_10_1_t_reg_1751 <= row_assign_10_1_t_fu_842_p2;
                row_assign_10_2_t_reg_1756 <= row_assign_10_2_t_fu_846_p2;
                row_assign_s_reg_1746 <= row_assign_s_fu_838_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                src_kernel_win_0_val_0_0_reg_1827 <= src_kernel_win_0_val_0_0_fu_1137_p3;
                src_kernel_win_0_val_1_0_reg_1832 <= src_kernel_win_0_val_1_0_fu_1155_p3;
                src_kernel_win_0_val_2_0_reg_1838 <= src_kernel_win_0_val_2_0_fu_1173_p3;
                src_kernel_win_0_val_2_1_lo_1_reg_1858 <= src_kernel_win_0_val_2_1_fu_164;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                src_kernel_win_0_val_0_1_1_fu_152 <= src_kernel_win_0_val_0_1_fu_148;
                src_kernel_win_0_val_0_1_fu_148 <= src_kernel_win_0_val_0_0_fu_1137_p3;
                src_kernel_win_0_val_2_1_fu_164 <= src_kernel_win_0_val_2_0_fu_1173_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it2))) then
                src_kernel_win_0_val_1_1_1_fu_160 <= src_kernel_win_0_val_1_1_fu_156;
                src_kernel_win_0_val_1_1_fu_156 <= src_kernel_win_0_val_1_0_reg_1832;
                src_kernel_win_0_val_2_1_1_fu_168 <= src_kernel_win_0_val_2_1_lo_1_reg_1858;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1798_pp0_it2)))) then
                src_kernel_win_0_val_2_1_1_s_reg_1863 <= src_kernel_win_0_val_2_1_1_fu_168;
            end if;
        end if;
    end process;
    OP2_V_1_2_cast_reg_1645(34 downto 4) <= "0000000000000000000000000000000";
    OP2_V_2_1_cast_reg_1655(33 downto 3) <= "0000000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_5_phi_fu_308_p4, exitcond1_fu_450_p2, ap_reg_ppiten_pp0_it1, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it7, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((tmp_5_phi_fu_308_p4 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_450_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_4;
            when ap_ST_pp0_stg0_fsm_4 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_4;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) then
                    ap_NS_fsm <= ap_ST_st14_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_4;
                end if;
            when ap_ST_st14_fsm_5 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ImagLoc_x_cast_mux_cast_fu_957_p1 <= std_logic_vector(resize(unsigned(ImagLoc_x_cast_mux_reg_1780),14));
    ImagLoc_x_cast_mux_fu_917_p3 <= 
        ImagLoc_x_fu_881_p2 when (or_cond_i_i_fu_906_p2(0) = '1') else 
        ap_const_lv12_0;
    ImagLoc_x_fu_881_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(tmp_18_cast_cast_fu_850_p1));
        OP2_V_0_1_cast_fu_390_p1 <= std_logic_vector(resize(signed(p_kernel_val_0_V_1_read),34));

        OP2_V_0_2_cast_fu_393_p1 <= std_logic_vector(resize(signed(p_kernel_val_0_V_2_read),34));

    OP2_V_1_2_cast_fu_399_p1 <= std_logic_vector(resize(unsigned(p_kernel_val_1_V_2_read),35));
        OP2_V_1_cast_fu_396_p1 <= std_logic_vector(resize(signed(p_kernel_val_1_V_0_read),35));

    OP2_V_2_1_cast_fu_405_p1 <= std_logic_vector(resize(unsigned(p_kernel_val_2_V_1_read),34));
        OP2_V_2_cast_fu_402_p1 <= std_logic_vector(resize(signed(p_kernel_val_2_V_0_read),33));


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st3_fsm_2, exitcond1_fu_450_p2)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_450_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, exitcond1_fu_450_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_450_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_120 assign process. --
    ap_sig_bdd_120_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_120 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_1211 assign process. --
    ap_sig_bdd_1211_assign_proc : process(ap_reg_ppstg_exitcond_reg_1761_pp0_it1, ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1, ap_reg_ppiten_pp0_it2)
    begin
                ap_sig_bdd_1211 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2));
    end process;


    -- ap_sig_bdd_1212 assign process. --
    ap_sig_bdd_1212_assign_proc : process(icmp_reg_1702, tmp_122_1_reg_1711)
    begin
                ap_sig_bdd_1212 <= ((ap_const_lv1_0 = icmp_reg_1702) and not((ap_const_lv1_0 = tmp_122_1_reg_1711)));
    end process;


    -- ap_sig_bdd_1214 assign process. --
    ap_sig_bdd_1214_assign_proc : process(tmp_13_reg_1693, icmp_reg_1702)
    begin
                ap_sig_bdd_1214 <= (not((ap_const_lv1_0 = icmp_reg_1702)) and not((ap_const_lv1_0 = tmp_13_reg_1693)));
    end process;


    -- ap_sig_bdd_1217 assign process. --
    ap_sig_bdd_1217_assign_proc : process(icmp_reg_1702, tmp_15_reg_1707)
    begin
                ap_sig_bdd_1217 <= ((ap_const_lv1_0 = icmp_reg_1702) and not((ap_const_lv1_0 = tmp_15_reg_1707)));
    end process;


    -- ap_sig_bdd_152 assign process. --
    ap_sig_bdd_152_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_152 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_170 assign process. --
    ap_sig_bdd_170_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_170 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_194 assign process. --
    ap_sig_bdd_194_assign_proc : process(p_src_data_stream_V_empty_n, tmp_13_reg_1693, icmp_reg_1702, ap_reg_ppstg_exitcond_reg_1761_pp0_it1, ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)
    begin
                ap_sig_bdd_194 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1702)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1702)) and not((ap_const_lv1_0 = tmp_13_reg_1693))));
    end process;


    -- ap_sig_bdd_214 assign process. --
    ap_sig_bdd_214_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_ppstg_or_cond_i_reg_1798_pp0_it7)
    begin
                ap_sig_bdd_214 <= ((p_dst_data_stream_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1798_pp0_it7)));
    end process;


    -- ap_sig_bdd_24 assign process. --
    ap_sig_bdd_24_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_24 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_396 assign process. --
    ap_sig_bdd_396_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_396 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_77 assign process. --
    ap_sig_bdd_77_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_77 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_4 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_4_assign_proc : process(ap_sig_bdd_170)
    begin
        if (ap_sig_bdd_170) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st14_fsm_5 assign process. --
    ap_sig_cseq_ST_st14_fsm_5_assign_proc : process(ap_sig_bdd_396)
    begin
        if (ap_sig_bdd_396) then 
            ap_sig_cseq_ST_st14_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_24)
    begin
        if (ap_sig_bdd_24) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_77)
    begin
        if (ap_sig_bdd_77) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_120)
    begin
        if (ap_sig_bdd_120) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_152)
    begin
        if (ap_sig_bdd_152) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_fu_912_p2 <= (or_cond_i_i_fu_906_p2 or tmp_9_fu_408_p2);
    brmerge2_fu_704_p2 <= (or_cond_i412_i_fu_534_p2 or tmp_1_fu_372_p2);
    brmerge39_i_i_i_fu_1407_p2 <= (p_not38_i_i_i_reg_1941 or newsignbit_0_not_i_i_i_fu_1402_p2);
    brmerge3_fu_747_p2 <= (or_cond_i412_i_1_fu_599_p2 or tmp_1_fu_372_p2);
    brmerge4_fu_790_p2 <= (or_cond_i412_i_2_fu_664_p2 or tmp_1_fu_372_p2);
    brmerge_fu_947_p2 <= (rev_reg_1741 or tmp_24_fu_901_p2);
    brmerge_i_i_fu_1429_p2 <= (overflow_fu_1396_p2 or underflow_not_i_i_fu_1423_p2);
    brmerge_i_i_i_fu_1387_p2 <= (newsignbit_reg_1930 or p_not_i_i_i_reg_1936);
    brmerge_i_i_i_i_fu_1417_p2 <= (underflow_fu_1412_p2 or overflow_fu_1396_p2);
    col_assign_3_t_fu_1013_p2 <= std_logic_vector(unsigned(tmp_11_fu_440_p2) - unsigned(tmp_64_fu_1002_p1));
        col_assign_cast_fu_998_p1 <= std_logic_vector(resize(signed(x_fu_990_p3),32));

    col_buf_0_val_0_0_fu_1047_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_ppstg_brmerge_reg_1791_pp0_it1(0) = '1') else 
        tmp_33_fu_1036_p5;
    col_buf_0_val_1_0_fu_1065_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_ppstg_brmerge_reg_1791_pp0_it1(0) = '1') else 
        tmp_34_fu_1054_p5;
    col_buf_0_val_2_0_fu_1083_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_ppstg_brmerge_reg_1791_pp0_it1(0) = '1') else 
        tmp_35_fu_1072_p5;
    exitcond1_fu_450_p2 <= "1" when (p_014_0_i_reg_315 = tmp_10_fu_435_p2) else "0";
    exitcond_fu_854_p2 <= "1" when (p_027_0_i_reg_326 = tmp_4_fu_430_p2) else "0";

    -- grp_fu_1193_ce assign process. --
    grp_fu_1193_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            grp_fu_1193_ce <= ap_const_logic_1;
        else 
            grp_fu_1193_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1193_p0 <= OP2_V_0_1_cast_reg_1630(2 - 1 downto 0);

    -- grp_fu_1202_ce assign process. --
    grp_fu_1202_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            grp_fu_1202_ce <= ap_const_logic_1;
        else 
            grp_fu_1202_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1202_p0 <= OP2_V_2_cast_reg_1650(2 - 1 downto 0);

    -- grp_fu_1211_ce assign process. --
    grp_fu_1211_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            grp_fu_1211_ce <= ap_const_logic_1;
        else 
            grp_fu_1211_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1211_p0 <= OP2_V_2_1_cast_reg_1655(3 - 1 downto 0);

    -- grp_fu_1246_ce assign process. --
    grp_fu_1246_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            grp_fu_1246_ce <= ap_const_logic_1;
        else 
            grp_fu_1246_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1246_p0 <= OP2_V_0_2_cast_reg_1635(2 - 1 downto 0);

    -- grp_fu_1255_ce assign process. --
    grp_fu_1255_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            grp_fu_1255_ce <= ap_const_logic_1;
        else 
            grp_fu_1255_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1255_p0 <= OP2_V_1_cast_reg_1640(3 - 1 downto 0);

    -- grp_fu_1263_ce assign process. --
    grp_fu_1263_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            grp_fu_1263_ce <= ap_const_logic_1;
        else 
            grp_fu_1263_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1263_p0 <= OP2_V_1_2_cast_reg_1645(4 - 1 downto 0);
    i_V_fu_455_p2 <= std_logic_vector(unsigned(p_014_0_i_reg_315) + unsigned(ap_const_lv11_1));
    icmp1_fu_875_p2 <= "0" when (tmp_61_fu_865_p4 = ap_const_lv10_0) else "1";
    icmp_fu_481_p2 <= "0" when (tmp_14_fu_471_p4 = ap_const_lv10_0) else "1";
    j_V_fu_859_p2 <= std_logic_vector(unsigned(p_027_0_i_reg_326) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_29_fu_1006_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1802;

    -- k_buf_0_val_3_ce0 assign process. --
    k_buf_0_val_3_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_3_ce1 assign process. --
    k_buf_0_val_3_ce1_assign_proc : process(tmp_13_reg_1693, icmp_reg_1702, tmp_122_2_reg_1715, ap_reg_ppstg_exitcond_reg_1761_pp0_it1, ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1702)) and not((ap_const_lv1_0 = tmp_13_reg_1693)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1702) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_122_2_reg_1715))))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_3_d1 <= p_src_data_stream_V_dout;

    -- k_buf_0_val_3_we1 assign process. --
    k_buf_0_val_3_we1_assign_proc : process(tmp_13_reg_1693, icmp_reg_1702, tmp_122_2_reg_1715, ap_reg_ppstg_exitcond_reg_1761_pp0_it1, ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1702)) and not((ap_const_lv1_0 = tmp_13_reg_1693)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1702) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_122_2_reg_1715))))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_29_fu_1006_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1815;

    -- k_buf_0_val_4_ce0 assign process. --
    k_buf_0_val_4_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_4_ce1 assign process. --
    k_buf_0_val_4_ce1_assign_proc : process(tmp_13_reg_1693, icmp_reg_1702, tmp_122_1_reg_1711, ap_reg_ppstg_exitcond_reg_1761_pp0_it1, ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1702)) and not((ap_const_lv1_0 = tmp_13_reg_1693)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1702) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_122_1_reg_1711))))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_4_d1 assign process. --
    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, k_buf_0_val_3_q0, ap_sig_bdd_1212, ap_sig_bdd_1214, ap_sig_bdd_1211)
    begin
        if (ap_sig_bdd_1211) then
            if (ap_sig_bdd_1214) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif (ap_sig_bdd_1212) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- k_buf_0_val_4_we1 assign process. --
    k_buf_0_val_4_we1_assign_proc : process(tmp_13_reg_1693, icmp_reg_1702, tmp_122_1_reg_1711, ap_reg_ppstg_exitcond_reg_1761_pp0_it1, ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1702)) and not((ap_const_lv1_0 = tmp_13_reg_1693)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1702) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_122_1_reg_1711))))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_29_fu_1006_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1821;

    -- k_buf_0_val_5_ce0 assign process. --
    k_buf_0_val_5_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_5_ce1 assign process. --
    k_buf_0_val_5_ce1_assign_proc : process(tmp_13_reg_1693, icmp_reg_1702, tmp_15_reg_1707, ap_reg_ppstg_exitcond_reg_1761_pp0_it1, ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1702)) and not((ap_const_lv1_0 = tmp_13_reg_1693)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1702) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_15_reg_1707))))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_5_d1 assign process. --
    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, k_buf_0_val_4_q0, ap_sig_bdd_1214, ap_sig_bdd_1211, ap_sig_bdd_1217)
    begin
        if (ap_sig_bdd_1211) then
            if (ap_sig_bdd_1214) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif (ap_sig_bdd_1217) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- k_buf_0_val_5_we1 assign process. --
    k_buf_0_val_5_we1_assign_proc : process(tmp_13_reg_1693, icmp_reg_1702, tmp_15_reg_1707, ap_reg_ppstg_exitcond_reg_1761_pp0_it1, ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1702)) and not((ap_const_lv1_0 = tmp_13_reg_1693)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1702) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_15_reg_1707))))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    newsignbit_0_not_i_i_i_fu_1402_p2 <= (newsignbit_reg_1930 xor ap_const_lv1_1);
    not_tmp_s_fu_363_p2 <= "0" when (p_src_rows_V_read = ap_const_lv11_1) else "1";
    or_cond_i412_i_1_fu_599_p2 <= (tmp_148_1_fu_594_p2 and rev2_fu_588_p2);
    or_cond_i412_i_2_fu_664_p2 <= (tmp_148_2_fu_659_p2 and rev3_fu_653_p2);
    or_cond_i412_i_fu_534_p2 <= (tmp_19_fu_529_p2 and rev1_fu_523_p2);
    or_cond_i_fu_952_p2 <= (icmp_reg_1702 and icmp1_fu_875_p2);
    or_cond_i_i_fu_906_p2 <= (tmp_24_fu_901_p2 and rev4_fu_895_p2);
    overflow_fu_1396_p2 <= (brmerge_i_i_i_fu_1387_p2 and tmp_8_i_i_fu_1391_p2);
    p_Val2_1_i_i_fu_1442_p3 <= 
        ap_const_lv32_80000000 when (underflow_fu_1412_p2(0) = '1') else 
        p_Val2_4_reg_1924;
    p_Val2_1_mux_i_i_fu_1435_p3 <= 
        ap_const_lv32_7FFFFFFF when (brmerge_i_i_i_i_fu_1417_p2(0) = '1') else 
        p_Val2_4_reg_1924;
    p_Val2_3_fu_1339_p2 <= std_logic_vector(signed(tmp26_cast_fu_1332_p1) + signed(tmp27_cast_fu_1336_p1));
    p_Val2_4_fu_1353_p1 <= p_Val2_3_fu_1339_p2(32 - 1 downto 0);
        p_Val2_5_0_1_cast_fu_1302_p1 <= std_logic_vector(resize(signed(p_Val2_5_0_1_reg_1883),35));

    p_Val2_5_0_1_fu_1287_p2 <= std_logic_vector(unsigned(grp_fu_1193_p2) - unsigned(p_cast_fu_1284_p1));
    p_Val2_5_0_2_fu_1309_p2 <= std_logic_vector(signed(tmp_166_0_2_cast_cast_fu_1305_p1) + signed(p_Val2_5_0_1_cast_fu_1302_p1));
    p_Val2_5_1_1_fu_1323_p2 <= std_logic_vector(unsigned(p_Val2_1_reg_1903) + unsigned(p_Val2_5_0_2_reg_1898));
    p_Val2_s_fu_1449_p3 <= 
        p_Val2_1_mux_i_i_fu_1435_p3 when (brmerge_i_i_fu_1429_p2(0) = '1') else 
        p_Val2_1_i_i_fu_1442_p3;
    p_anchor_2_1_cast_cast_fu_368_p1 <= std_logic_vector(resize(unsigned(not_tmp_s_fu_363_p2),12));
    p_assign_1_fu_933_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(tmp_18_cast_cast_fu_850_p1));
    p_assign_2_fu_967_p2 <= std_logic_vector(unsigned(tmp_11_cast_fu_426_p1) - unsigned(p_p2_i_i_cast_fu_960_p1));
    p_assign_6_1_fu_574_p2 <= std_logic_vector(signed(ap_const_lv12_FFE) + signed(tmp_14_cast_cast_fu_446_p1));
    p_assign_6_2_fu_639_p2 <= std_logic_vector(signed(ap_const_lv12_FFD) + signed(tmp_14_cast_cast_fu_446_p1));
    p_assign_7_1_fu_613_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) - unsigned(tmp_14_cast_cast_fu_446_p1));
    p_assign_7_2_fu_678_p2 <= std_logic_vector(unsigned(ap_const_lv12_3) - unsigned(tmp_14_cast_cast_fu_446_p1));
    p_assign_7_fu_548_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(tmp_14_cast_cast_fu_446_p1));
        p_cast_fu_1284_p1 <= std_logic_vector(resize(signed(src_kernel_win_0_val_2_1_1_s_reg_1863),34));

    p_dst_data_stream_V_din <= p_Val2_s_reg_1946;

    -- p_dst_data_stream_V_write assign process. --
    p_dst_data_stream_V_write_assign_proc : process(ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond_i_reg_1798_pp0_it7, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1798_pp0_it7)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_neg392_i_cast_fu_354_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_fu_351_p1));
    p_not38_i_i_i_fu_1381_p2 <= "0" when (tmp_51_fu_1365_p4 = ap_const_lv4_F) else "1";
    p_not_i_i_i_fu_1375_p2 <= "0" when (tmp_51_fu_1365_p4 = ap_const_lv4_0) else "1";
    p_p2_i413_i_1_fu_619_p3 <= 
        p_assign_7_1_fu_613_p2 when (tmp_28_fu_605_p3(0) = '1') else 
        p_assign_6_1_fu_574_p2;
    p_p2_i413_i_2_fu_684_p3 <= 
        p_assign_7_2_fu_678_p2 when (tmp_36_fu_670_p3(0) = '1') else 
        p_assign_6_2_fu_639_p2;
    p_p2_i413_i_fu_554_p3 <= 
        p_assign_7_fu_548_p2 when (tmp_21_fu_540_p3(0) = '1') else 
        tmp_17_fu_509_p2;
        p_p2_i_i_cast_fu_960_p1 <= std_logic_vector(resize(signed(p_p2_i_i_reg_1785),14));

    p_p2_i_i_fu_939_p3 <= 
        p_assign_1_fu_933_p2 when (tmp_63_fu_925_p3(0) = '1') else 
        ImagLoc_x_fu_881_p2;
    p_src_cols_V_read_cast_fu_337_p1 <= std_logic_vector(resize(unsigned(p_src_cols_V_read),12));

    -- p_src_data_stream_V_read assign process. --
    p_src_data_stream_V_read_assign_proc : process(tmp_13_reg_1693, icmp_reg_1702, ap_reg_ppstg_exitcond_reg_1761_pp0_it1, ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1, ap_sig_bdd_194, ap_reg_ppiten_pp0_it2, ap_sig_bdd_214, ap_reg_ppiten_pp0_it8)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1702) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1761_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1770_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1702)) and not((ap_const_lv1_0 = tmp_13_reg_1693)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_194 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_214 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    p_src_rows_V_read_cast_fu_341_p1 <= std_logic_vector(resize(unsigned(p_src_rows_V_read),12));
    rev1_fu_523_p2 <= (tmp_18_fu_515_p3 xor ap_const_lv1_1);
    rev2_fu_588_p2 <= (tmp_26_fu_580_p3 xor ap_const_lv1_1);
    rev3_fu_653_p2 <= (tmp_32_fu_645_p3 xor ap_const_lv1_1);
    rev4_fu_895_p2 <= (tmp_62_fu_887_p3 xor ap_const_lv1_1);
    rev_fu_833_p2 <= (ult_reg_1697 xor ap_const_lv1_1);
    row_assign_10_1_t_fu_842_p2 <= std_logic_vector(unsigned(p_neg392_i_cast_fu_354_p2) - unsigned(tmp_44_reg_1731));
    row_assign_10_2_t_fu_846_p2 <= std_logic_vector(unsigned(p_neg392_i_cast_fu_354_p2) - unsigned(tmp_49_reg_1736));
    row_assign_s_fu_838_p2 <= std_logic_vector(unsigned(p_neg392_i_cast_fu_354_p2) - unsigned(tmp_39_reg_1726));
    sel_tmp7_fu_979_p2 <= (brmerge1_reg_1774 xor ap_const_lv1_1);
    sel_tmp8_fu_984_p2 <= (tmp_27_fu_963_p2 and sel_tmp7_fu_979_p2);
    sel_tmp_fu_972_p3 <= 
        ImagLoc_x_cast_mux_cast_fu_957_p1 when (brmerge1_reg_1774(0) = '1') else 
        p_assign_2_fu_967_p2;
    src_kernel_win_0_val_0_0_fu_1137_p3 <= 
        tmp_40_fu_1126_p5 when (tmp_16_reg_1719(0) = '1') else 
        col_buf_0_val_0_0_fu_1047_p3;
    src_kernel_win_0_val_1_0_fu_1155_p3 <= 
        tmp_45_fu_1144_p5 when (tmp_16_reg_1719(0) = '1') else 
        col_buf_0_val_1_0_fu_1065_p3;
    src_kernel_win_0_val_2_0_fu_1173_p3 <= 
        tmp_50_fu_1162_p5 when (tmp_16_reg_1719(0) = '1') else 
        col_buf_0_val_2_0_fu_1083_p3;
        tmp26_cast_fu_1332_p1 <= std_logic_vector(resize(signed(tmp26_fu_1327_p2),36));

    tmp26_fu_1327_p2 <= std_logic_vector(unsigned(p_Val2_1_2_reg_1908) + unsigned(p_Val2_5_1_1_fu_1323_p2));
        tmp27_cast_fu_1336_p1 <= std_logic_vector(resize(signed(tmp27_reg_1913),36));

    tmp27_fu_1318_p2 <= std_logic_vector(unsigned(p_Val2_2_1_reg_1888) + unsigned(tmp28_cast_fu_1315_p1));
        tmp28_cast_fu_1315_p1 <= std_logic_vector(resize(signed(tmp28_reg_1893),34));

    tmp28_fu_1296_p2 <= std_logic_vector(signed(tmp_166_2_2_cast_cast_cast_fu_1293_p1) + signed(grp_fu_1202_p2));
    tmp_10_fu_435_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(p_src_rows_V_read));
    tmp_11_cast_fu_426_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_420_p2),14));
    tmp_11_fu_440_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_2_fu_360_p1));
    tmp_122_1_fu_492_p2 <= "1" when (p_014_0_i_reg_315 = ap_const_lv11_0) else "0";
    tmp_122_2_fu_498_p2 <= "1" when (p_014_0_i_reg_315 = ap_const_lv11_1) else "0";
    tmp_13_fu_461_p2 <= "1" when (unsigned(p_014_0_i_reg_315) < unsigned(p_src_rows_V_read)) else "0";
    tmp_148_1_fu_594_p2 <= "1" when (signed(p_assign_6_1_fu_574_p2) < signed(p_src_rows_V_read_cast_fu_341_p1)) else "0";
    tmp_148_2_fu_659_p2 <= "1" when (signed(p_assign_6_2_fu_639_p2) < signed(p_src_rows_V_read_cast_fu_341_p1)) else "0";
    tmp_14_cast_cast_fu_446_p1 <= std_logic_vector(resize(unsigned(p_014_0_i_reg_315),12));
    tmp_14_fu_471_p4 <= p_014_0_i_reg_315(10 downto 1);
    tmp_158_1_fu_627_p2 <= "1" when (signed(p_p2_i413_i_1_fu_619_p3) < signed(p_src_rows_V_read_cast_fu_341_p1)) else "0";
    tmp_158_2_fu_692_p2 <= "1" when (signed(p_p2_i413_i_2_fu_684_p3) < signed(p_src_rows_V_read_cast_fu_341_p1)) else "0";
    tmp_15_fu_487_p2 <= "1" when (p_anchor_2_1_cast_cast_fu_368_p1 = tmp_14_cast_cast_fu_446_p1) else "0";
        tmp_166_0_2_cast_cast_fu_1305_p1 <= std_logic_vector(resize(signed(grp_fu_1246_p2),35));

        tmp_166_2_2_cast_cast_cast_fu_1293_p1 <= std_logic_vector(resize(signed(ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1827_pp0_it3),33));

    tmp_16_fu_504_p2 <= "1" when (unsigned(p_014_0_i_reg_315) > unsigned(p_src_rows_V_read)) else "0";
    tmp_17_fu_509_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(tmp_14_cast_cast_fu_446_p1));
    tmp_18_cast_cast_fu_850_p1 <= std_logic_vector(resize(unsigned(p_027_0_i_reg_326),12));
    tmp_18_fu_515_p3 <= tmp_17_fu_509_p2(11 downto 11);
    tmp_19_fu_529_p2 <= "1" when (signed(tmp_17_fu_509_p2) < signed(p_src_rows_V_read_cast_fu_341_p1)) else "0";
    tmp_1_fu_372_p2 <= "1" when (p_src_rows_V_read = ap_const_lv11_1) else "0";
    tmp_21_fu_540_p3 <= tmp_17_fu_509_p2(11 downto 11);
    tmp_22_fu_562_p2 <= "1" when (signed(p_p2_i413_i_fu_554_p3) < signed(p_src_rows_V_read_cast_fu_341_p1)) else "0";
    tmp_23_fu_567_p1 <= tmp_8_fu_384_p2(2 - 1 downto 0);
    tmp_24_fu_901_p2 <= "1" when (signed(ImagLoc_x_fu_881_p2) < signed(p_src_cols_V_read_cast_fu_337_p1)) else "0";
    tmp_25_fu_570_p1 <= p_p2_i413_i_fu_554_p3(2 - 1 downto 0);
    tmp_26_fu_580_p3 <= p_assign_6_1_fu_574_p2(11 downto 11);
    tmp_27_fu_963_p2 <= "1" when (signed(p_p2_i_i_reg_1785) < signed(p_src_cols_V_read_cast_fu_337_p1)) else "0";
    tmp_28_fu_605_p3 <= p_assign_6_1_fu_574_p2(11 downto 11);
    tmp_29_fu_1006_p1 <= std_logic_vector(resize(unsigned(col_assign_cast_fu_998_p1),64));
    tmp_2_fu_360_p1 <= p_src_cols_V_read(2 - 1 downto 0);
    tmp_30_fu_632_p1 <= tmp_8_fu_384_p2(2 - 1 downto 0);
    tmp_31_fu_635_p1 <= p_p2_i413_i_1_fu_619_p3(2 - 1 downto 0);
    tmp_32_fu_645_p3 <= p_assign_6_2_fu_639_p2(11 downto 11);
    tmp_36_fu_670_p3 <= p_assign_6_2_fu_639_p2(11 downto 11);
    tmp_37_fu_713_p3 <= 
        tmp_43_fu_709_p1 when (or_cond_i412_i_fu_534_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_38_fu_697_p1 <= tmp_8_fu_384_p2(2 - 1 downto 0);
    tmp_39_fu_739_p3 <= 
        tmp_37_fu_713_p3 when (brmerge2_fu_704_p2(0) = '1') else 
        tmp_52_fu_731_p3;
    tmp_3_fu_420_p2 <= std_logic_vector(signed(ap_const_lv12_FFE) + signed(tmp_s_fu_413_p3));
    tmp_41_fu_700_p1 <= p_p2_i413_i_2_fu_684_p3(2 - 1 downto 0);
    tmp_42_fu_756_p3 <= 
        tmp_53_fu_752_p1 when (or_cond_i412_i_1_fu_599_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_43_fu_709_p1 <= tmp_17_fu_509_p2(2 - 1 downto 0);
    tmp_44_fu_782_p3 <= 
        tmp_42_fu_756_p3 when (brmerge3_fu_747_p2(0) = '1') else 
        tmp_56_fu_774_p3;
    tmp_46_fu_721_p1 <= p_p2_i413_i_fu_554_p3(2 - 1 downto 0);
    tmp_47_fu_799_p3 <= 
        tmp_57_fu_795_p1 when (or_cond_i412_i_2_fu_664_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_48_fu_725_p2 <= std_logic_vector(unsigned(tmp_23_fu_567_p1) - unsigned(tmp_25_fu_570_p1));
    tmp_49_fu_825_p3 <= 
        tmp_47_fu_799_p3 when (brmerge4_fu_790_p2(0) = '1') else 
        tmp_60_fu_817_p3;
    tmp_4_fu_430_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(p_src_cols_V_read));
    tmp_51_fu_1365_p4 <= p_Val2_3_fu_1339_p2(35 downto 32);
    tmp_52_fu_731_p3 <= 
        tmp_46_fu_721_p1 when (tmp_22_fu_562_p2(0) = '1') else 
        tmp_48_fu_725_p2;
    tmp_53_fu_752_p1 <= p_assign_6_1_fu_574_p2(2 - 1 downto 0);
    tmp_54_fu_764_p1 <= p_p2_i413_i_1_fu_619_p3(2 - 1 downto 0);
    tmp_55_fu_768_p2 <= std_logic_vector(unsigned(tmp_30_fu_632_p1) - unsigned(tmp_31_fu_635_p1));
    tmp_56_fu_774_p3 <= 
        tmp_54_fu_764_p1 when (tmp_158_1_fu_627_p2(0) = '1') else 
        tmp_55_fu_768_p2;
    tmp_57_fu_795_p1 <= p_assign_6_2_fu_639_p2(2 - 1 downto 0);
    tmp_58_fu_807_p1 <= p_p2_i413_i_2_fu_684_p3(2 - 1 downto 0);
    tmp_59_fu_811_p2 <= std_logic_vector(unsigned(tmp_38_fu_697_p1) - unsigned(tmp_41_fu_700_p1));
    tmp_5_phi_fu_308_p4 <= tmp_5_reg_304;
    tmp_60_fu_817_p3 <= 
        tmp_58_fu_807_p1 when (tmp_158_2_fu_692_p2(0) = '1') else 
        tmp_59_fu_811_p2;
    tmp_61_fu_865_p4 <= p_027_0_i_reg_326(10 downto 1);
    tmp_62_fu_887_p3 <= ImagLoc_x_fu_881_p2(11 downto 11);
    tmp_63_fu_925_p3 <= ImagLoc_x_fu_881_p2(11 downto 11);
    tmp_64_fu_1002_p1 <= x_fu_990_p3(2 - 1 downto 0);
    tmp_6_fu_345_p2 <= (tmp_5_reg_304 xor ap_const_lv1_1);
    tmp_7_fu_377_p3 <= (p_src_rows_V_read & ap_const_lv1_0);
    tmp_8_fu_384_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) + unsigned(tmp_7_fu_377_p3));
    tmp_8_i_i_fu_1391_p2 <= (isneg_reg_1918 xor ap_const_lv1_1);
    tmp_9_fu_408_p2 <= "1" when (p_src_cols_V_read = ap_const_lv11_1) else "0";
    tmp_fu_351_p1 <= p_src_rows_V_read(2 - 1 downto 0);
    tmp_s_fu_413_p3 <= (p_src_cols_V_read & ap_const_lv1_0);
    ult_fu_466_p2 <= "1" when (unsigned(p_014_0_i_reg_315) < unsigned(p_src_rows_V_read)) else "0";
    underflow_fu_1412_p2 <= (brmerge39_i_i_i_fu_1407_p2 and isneg_reg_1918);
    underflow_not_i_i_fu_1423_p2 <= (underflow_fu_1412_p2 xor ap_const_lv1_1);
    x_fu_990_p3 <= 
        p_p2_i_i_cast_fu_960_p1 when (sel_tmp8_fu_984_p2(0) = '1') else 
        sel_tmp_fu_972_p3;
end behav;
