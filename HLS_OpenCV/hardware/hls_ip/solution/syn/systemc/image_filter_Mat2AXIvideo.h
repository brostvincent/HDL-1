// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _image_filter_Mat2AXIvideo_HH_
#define _image_filter_Mat2AXIvideo_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct image_filter_Mat2AXIvideo : public sc_module {
    // Port declarations 33
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<11> > rows;
    sc_in< sc_lv<11> > cols;
    sc_in< sc_lv<32> > img_data_stream_V_dout;
    sc_in< sc_logic > img_data_stream_V_empty_n;
    sc_out< sc_logic > img_data_stream_V_read;
    sc_out< sc_lv<32> > AXI_video_strm_V_data_V_din;
    sc_in< sc_logic > AXI_video_strm_V_data_V_full_n;
    sc_out< sc_logic > AXI_video_strm_V_data_V_write;
    sc_out< sc_lv<4> > AXI_video_strm_V_keep_V_din;
    sc_in< sc_logic > AXI_video_strm_V_keep_V_full_n;
    sc_out< sc_logic > AXI_video_strm_V_keep_V_write;
    sc_out< sc_lv<4> > AXI_video_strm_V_strb_V_din;
    sc_in< sc_logic > AXI_video_strm_V_strb_V_full_n;
    sc_out< sc_logic > AXI_video_strm_V_strb_V_write;
    sc_out< sc_lv<1> > AXI_video_strm_V_user_V_din;
    sc_in< sc_logic > AXI_video_strm_V_user_V_full_n;
    sc_out< sc_logic > AXI_video_strm_V_user_V_write;
    sc_out< sc_lv<1> > AXI_video_strm_V_last_V_din;
    sc_in< sc_logic > AXI_video_strm_V_last_V_full_n;
    sc_out< sc_logic > AXI_video_strm_V_last_V_write;
    sc_out< sc_lv<1> > AXI_video_strm_V_id_V_din;
    sc_in< sc_logic > AXI_video_strm_V_id_V_full_n;
    sc_out< sc_logic > AXI_video_strm_V_id_V_write;
    sc_out< sc_lv<1> > AXI_video_strm_V_dest_V_din;
    sc_in< sc_logic > AXI_video_strm_V_dest_V_full_n;
    sc_out< sc_logic > AXI_video_strm_V_dest_V_write;


    // Module declarations
    image_filter_Mat2AXIvideo(sc_module_name name);
    SC_HAS_PROCESS(image_filter_Mat2AXIvideo);

    ~image_filter_Mat2AXIvideo();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_23;
    sc_signal< sc_lv<11> > p_3_i_reg_157;
    sc_signal< bool > ap_sig_bdd_71;
    sc_signal< sc_lv<11> > r_V_fu_168_p2;
    sc_signal< sc_lv<1> > exitcond7_i_fu_179_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_85;
    sc_signal< sc_lv<11> > i_V_fu_184_p2;
    sc_signal< sc_lv<11> > i_V_reg_241;
    sc_signal< sc_lv<1> > exitcond_i_fu_190_p2;
    sc_signal< sc_lv<1> > exitcond_i_reg_246;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_2;
    sc_signal< bool > ap_sig_bdd_96;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > AXI_video_strm_V_id_V1_status;
    sc_signal< bool > ap_sig_bdd_108;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<11> > j_V_fu_195_p2;
    sc_signal< sc_lv<1> > axi_last_V_fu_201_p2;
    sc_signal< sc_lv<1> > axi_last_V_reg_255;
    sc_signal< sc_lv<11> > p_i_reg_146;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_3;
    sc_signal< bool > ap_sig_bdd_134;
    sc_signal< sc_logic > AXI_video_strm_V_id_V1_update;
    sc_signal< sc_lv<1> > tmp_user_V_fu_94;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_pp0_stg0_fsm_2;
    static const sc_lv<4> ap_ST_st5_fsm_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<11> ap_const_lv11_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_AXI_video_strm_V_data_V_din();
    void thread_AXI_video_strm_V_data_V_write();
    void thread_AXI_video_strm_V_dest_V_din();
    void thread_AXI_video_strm_V_dest_V_write();
    void thread_AXI_video_strm_V_id_V1_status();
    void thread_AXI_video_strm_V_id_V1_update();
    void thread_AXI_video_strm_V_id_V_din();
    void thread_AXI_video_strm_V_id_V_write();
    void thread_AXI_video_strm_V_keep_V_din();
    void thread_AXI_video_strm_V_keep_V_write();
    void thread_AXI_video_strm_V_last_V_din();
    void thread_AXI_video_strm_V_last_V_write();
    void thread_AXI_video_strm_V_strb_V_din();
    void thread_AXI_video_strm_V_strb_V_write();
    void thread_AXI_video_strm_V_user_V_din();
    void thread_AXI_video_strm_V_user_V_write();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_108();
    void thread_ap_sig_bdd_134();
    void thread_ap_sig_bdd_23();
    void thread_ap_sig_bdd_71();
    void thread_ap_sig_bdd_85();
    void thread_ap_sig_bdd_96();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_2();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st5_fsm_3();
    void thread_axi_last_V_fu_201_p2();
    void thread_exitcond7_i_fu_179_p2();
    void thread_exitcond_i_fu_190_p2();
    void thread_i_V_fu_184_p2();
    void thread_img_data_stream_V_read();
    void thread_j_V_fu_195_p2();
    void thread_r_V_fu_168_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
