// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _image_filter_AXIvideo2Mat_HH_
#define _image_filter_AXIvideo2Mat_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct image_filter_AXIvideo2Mat : public sc_module {
    // Port declarations 33
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > AXI_video_strm_V_data_V_dout;
    sc_in< sc_logic > AXI_video_strm_V_data_V_empty_n;
    sc_out< sc_logic > AXI_video_strm_V_data_V_read;
    sc_in< sc_lv<4> > AXI_video_strm_V_keep_V_dout;
    sc_in< sc_logic > AXI_video_strm_V_keep_V_empty_n;
    sc_out< sc_logic > AXI_video_strm_V_keep_V_read;
    sc_in< sc_lv<4> > AXI_video_strm_V_strb_V_dout;
    sc_in< sc_logic > AXI_video_strm_V_strb_V_empty_n;
    sc_out< sc_logic > AXI_video_strm_V_strb_V_read;
    sc_in< sc_lv<1> > AXI_video_strm_V_user_V_dout;
    sc_in< sc_logic > AXI_video_strm_V_user_V_empty_n;
    sc_out< sc_logic > AXI_video_strm_V_user_V_read;
    sc_in< sc_lv<1> > AXI_video_strm_V_last_V_dout;
    sc_in< sc_logic > AXI_video_strm_V_last_V_empty_n;
    sc_out< sc_logic > AXI_video_strm_V_last_V_read;
    sc_in< sc_lv<1> > AXI_video_strm_V_id_V_dout;
    sc_in< sc_logic > AXI_video_strm_V_id_V_empty_n;
    sc_out< sc_logic > AXI_video_strm_V_id_V_read;
    sc_in< sc_lv<1> > AXI_video_strm_V_dest_V_dout;
    sc_in< sc_logic > AXI_video_strm_V_dest_V_empty_n;
    sc_out< sc_logic > AXI_video_strm_V_dest_V_read;
    sc_in< sc_lv<11> > rows;
    sc_in< sc_lv<11> > cols;
    sc_out< sc_lv<32> > img_data_stream_V_din;
    sc_in< sc_logic > img_data_stream_V_full_n;
    sc_out< sc_logic > img_data_stream_V_write;


    // Module declarations
    image_filter_AXIvideo2Mat(sc_module_name name);
    SC_HAS_PROCESS(image_filter_AXIvideo2Mat);

    ~image_filter_AXIvideo2Mat();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_26;
    sc_signal< sc_lv<11> > p_4_i_reg_162;
    sc_signal< sc_lv<1> > eol_reg_173;
    sc_signal< sc_lv<32> > axi_data_V_1_i_reg_184;
    sc_signal< sc_lv<1> > eol_i_reg_195;
    sc_signal< bool > ap_sig_bdd_84;
    sc_signal< sc_lv<32> > tmp_data_V_reg_332;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_96;
    sc_signal< sc_logic > AXI_video_strm_V_id_V0_status;
    sc_signal< sc_lv<1> > tmp_last_V_reg_340;
    sc_signal< sc_lv<1> > exitcond8_i_fu_286_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_111;
    sc_signal< sc_lv<11> > i_V_fu_291_p2;
    sc_signal< sc_lv<11> > i_V_reg_356;
    sc_signal< sc_lv<1> > exitcond_i_fu_297_p2;
    sc_signal< sc_lv<1> > exitcond_i_reg_361;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg0_fsm_4;
    sc_signal< bool > ap_sig_bdd_122;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_lv<1> > brmerge_i_fu_311_p2;
    sc_signal< bool > ap_sig_bdd_135;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_lv<11> > j_V_fu_302_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_5;
    sc_signal< bool > ap_sig_bdd_151;
    sc_signal< bool > ap_sig_bdd_156;
    sc_signal< sc_lv<1> > axi_last_V_3_i_reg_233;
    sc_signal< sc_lv<1> > axi_last_V1_i_reg_131;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_6;
    sc_signal< bool > ap_sig_bdd_174;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_181;
    sc_signal< sc_lv<32> > axi_data_V_3_i_reg_245;
    sc_signal< sc_lv<32> > axi_data_V1_i_reg_141;
    sc_signal< sc_lv<11> > p_i_reg_151;
    sc_signal< sc_lv<1> > axi_last_V_2_i_phi_fu_212_p4;
    sc_signal< sc_lv<32> > p_Val2_s_phi_fu_224_p4;
    sc_signal< sc_lv<1> > ap_reg_phiprechg_axi_last_V_2_i_reg_207pp1_it1;
    sc_signal< sc_lv<32> > ap_reg_phiprechg_p_Val2_s_reg_220pp1_it1;
    sc_signal< sc_lv<1> > eol_2_i_reg_257;
    sc_signal< sc_logic > AXI_video_strm_V_id_V0_update;
    sc_signal< sc_lv<1> > sof_1_i_fu_90;
    sc_signal< sc_lv<1> > tmp_user_V_fu_277_p1;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_229;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_pp1_stg0_fsm_4;
    static const sc_lv<7> ap_ST_st7_fsm_5;
    static const sc_lv<7> ap_ST_st8_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<11> ap_const_lv11_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_AXI_video_strm_V_data_V_read();
    void thread_AXI_video_strm_V_dest_V_read();
    void thread_AXI_video_strm_V_id_V0_status();
    void thread_AXI_video_strm_V_id_V0_update();
    void thread_AXI_video_strm_V_id_V_read();
    void thread_AXI_video_strm_V_keep_V_read();
    void thread_AXI_video_strm_V_last_V_read();
    void thread_AXI_video_strm_V_strb_V_read();
    void thread_AXI_video_strm_V_user_V_read();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_phiprechg_axi_last_V_2_i_reg_207pp1_it1();
    void thread_ap_reg_phiprechg_p_Val2_s_reg_220pp1_it1();
    void thread_ap_sig_bdd_111();
    void thread_ap_sig_bdd_122();
    void thread_ap_sig_bdd_135();
    void thread_ap_sig_bdd_151();
    void thread_ap_sig_bdd_156();
    void thread_ap_sig_bdd_174();
    void thread_ap_sig_bdd_181();
    void thread_ap_sig_bdd_229();
    void thread_ap_sig_bdd_26();
    void thread_ap_sig_bdd_84();
    void thread_ap_sig_bdd_96();
    void thread_ap_sig_cseq_ST_pp1_stg0_fsm_4();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st7_fsm_5();
    void thread_ap_sig_cseq_ST_st8_fsm_6();
    void thread_axi_last_V_2_i_phi_fu_212_p4();
    void thread_brmerge_i_fu_311_p2();
    void thread_exitcond8_i_fu_286_p2();
    void thread_exitcond_i_fu_297_p2();
    void thread_i_V_fu_291_p2();
    void thread_img_data_stream_V_din();
    void thread_img_data_stream_V_write();
    void thread_j_V_fu_302_p2();
    void thread_p_Val2_s_phi_fu_224_p4();
    void thread_tmp_user_V_fu_277_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
