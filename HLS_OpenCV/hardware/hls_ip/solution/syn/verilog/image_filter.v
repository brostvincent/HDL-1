// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="image_filter,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.640000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=24,HLS_SYN_DSP=24,HLS_SYN_FF=2574,HLS_SYN_LUT=2853}" *)

module image_filter (
        input_V_data_V_dout,
        input_V_data_V_empty_n,
        input_V_data_V_read,
        input_V_keep_V_dout,
        input_V_keep_V_empty_n,
        input_V_keep_V_read,
        input_V_strb_V_dout,
        input_V_strb_V_empty_n,
        input_V_strb_V_read,
        input_V_user_V_dout,
        input_V_user_V_empty_n,
        input_V_user_V_read,
        input_V_last_V_dout,
        input_V_last_V_empty_n,
        input_V_last_V_read,
        input_V_id_V_dout,
        input_V_id_V_empty_n,
        input_V_id_V_read,
        input_V_dest_V_dout,
        input_V_dest_V_empty_n,
        input_V_dest_V_read,
        output_V_data_V_din,
        output_V_data_V_full_n,
        output_V_data_V_write,
        output_V_keep_V_din,
        output_V_keep_V_full_n,
        output_V_keep_V_write,
        output_V_strb_V_din,
        output_V_strb_V_full_n,
        output_V_strb_V_write,
        output_V_user_V_din,
        output_V_user_V_full_n,
        output_V_user_V_write,
        output_V_last_V_din,
        output_V_last_V_full_n,
        output_V_last_V_write,
        output_V_id_V_din,
        output_V_id_V_full_n,
        output_V_id_V_write,
        output_V_dest_V_din,
        output_V_dest_V_full_n,
        output_V_dest_V_write,
        rows,
        cols,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready
);

parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_true = 1'b1;

input  [31:0] input_V_data_V_dout;
input   input_V_data_V_empty_n;
output   input_V_data_V_read;
input  [3:0] input_V_keep_V_dout;
input   input_V_keep_V_empty_n;
output   input_V_keep_V_read;
input  [3:0] input_V_strb_V_dout;
input   input_V_strb_V_empty_n;
output   input_V_strb_V_read;
input  [0:0] input_V_user_V_dout;
input   input_V_user_V_empty_n;
output   input_V_user_V_read;
input  [0:0] input_V_last_V_dout;
input   input_V_last_V_empty_n;
output   input_V_last_V_read;
input  [0:0] input_V_id_V_dout;
input   input_V_id_V_empty_n;
output   input_V_id_V_read;
input  [0:0] input_V_dest_V_dout;
input   input_V_dest_V_empty_n;
output   input_V_dest_V_read;
output  [31:0] output_V_data_V_din;
input   output_V_data_V_full_n;
output   output_V_data_V_write;
output  [3:0] output_V_keep_V_din;
input   output_V_keep_V_full_n;
output   output_V_keep_V_write;
output  [3:0] output_V_strb_V_din;
input   output_V_strb_V_full_n;
output   output_V_strb_V_write;
output  [0:0] output_V_user_V_din;
input   output_V_user_V_full_n;
output   output_V_user_V_write;
output  [0:0] output_V_last_V_din;
input   output_V_last_V_full_n;
output   output_V_last_V_write;
output  [0:0] output_V_id_V_din;
input   output_V_id_V_full_n;
output   output_V_id_V_write;
output  [0:0] output_V_dest_V_din;
input   output_V_dest_V_full_n;
output   output_V_dest_V_write;
input  [31:0] rows;
input  [31:0] cols;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;

reg ap_idle;
wire    image_filter_AXIvideo2Mat_U0_ap_start;
wire    image_filter_AXIvideo2Mat_U0_ap_done;
wire    image_filter_AXIvideo2Mat_U0_ap_continue;
wire    image_filter_AXIvideo2Mat_U0_ap_idle;
wire    image_filter_AXIvideo2Mat_U0_ap_ready;
wire   [31:0] image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_dout;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_empty_n;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_read;
wire   [3:0] image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_dout;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_empty_n;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_read;
wire   [3:0] image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_dout;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_empty_n;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_read;
wire   [0:0] image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_user_V_dout;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_user_V_empty_n;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_user_V_read;
wire   [0:0] image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_last_V_dout;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_last_V_empty_n;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_last_V_read;
wire   [0:0] image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_id_V_dout;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_id_V_empty_n;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_id_V_read;
wire   [0:0] image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_dout;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_empty_n;
wire    image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_read;
wire   [10:0] image_filter_AXIvideo2Mat_U0_rows;
wire   [10:0] image_filter_AXIvideo2Mat_U0_cols;
wire   [31:0] image_filter_AXIvideo2Mat_U0_img_data_stream_V_din;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_V_full_n;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_V_write;
wire    image_filter_Sobel_U0_ap_start;
wire    image_filter_Sobel_U0_ap_done;
wire    image_filter_Sobel_U0_ap_continue;
wire    image_filter_Sobel_U0_ap_idle;
wire    image_filter_Sobel_U0_ap_ready;
wire   [10:0] image_filter_Sobel_U0_rows;
wire   [10:0] image_filter_Sobel_U0_cols;
wire   [31:0] image_filter_Sobel_U0_p_src_data_stream_V_dout;
wire    image_filter_Sobel_U0_p_src_data_stream_V_empty_n;
wire    image_filter_Sobel_U0_p_src_data_stream_V_read;
wire   [31:0] image_filter_Sobel_U0_p_dst_data_stream_V_din;
wire    image_filter_Sobel_U0_p_dst_data_stream_V_full_n;
wire    image_filter_Sobel_U0_p_dst_data_stream_V_write;
wire    image_filter_Sobel_1_U0_ap_start;
wire    image_filter_Sobel_1_U0_ap_done;
wire    image_filter_Sobel_1_U0_ap_continue;
wire    image_filter_Sobel_1_U0_ap_idle;
wire    image_filter_Sobel_1_U0_ap_ready;
wire   [10:0] image_filter_Sobel_1_U0_rows;
wire   [10:0] image_filter_Sobel_1_U0_cols;
wire   [31:0] image_filter_Sobel_1_U0_p_src_data_stream_V_dout;
wire    image_filter_Sobel_1_U0_p_src_data_stream_V_empty_n;
wire    image_filter_Sobel_1_U0_p_src_data_stream_V_read;
wire   [31:0] image_filter_Sobel_1_U0_p_dst_data_stream_V_din;
wire    image_filter_Sobel_1_U0_p_dst_data_stream_V_full_n;
wire    image_filter_Sobel_1_U0_p_dst_data_stream_V_write;
wire    image_filter_Mat2AXIvideo_U0_ap_start;
wire    image_filter_Mat2AXIvideo_U0_ap_done;
wire    image_filter_Mat2AXIvideo_U0_ap_continue;
wire    image_filter_Mat2AXIvideo_U0_ap_idle;
wire    image_filter_Mat2AXIvideo_U0_ap_ready;
wire   [10:0] image_filter_Mat2AXIvideo_U0_rows;
wire   [10:0] image_filter_Mat2AXIvideo_U0_cols;
wire   [31:0] image_filter_Mat2AXIvideo_U0_img_data_stream_V_dout;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_V_empty_n;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_V_read;
wire   [31:0] image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_data_V_din;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_data_V_full_n;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_data_V_write;
wire   [3:0] image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_din;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_full_n;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_write;
wire   [3:0] image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_din;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_full_n;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_write;
wire   [0:0] image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_user_V_din;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_user_V_full_n;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_user_V_write;
wire   [0:0] image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_last_V_din;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_last_V_full_n;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_last_V_write;
wire   [0:0] image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_id_V_din;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_id_V_full_n;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_id_V_write;
wire   [0:0] image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_din;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_full_n;
wire    image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_write;
wire    ap_sig_hs_continue;
wire    img_0_data_stream_0_V_U_ap_dummy_ce;
wire   [31:0] img_0_data_stream_0_V_din;
wire    img_0_data_stream_0_V_full_n;
wire    img_0_data_stream_0_V_write;
wire   [31:0] img_0_data_stream_0_V_dout;
wire    img_0_data_stream_0_V_empty_n;
wire    img_0_data_stream_0_V_read;
wire    img_1_data_stream_0_V_U_ap_dummy_ce;
wire   [31:0] img_1_data_stream_0_V_din;
wire    img_1_data_stream_0_V_full_n;
wire    img_1_data_stream_0_V_write;
wire   [31:0] img_1_data_stream_0_V_dout;
wire    img_1_data_stream_0_V_empty_n;
wire    img_1_data_stream_0_V_read;
wire    img_2_data_stream_0_V_U_ap_dummy_ce;
wire   [31:0] img_2_data_stream_0_V_din;
wire    img_2_data_stream_0_V_full_n;
wire    img_2_data_stream_0_V_write;
wire   [31:0] img_2_data_stream_0_V_dout;
wire    img_2_data_stream_0_V_empty_n;
wire    img_2_data_stream_0_V_read;
reg    ap_reg_procdone_image_filter_AXIvideo2Mat_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_image_filter_Sobel_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Sobel_1_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Mat2AXIvideo_U0 = 1'b0;
reg    ap_CS;
wire    ap_sig_top_allready;


image_filter_AXIvideo2Mat image_filter_AXIvideo2Mat_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( image_filter_AXIvideo2Mat_U0_ap_start ),
    .ap_done( image_filter_AXIvideo2Mat_U0_ap_done ),
    .ap_continue( image_filter_AXIvideo2Mat_U0_ap_continue ),
    .ap_idle( image_filter_AXIvideo2Mat_U0_ap_idle ),
    .ap_ready( image_filter_AXIvideo2Mat_U0_ap_ready ),
    .AXI_video_strm_V_data_V_dout( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_dout ),
    .AXI_video_strm_V_data_V_empty_n( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_empty_n ),
    .AXI_video_strm_V_data_V_read( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_read ),
    .AXI_video_strm_V_keep_V_dout( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_dout ),
    .AXI_video_strm_V_keep_V_empty_n( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_empty_n ),
    .AXI_video_strm_V_keep_V_read( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_read ),
    .AXI_video_strm_V_strb_V_dout( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_dout ),
    .AXI_video_strm_V_strb_V_empty_n( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_empty_n ),
    .AXI_video_strm_V_strb_V_read( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_read ),
    .AXI_video_strm_V_user_V_dout( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_user_V_dout ),
    .AXI_video_strm_V_user_V_empty_n( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_user_V_empty_n ),
    .AXI_video_strm_V_user_V_read( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_user_V_read ),
    .AXI_video_strm_V_last_V_dout( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_last_V_dout ),
    .AXI_video_strm_V_last_V_empty_n( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_last_V_empty_n ),
    .AXI_video_strm_V_last_V_read( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_last_V_read ),
    .AXI_video_strm_V_id_V_dout( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_id_V_dout ),
    .AXI_video_strm_V_id_V_empty_n( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_id_V_empty_n ),
    .AXI_video_strm_V_id_V_read( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_id_V_read ),
    .AXI_video_strm_V_dest_V_dout( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_dout ),
    .AXI_video_strm_V_dest_V_empty_n( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_empty_n ),
    .AXI_video_strm_V_dest_V_read( image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_read ),
    .rows( image_filter_AXIvideo2Mat_U0_rows ),
    .cols( image_filter_AXIvideo2Mat_U0_cols ),
    .img_data_stream_V_din( image_filter_AXIvideo2Mat_U0_img_data_stream_V_din ),
    .img_data_stream_V_full_n( image_filter_AXIvideo2Mat_U0_img_data_stream_V_full_n ),
    .img_data_stream_V_write( image_filter_AXIvideo2Mat_U0_img_data_stream_V_write )
);

image_filter_Sobel image_filter_Sobel_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( image_filter_Sobel_U0_ap_start ),
    .ap_done( image_filter_Sobel_U0_ap_done ),
    .ap_continue( image_filter_Sobel_U0_ap_continue ),
    .ap_idle( image_filter_Sobel_U0_ap_idle ),
    .ap_ready( image_filter_Sobel_U0_ap_ready ),
    .rows( image_filter_Sobel_U0_rows ),
    .cols( image_filter_Sobel_U0_cols ),
    .p_src_data_stream_V_dout( image_filter_Sobel_U0_p_src_data_stream_V_dout ),
    .p_src_data_stream_V_empty_n( image_filter_Sobel_U0_p_src_data_stream_V_empty_n ),
    .p_src_data_stream_V_read( image_filter_Sobel_U0_p_src_data_stream_V_read ),
    .p_dst_data_stream_V_din( image_filter_Sobel_U0_p_dst_data_stream_V_din ),
    .p_dst_data_stream_V_full_n( image_filter_Sobel_U0_p_dst_data_stream_V_full_n ),
    .p_dst_data_stream_V_write( image_filter_Sobel_U0_p_dst_data_stream_V_write )
);

image_filter_Sobel_1 image_filter_Sobel_1_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( image_filter_Sobel_1_U0_ap_start ),
    .ap_done( image_filter_Sobel_1_U0_ap_done ),
    .ap_continue( image_filter_Sobel_1_U0_ap_continue ),
    .ap_idle( image_filter_Sobel_1_U0_ap_idle ),
    .ap_ready( image_filter_Sobel_1_U0_ap_ready ),
    .rows( image_filter_Sobel_1_U0_rows ),
    .cols( image_filter_Sobel_1_U0_cols ),
    .p_src_data_stream_V_dout( image_filter_Sobel_1_U0_p_src_data_stream_V_dout ),
    .p_src_data_stream_V_empty_n( image_filter_Sobel_1_U0_p_src_data_stream_V_empty_n ),
    .p_src_data_stream_V_read( image_filter_Sobel_1_U0_p_src_data_stream_V_read ),
    .p_dst_data_stream_V_din( image_filter_Sobel_1_U0_p_dst_data_stream_V_din ),
    .p_dst_data_stream_V_full_n( image_filter_Sobel_1_U0_p_dst_data_stream_V_full_n ),
    .p_dst_data_stream_V_write( image_filter_Sobel_1_U0_p_dst_data_stream_V_write )
);

image_filter_Mat2AXIvideo image_filter_Mat2AXIvideo_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( image_filter_Mat2AXIvideo_U0_ap_start ),
    .ap_done( image_filter_Mat2AXIvideo_U0_ap_done ),
    .ap_continue( image_filter_Mat2AXIvideo_U0_ap_continue ),
    .ap_idle( image_filter_Mat2AXIvideo_U0_ap_idle ),
    .ap_ready( image_filter_Mat2AXIvideo_U0_ap_ready ),
    .rows( image_filter_Mat2AXIvideo_U0_rows ),
    .cols( image_filter_Mat2AXIvideo_U0_cols ),
    .img_data_stream_V_dout( image_filter_Mat2AXIvideo_U0_img_data_stream_V_dout ),
    .img_data_stream_V_empty_n( image_filter_Mat2AXIvideo_U0_img_data_stream_V_empty_n ),
    .img_data_stream_V_read( image_filter_Mat2AXIvideo_U0_img_data_stream_V_read ),
    .AXI_video_strm_V_data_V_din( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_data_V_din ),
    .AXI_video_strm_V_data_V_full_n( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_data_V_full_n ),
    .AXI_video_strm_V_data_V_write( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_data_V_write ),
    .AXI_video_strm_V_keep_V_din( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_din ),
    .AXI_video_strm_V_keep_V_full_n( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_full_n ),
    .AXI_video_strm_V_keep_V_write( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_write ),
    .AXI_video_strm_V_strb_V_din( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_din ),
    .AXI_video_strm_V_strb_V_full_n( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_full_n ),
    .AXI_video_strm_V_strb_V_write( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_write ),
    .AXI_video_strm_V_user_V_din( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_user_V_din ),
    .AXI_video_strm_V_user_V_full_n( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_user_V_full_n ),
    .AXI_video_strm_V_user_V_write( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_user_V_write ),
    .AXI_video_strm_V_last_V_din( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_last_V_din ),
    .AXI_video_strm_V_last_V_full_n( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_last_V_full_n ),
    .AXI_video_strm_V_last_V_write( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_last_V_write ),
    .AXI_video_strm_V_id_V_din( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_id_V_din ),
    .AXI_video_strm_V_id_V_full_n( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_id_V_full_n ),
    .AXI_video_strm_V_id_V_write( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_id_V_write ),
    .AXI_video_strm_V_dest_V_din( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_din ),
    .AXI_video_strm_V_dest_V_full_n( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_full_n ),
    .AXI_video_strm_V_dest_V_write( image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_write )
);

FIFO_image_filter_img_0_data_stream_0_V img_0_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_0_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_0_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_0_data_stream_0_V_din ),
    .if_full_n( img_0_data_stream_0_V_full_n ),
    .if_write( img_0_data_stream_0_V_write ),
    .if_dout( img_0_data_stream_0_V_dout ),
    .if_empty_n( img_0_data_stream_0_V_empty_n ),
    .if_read( img_0_data_stream_0_V_read )
);

FIFO_image_filter_img_1_data_stream_0_V img_1_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_1_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_1_data_stream_0_V_din ),
    .if_full_n( img_1_data_stream_0_V_full_n ),
    .if_write( img_1_data_stream_0_V_write ),
    .if_dout( img_1_data_stream_0_V_dout ),
    .if_empty_n( img_1_data_stream_0_V_empty_n ),
    .if_read( img_1_data_stream_0_V_read )
);

FIFO_image_filter_img_2_data_stream_0_V img_2_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( img_2_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_2_data_stream_0_V_din ),
    .if_full_n( img_2_data_stream_0_V_full_n ),
    .if_write( img_2_data_stream_0_V_write ),
    .if_dout( img_2_data_stream_0_V_dout ),
    .if_empty_n( img_2_data_stream_0_V_empty_n ),
    .if_read( img_2_data_stream_0_V_read )
);



always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_image_filter_AXIvideo2Mat_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_0;
        end else if ((image_filter_AXIvideo2Mat_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_image_filter_Mat2AXIvideo_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_image_filter_Sobel_1_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_image_filter_Sobel_1_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Sobel_1_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Sobel_1_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Sobel_1_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_image_filter_Sobel_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_image_filter_Sobel_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Sobel_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Sobel_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Sobel_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_CS <= ap_const_logic_0;
end

always @ (image_filter_AXIvideo2Mat_U0_ap_idle or image_filter_Sobel_U0_ap_idle or image_filter_Sobel_1_U0_ap_idle or image_filter_Mat2AXIvideo_U0_ap_idle) begin
    if (((image_filter_AXIvideo2Mat_U0_ap_idle == ap_const_logic_1) & (ap_const_logic_1 == image_filter_Sobel_U0_ap_idle) & (ap_const_logic_1 == image_filter_Sobel_1_U0_ap_idle) & (ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_idle))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (image_filter_Mat2AXIvideo_U0_ap_done) begin
    if ((ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

assign ap_done = ap_sig_hs_done;

assign ap_ready = ap_sig_top_allready;

assign ap_sig_hs_continue = ap_const_logic_1;

assign ap_sig_top_allready = image_filter_AXIvideo2Mat_U0_ap_ready;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_dout = input_V_data_V_dout;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_empty_n = input_V_data_V_empty_n;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_dout = input_V_dest_V_dout;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_empty_n = input_V_dest_V_empty_n;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_id_V_dout = input_V_id_V_dout;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_id_V_empty_n = input_V_id_V_empty_n;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_dout = input_V_keep_V_dout;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_empty_n = input_V_keep_V_empty_n;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_last_V_dout = input_V_last_V_dout;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_last_V_empty_n = input_V_last_V_empty_n;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_dout = input_V_strb_V_dout;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_empty_n = input_V_strb_V_empty_n;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_user_V_dout = input_V_user_V_dout;

assign image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_user_V_empty_n = input_V_user_V_empty_n;

assign image_filter_AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;

assign image_filter_AXIvideo2Mat_U0_ap_start = ap_start;

assign image_filter_AXIvideo2Mat_U0_cols = {{cols[(ap_const_lv32_B - 32'd1) : ap_const_lv32_0]}};

assign image_filter_AXIvideo2Mat_U0_img_data_stream_V_full_n = img_0_data_stream_0_V_full_n;

assign image_filter_AXIvideo2Mat_U0_rows = {{rows[(ap_const_lv32_B - 32'd1) : ap_const_lv32_0]}};

assign image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_data_V_full_n = output_V_data_V_full_n;

assign image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_full_n = output_V_dest_V_full_n;

assign image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_id_V_full_n = output_V_id_V_full_n;

assign image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_full_n = output_V_keep_V_full_n;

assign image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_last_V_full_n = output_V_last_V_full_n;

assign image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_full_n = output_V_strb_V_full_n;

assign image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_user_V_full_n = output_V_user_V_full_n;

assign image_filter_Mat2AXIvideo_U0_ap_continue = ap_sig_hs_continue;

assign image_filter_Mat2AXIvideo_U0_ap_start = ap_start;

assign image_filter_Mat2AXIvideo_U0_cols = {{cols[(ap_const_lv32_B - 32'd1) : ap_const_lv32_0]}};

assign image_filter_Mat2AXIvideo_U0_img_data_stream_V_dout = img_2_data_stream_0_V_dout;

assign image_filter_Mat2AXIvideo_U0_img_data_stream_V_empty_n = img_2_data_stream_0_V_empty_n;

assign image_filter_Mat2AXIvideo_U0_rows = {{rows[(ap_const_lv32_B - 32'd1) : ap_const_lv32_0]}};

assign image_filter_Sobel_1_U0_ap_continue = ap_const_logic_1;

assign image_filter_Sobel_1_U0_ap_start = ap_start;

assign image_filter_Sobel_1_U0_cols = {{cols[(ap_const_lv32_B - 32'd1) : ap_const_lv32_0]}};

assign image_filter_Sobel_1_U0_p_dst_data_stream_V_full_n = img_2_data_stream_0_V_full_n;

assign image_filter_Sobel_1_U0_p_src_data_stream_V_dout = img_1_data_stream_0_V_dout;

assign image_filter_Sobel_1_U0_p_src_data_stream_V_empty_n = img_1_data_stream_0_V_empty_n;

assign image_filter_Sobel_1_U0_rows = {{rows[(ap_const_lv32_B - 32'd1) : ap_const_lv32_0]}};

assign image_filter_Sobel_U0_ap_continue = ap_const_logic_1;

assign image_filter_Sobel_U0_ap_start = ap_start;

assign image_filter_Sobel_U0_cols = {{cols[(ap_const_lv32_B - 32'd1) : ap_const_lv32_0]}};

assign image_filter_Sobel_U0_p_dst_data_stream_V_full_n = img_1_data_stream_0_V_full_n;

assign image_filter_Sobel_U0_p_src_data_stream_V_dout = img_0_data_stream_0_V_dout;

assign image_filter_Sobel_U0_p_src_data_stream_V_empty_n = img_0_data_stream_0_V_empty_n;

assign image_filter_Sobel_U0_rows = {{rows[(ap_const_lv32_B - 32'd1) : ap_const_lv32_0]}};

assign img_0_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;

assign img_0_data_stream_0_V_din = image_filter_AXIvideo2Mat_U0_img_data_stream_V_din;

assign img_0_data_stream_0_V_read = image_filter_Sobel_U0_p_src_data_stream_V_read;

assign img_0_data_stream_0_V_write = image_filter_AXIvideo2Mat_U0_img_data_stream_V_write;

assign img_1_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;

assign img_1_data_stream_0_V_din = image_filter_Sobel_U0_p_dst_data_stream_V_din;

assign img_1_data_stream_0_V_read = image_filter_Sobel_1_U0_p_src_data_stream_V_read;

assign img_1_data_stream_0_V_write = image_filter_Sobel_U0_p_dst_data_stream_V_write;

assign img_2_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;

assign img_2_data_stream_0_V_din = image_filter_Sobel_1_U0_p_dst_data_stream_V_din;

assign img_2_data_stream_0_V_read = image_filter_Mat2AXIvideo_U0_img_data_stream_V_read;

assign img_2_data_stream_0_V_write = image_filter_Sobel_1_U0_p_dst_data_stream_V_write;

assign input_V_data_V_read = image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_read;

assign input_V_dest_V_read = image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_read;

assign input_V_id_V_read = image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_id_V_read;

assign input_V_keep_V_read = image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_read;

assign input_V_last_V_read = image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_last_V_read;

assign input_V_strb_V_read = image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_read;

assign input_V_user_V_read = image_filter_AXIvideo2Mat_U0_AXI_video_strm_V_user_V_read;

assign output_V_data_V_din = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_data_V_din;

assign output_V_data_V_write = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_data_V_write;

assign output_V_dest_V_din = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_din;

assign output_V_dest_V_write = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_write;

assign output_V_id_V_din = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_id_V_din;

assign output_V_id_V_write = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_id_V_write;

assign output_V_keep_V_din = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_din;

assign output_V_keep_V_write = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_write;

assign output_V_last_V_din = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_last_V_din;

assign output_V_last_V_write = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_last_V_write;

assign output_V_strb_V_din = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_din;

assign output_V_strb_V_write = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_write;

assign output_V_user_V_din = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_user_V_din;

assign output_V_user_V_write = image_filter_Mat2AXIvideo_U0_AXI_video_strm_V_user_V_write;


endmodule //image_filter

