// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "image_filter_arithm_pro.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic image_filter_arithm_pro::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic image_filter_arithm_pro::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> image_filter_arithm_pro::ap_ST_st1_fsm_0 = "1";
const sc_lv<4> image_filter_arithm_pro::ap_ST_st2_fsm_1 = "10";
const sc_lv<4> image_filter_arithm_pro::ap_ST_pp0_stg0_fsm_2 = "100";
const sc_lv<4> image_filter_arithm_pro::ap_ST_st6_fsm_3 = "1000";
const sc_lv<32> image_filter_arithm_pro::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> image_filter_arithm_pro::ap_const_lv1_1 = "1";
const sc_lv<32> image_filter_arithm_pro::ap_const_lv32_1 = "1";
const sc_lv<32> image_filter_arithm_pro::ap_const_lv32_2 = "10";
const sc_lv<1> image_filter_arithm_pro::ap_const_lv1_0 = "0";
const sc_lv<11> image_filter_arithm_pro::ap_const_lv11_0 = "00000000000";
const sc_lv<32> image_filter_arithm_pro::ap_const_lv32_3 = "11";
const sc_lv<11> image_filter_arithm_pro::ap_const_lv11_1 = "1";
const sc_lv<8> image_filter_arithm_pro::ap_const_lv8_1 = "1";
const sc_lv<32> image_filter_arithm_pro::ap_const_lv32_7 = "111";
const sc_lv<8> image_filter_arithm_pro::ap_const_lv8_FF = "11111111";

image_filter_arithm_pro::image_filter_arithm_pro(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( exitcond5_fu_149_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond5_fu_149_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_sig_bdd_108);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_reg_ppstg_exitcond6_reg_260_pp0_it1 );

    SC_METHOD(thread_ap_sig_bdd_142);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_94);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( exitcond6_reg_260 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_2);
    sensitive << ( ap_sig_bdd_80 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_22 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_69 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_3);
    sensitive << ( ap_sig_bdd_142 );

    SC_METHOD(thread_dst_data_stream_0_V_din);
    sensitive << ( ap_sig_bdd_94 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond6_reg_260_pp0_it1 );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( p_Val2_6_reg_269 );

    SC_METHOD(thread_dst_data_stream_0_V_write);
    sensitive << ( ap_sig_bdd_94 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond6_reg_260_pp0_it1 );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_dst_data_stream_1_V_din);
    sensitive << ( ap_sig_bdd_94 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond6_reg_260_pp0_it1 );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( p_Val2_7_reg_274 );

    SC_METHOD(thread_dst_data_stream_1_V_write);
    sensitive << ( ap_sig_bdd_94 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond6_reg_260_pp0_it1 );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_dst_data_stream_2_V_din);
    sensitive << ( ap_sig_bdd_94 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond6_reg_260_pp0_it1 );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( p_Val2_8_reg_279 );

    SC_METHOD(thread_dst_data_stream_2_V_write);
    sensitive << ( ap_sig_bdd_94 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond6_reg_260_pp0_it1 );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_exitcond5_fu_149_p2);
    sensitive << ( dst_rows_V_read );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( p_cast_fu_145_p1 );

    SC_METHOD(thread_exitcond6_fu_164_p2);
    sensitive << ( dst_cols_V_read );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_94 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( p_5_cast_fu_160_p1 );

    SC_METHOD(thread_i_V_fu_154_p2);
    sensitive << ( p_s_reg_123 );

    SC_METHOD(thread_j_V_fu_169_p2);
    sensitive << ( p_5_reg_134 );

    SC_METHOD(thread_overflow_1_fu_203_p3);
    sensitive << ( src_data_stream_1_V_dout );

    SC_METHOD(thread_overflow_2_fu_225_p3);
    sensitive << ( src_data_stream_2_V_dout );

    SC_METHOD(thread_overflow_fu_181_p3);
    sensitive << ( src_data_stream_0_V_dout );

    SC_METHOD(thread_p_5_cast_fu_160_p1);
    sensitive << ( p_5_reg_134 );

    SC_METHOD(thread_p_Val2_2_fu_197_p2);
    sensitive << ( src_data_stream_1_V_dout );

    SC_METHOD(thread_p_Val2_4_fu_219_p2);
    sensitive << ( src_data_stream_2_V_dout );

    SC_METHOD(thread_p_Val2_6_fu_189_p3);
    sensitive << ( overflow_fu_181_p3 );
    sensitive << ( p_Val2_s_fu_175_p2 );

    SC_METHOD(thread_p_Val2_7_fu_211_p3);
    sensitive << ( overflow_1_fu_203_p3 );
    sensitive << ( p_Val2_2_fu_197_p2 );

    SC_METHOD(thread_p_Val2_8_fu_233_p3);
    sensitive << ( overflow_2_fu_225_p3 );
    sensitive << ( p_Val2_4_fu_219_p2 );

    SC_METHOD(thread_p_Val2_s_fu_175_p2);
    sensitive << ( src_data_stream_0_V_dout );

    SC_METHOD(thread_p_cast_fu_145_p1);
    sensitive << ( p_s_reg_123 );

    SC_METHOD(thread_src_data_stream_0_V_read);
    sensitive << ( exitcond6_reg_260 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_sig_bdd_94 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_src_data_stream_1_V_read);
    sensitive << ( exitcond6_reg_260 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_sig_bdd_94 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_src_data_stream_2_V_read);
    sensitive << ( exitcond6_reg_260 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_sig_bdd_94 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond5_fu_149_p2 );
    sensitive << ( exitcond6_fu_164_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_94 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_108 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    ap_CS_fsm = "0001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "image_filter_arithm_pro_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_data_stream_0_V_dout, "(port)src_data_stream_0_V_dout");
    sc_trace(mVcdFile, src_data_stream_0_V_empty_n, "(port)src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_0_V_read, "(port)src_data_stream_0_V_read");
    sc_trace(mVcdFile, src_data_stream_1_V_dout, "(port)src_data_stream_1_V_dout");
    sc_trace(mVcdFile, src_data_stream_1_V_empty_n, "(port)src_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_1_V_read, "(port)src_data_stream_1_V_read");
    sc_trace(mVcdFile, src_data_stream_2_V_dout, "(port)src_data_stream_2_V_dout");
    sc_trace(mVcdFile, src_data_stream_2_V_empty_n, "(port)src_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_2_V_read, "(port)src_data_stream_2_V_read");
    sc_trace(mVcdFile, dst_rows_V_read, "(port)dst_rows_V_read");
    sc_trace(mVcdFile, dst_cols_V_read, "(port)dst_cols_V_read");
    sc_trace(mVcdFile, dst_data_stream_0_V_din, "(port)dst_data_stream_0_V_din");
    sc_trace(mVcdFile, dst_data_stream_0_V_full_n, "(port)dst_data_stream_0_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_write, "(port)dst_data_stream_0_V_write");
    sc_trace(mVcdFile, dst_data_stream_1_V_din, "(port)dst_data_stream_1_V_din");
    sc_trace(mVcdFile, dst_data_stream_1_V_full_n, "(port)dst_data_stream_1_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_1_V_write, "(port)dst_data_stream_1_V_write");
    sc_trace(mVcdFile, dst_data_stream_2_V_din, "(port)dst_data_stream_2_V_din");
    sc_trace(mVcdFile, dst_data_stream_2_V_full_n, "(port)dst_data_stream_2_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_write, "(port)dst_data_stream_2_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_22, "ap_sig_bdd_22");
    sc_trace(mVcdFile, p_5_reg_134, "p_5_reg_134");
    sc_trace(mVcdFile, exitcond5_fu_149_p2, "exitcond5_fu_149_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_69, "ap_sig_bdd_69");
    sc_trace(mVcdFile, i_V_fu_154_p2, "i_V_fu_154_p2");
    sc_trace(mVcdFile, i_V_reg_255, "i_V_reg_255");
    sc_trace(mVcdFile, exitcond6_fu_164_p2, "exitcond6_fu_164_p2");
    sc_trace(mVcdFile, exitcond6_reg_260, "exitcond6_reg_260");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_2, "ap_sig_cseq_ST_pp0_stg0_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_80, "ap_sig_bdd_80");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_sig_bdd_94, "ap_sig_bdd_94");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond6_reg_260_pp0_it1, "ap_reg_ppstg_exitcond6_reg_260_pp0_it1");
    sc_trace(mVcdFile, ap_sig_bdd_108, "ap_sig_bdd_108");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, j_V_fu_169_p2, "j_V_fu_169_p2");
    sc_trace(mVcdFile, p_Val2_6_fu_189_p3, "p_Val2_6_fu_189_p3");
    sc_trace(mVcdFile, p_Val2_6_reg_269, "p_Val2_6_reg_269");
    sc_trace(mVcdFile, p_Val2_7_fu_211_p3, "p_Val2_7_fu_211_p3");
    sc_trace(mVcdFile, p_Val2_7_reg_274, "p_Val2_7_reg_274");
    sc_trace(mVcdFile, p_Val2_8_fu_233_p3, "p_Val2_8_fu_233_p3");
    sc_trace(mVcdFile, p_Val2_8_reg_279, "p_Val2_8_reg_279");
    sc_trace(mVcdFile, p_s_reg_123, "p_s_reg_123");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_3, "ap_sig_cseq_ST_st6_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_142, "ap_sig_bdd_142");
    sc_trace(mVcdFile, p_cast_fu_145_p1, "p_cast_fu_145_p1");
    sc_trace(mVcdFile, p_5_cast_fu_160_p1, "p_5_cast_fu_160_p1");
    sc_trace(mVcdFile, overflow_fu_181_p3, "overflow_fu_181_p3");
    sc_trace(mVcdFile, p_Val2_s_fu_175_p2, "p_Val2_s_fu_175_p2");
    sc_trace(mVcdFile, overflow_1_fu_203_p3, "overflow_1_fu_203_p3");
    sc_trace(mVcdFile, p_Val2_2_fu_197_p2, "p_Val2_2_fu_197_p2");
    sc_trace(mVcdFile, overflow_2_fu_225_p3, "overflow_2_fu_225_p3");
    sc_trace(mVcdFile, p_Val2_4_fu_219_p2, "p_Val2_4_fu_219_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

image_filter_arithm_pro::~image_filter_arithm_pro() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void image_filter_arithm_pro::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
             !esl_seteq<1,1,1>(exitcond6_fu_164_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    esl_seteq<1,1,1>(exitcond5_fu_149_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
             esl_seteq<1,1,1>(exitcond6_fu_164_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                     esl_seteq<1,1,1>(exitcond5_fu_149_p2.read(), ap_const_lv1_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
                     !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
                     !esl_seteq<1,1,1>(exitcond6_fu_164_p2.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (!((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())))) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    esl_seteq<1,1,1>(exitcond5_fu_149_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
         esl_seteq<1,1,1>(exitcond6_fu_164_p2.read(), ap_const_lv1_0))) {
        p_5_reg_134 = j_V_fu_169_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond5_fu_149_p2.read(), ap_const_lv1_0))) {
        p_5_reg_134 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_3.read())) {
        p_s_reg_123 = i_V_reg_255.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        p_s_reg_123 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        ap_reg_ppstg_exitcond6_reg_260_pp0_it1 = exitcond6_reg_260.read();
        exitcond6_reg_260 = exitcond6_fu_164_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_V_reg_255 = i_V_fu_154_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && esl_seteq<1,1,1>(exitcond6_reg_260.read(), ap_const_lv1_0) && !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        p_Val2_6_reg_269 = p_Val2_6_fu_189_p3.read();
        p_Val2_7_reg_274 = p_Val2_7_fu_211_p3.read();
        p_Val2_8_reg_279 = p_Val2_8_fu_233_p3.read();
    }
}

void image_filter_arithm_pro::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !esl_seteq<1,1,1>(exitcond5_fu_149_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond5_fu_149_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_ap_sig_bdd_108() {
    ap_sig_bdd_108 = ((esl_seteq<1,1,1>(dst_data_stream_0_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond6_reg_260_pp0_it1.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond6_reg_260_pp0_it1.read()) && 
  esl_seteq<1,1,1>(dst_data_stream_1_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond6_reg_260_pp0_it1.read()) && 
  esl_seteq<1,1,1>(dst_data_stream_2_V_full_n.read(), ap_const_logic_0)));
}

void image_filter_arithm_pro::thread_ap_sig_bdd_142() {
    ap_sig_bdd_142 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void image_filter_arithm_pro::thread_ap_sig_bdd_22() {
    ap_sig_bdd_22 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void image_filter_arithm_pro::thread_ap_sig_bdd_69() {
    ap_sig_bdd_69 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void image_filter_arithm_pro::thread_ap_sig_bdd_80() {
    ap_sig_bdd_80 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void image_filter_arithm_pro::thread_ap_sig_bdd_94() {
    ap_sig_bdd_94 = ((esl_seteq<1,1,1>(src_data_stream_0_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(exitcond6_reg_260.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(exitcond6_reg_260.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(src_data_stream_1_V_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond6_reg_260.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(src_data_stream_2_V_empty_n.read(), ap_const_logic_0)));
}

void image_filter_arithm_pro::thread_ap_sig_cseq_ST_pp0_stg0_fsm_2() {
    if (ap_sig_bdd_80.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_22.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_69.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_ap_sig_cseq_ST_st6_fsm_3() {
    if (ap_sig_bdd_142.read()) {
        ap_sig_cseq_ST_st6_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_3 = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_dst_data_stream_0_V_din() {
    dst_data_stream_0_V_din = p_Val2_6_reg_269.read();
}

void image_filter_arithm_pro::thread_dst_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond6_reg_260_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        dst_data_stream_0_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_0_V_write = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_dst_data_stream_1_V_din() {
    dst_data_stream_1_V_din = p_Val2_7_reg_274.read();
}

void image_filter_arithm_pro::thread_dst_data_stream_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond6_reg_260_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        dst_data_stream_1_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_1_V_write = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_dst_data_stream_2_V_din() {
    dst_data_stream_2_V_din = p_Val2_8_reg_279.read();
}

void image_filter_arithm_pro::thread_dst_data_stream_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond6_reg_260_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        dst_data_stream_2_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_2_V_write = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_exitcond5_fu_149_p2() {
    exitcond5_fu_149_p2 = (!p_cast_fu_145_p1.read().is_01() || !dst_rows_V_read.read().is_01())? sc_lv<1>(): sc_lv<1>(p_cast_fu_145_p1.read() == dst_rows_V_read.read());
}

void image_filter_arithm_pro::thread_exitcond6_fu_164_p2() {
    exitcond6_fu_164_p2 = (!p_5_cast_fu_160_p1.read().is_01() || !dst_cols_V_read.read().is_01())? sc_lv<1>(): sc_lv<1>(p_5_cast_fu_160_p1.read() == dst_cols_V_read.read());
}

void image_filter_arithm_pro::thread_i_V_fu_154_p2() {
    i_V_fu_154_p2 = (!p_s_reg_123.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(p_s_reg_123.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void image_filter_arithm_pro::thread_j_V_fu_169_p2() {
    j_V_fu_169_p2 = (!p_5_reg_134.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(p_5_reg_134.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void image_filter_arithm_pro::thread_overflow_1_fu_203_p3() {
    overflow_1_fu_203_p3 = src_data_stream_1_V_dout.read().range(7, 7);
}

void image_filter_arithm_pro::thread_overflow_2_fu_225_p3() {
    overflow_2_fu_225_p3 = src_data_stream_2_V_dout.read().range(7, 7);
}

void image_filter_arithm_pro::thread_overflow_fu_181_p3() {
    overflow_fu_181_p3 = src_data_stream_0_V_dout.read().range(7, 7);
}

void image_filter_arithm_pro::thread_p_5_cast_fu_160_p1() {
    p_5_cast_fu_160_p1 = esl_zext<12,11>(p_5_reg_134.read());
}

void image_filter_arithm_pro::thread_p_Val2_2_fu_197_p2() {
    p_Val2_2_fu_197_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): src_data_stream_1_V_dout.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void image_filter_arithm_pro::thread_p_Val2_4_fu_219_p2() {
    p_Val2_4_fu_219_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): src_data_stream_2_V_dout.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void image_filter_arithm_pro::thread_p_Val2_6_fu_189_p3() {
    p_Val2_6_fu_189_p3 = (!overflow_fu_181_p3.read()[0].is_01())? sc_lv<8>(): ((overflow_fu_181_p3.read()[0].to_bool())? ap_const_lv8_FF: p_Val2_s_fu_175_p2.read());
}

void image_filter_arithm_pro::thread_p_Val2_7_fu_211_p3() {
    p_Val2_7_fu_211_p3 = (!overflow_1_fu_203_p3.read()[0].is_01())? sc_lv<8>(): ((overflow_1_fu_203_p3.read()[0].to_bool())? ap_const_lv8_FF: p_Val2_2_fu_197_p2.read());
}

void image_filter_arithm_pro::thread_p_Val2_8_fu_233_p3() {
    p_Val2_8_fu_233_p3 = (!overflow_2_fu_225_p3.read()[0].is_01())? sc_lv<8>(): ((overflow_2_fu_225_p3.read()[0].to_bool())? ap_const_lv8_FF: p_Val2_4_fu_219_p2.read());
}

void image_filter_arithm_pro::thread_p_Val2_s_fu_175_p2() {
    p_Val2_s_fu_175_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): src_data_stream_0_V_dout.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void image_filter_arithm_pro::thread_p_cast_fu_145_p1() {
    p_cast_fu_145_p1 = esl_zext<12,11>(p_s_reg_123.read());
}

void image_filter_arithm_pro::thread_src_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(exitcond6_reg_260.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        src_data_stream_0_V_read = ap_const_logic_1;
    } else {
        src_data_stream_0_V_read = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_src_data_stream_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(exitcond6_reg_260.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        src_data_stream_1_V_read = ap_const_logic_1;
    } else {
        src_data_stream_1_V_read = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_src_data_stream_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(exitcond6_reg_260.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        src_data_stream_2_V_read = ap_const_logic_1;
    } else {
        src_data_stream_2_V_read = ap_const_logic_0;
    }
}

void image_filter_arithm_pro::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond5_fu_149_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && !esl_seteq<1,1,1>(exitcond6_fu_164_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
  !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !((ap_sig_bdd_94.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_108.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
  !esl_seteq<1,1,1>(exitcond6_fu_164_p2.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_st6_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

