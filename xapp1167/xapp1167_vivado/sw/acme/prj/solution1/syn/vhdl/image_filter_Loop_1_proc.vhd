-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity image_filter_Loop_1_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    img_0_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_0_data_stream_0_V_empty_n : IN STD_LOGIC;
    img_0_data_stream_0_V_read : OUT STD_LOGIC;
    img_0_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_0_data_stream_1_V_empty_n : IN STD_LOGIC;
    img_0_data_stream_1_V_read : OUT STD_LOGIC;
    img_0_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_0_data_stream_2_V_empty_n : IN STD_LOGIC;
    img_0_data_stream_2_V_read : OUT STD_LOGIC;
    img_1_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_1_data_stream_0_V_full_n : IN STD_LOGIC;
    img_1_data_stream_0_V_write : OUT STD_LOGIC;
    img_1_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_1_data_stream_1_V_full_n : IN STD_LOGIC;
    img_1_data_stream_1_V_write : OUT STD_LOGIC;
    img_1_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_1_data_stream_2_V_full_n : IN STD_LOGIC;
    img_1_data_stream_2_V_write : OUT STD_LOGIC );
end;


architecture behav of image_filter_Loop_1_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st12_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv10_80 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_37 : STD_LOGIC_VECTOR (7 downto 0) := "00110111";
    constant ap_const_lv8_CD : STD_LOGIC_VECTOR (7 downto 0) := "11001101";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv9_3C : STD_LOGIC_VECTOR (8 downto 0) := "000111100";
    constant ap_const_lv9_22 : STD_LOGIC_VECTOR (8 downto 0) := "000100010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv13_19 : STD_LOGIC_VECTOR (12 downto 0) := "0000000011001";
    constant ap_const_lv22_556 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010101010110";
    constant ap_true : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal col_reg_341 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_cast_fu_373_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_bdd_65 : BOOLEAN;
    signal tmp_11_cast_fu_387_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_391_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_fu_397_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_403_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_24_fu_407_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond1_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_85 : BOOLEAN;
    signal row_1_fu_420_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_1_reg_1326 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_9_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1331 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1336 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1341 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_1346 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1351 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_107 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal or_cond_reg_1360 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_124 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal or_cond2_reg_1410 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_1410_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_152 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_1351_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1351_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1351_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1351_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1351_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1351_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_1_fu_459_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_cond_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_1_0_val_addr_reg_1364 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_1_val_addr_reg_1370 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_2_val_addr_reg_1376 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_0_val_addr_reg_1382 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_line_buffer_0_0_val_addr_reg_1382_pp0_it1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_1_val_addr_reg_1388 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_line_buffer_0_1_val_addr_reg_1388_pp0_it1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_2_val_addr_reg_1394 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_line_buffer_0_2_val_addr_reg_1394_pp0_it1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp11_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp11_reg_1400 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp12_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp12_reg_1405 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_1410_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_1410_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_1410_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_1410_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_1410_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_1410_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_1_0_val_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_reg_1414 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_1_val_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal G_reg_1419 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_2_val_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_reg_1425 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp9_fu_554_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp9_reg_1430 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_0_0_val_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_0_reg_1435 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_val_0_reg_1435_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_val_0_reg_1435_pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_val_0_reg_1435_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_val_0_reg_1435_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_0_1_val_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_1_reg_1442 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_val_1_reg_1442_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_0_2_val_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_2_reg_1449 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_pix_val_2_reg_1449_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond3_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1455 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1455_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1455_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1455_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1455_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1455_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal G_4_reg_1459 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_reg_1464 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_653_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp4_reg_1469 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_i2_fu_701_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_i2_reg_1474 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1203_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp10_reg_1479 : STD_LOGIC_VECTOR (12 downto 0);
    signal y_window_2_1_1_reg_1484 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_y_window_2_1_1_reg_1484_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_fu_710_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_reg_1490 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i1_reg_1495 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_2_fu_820_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_2_reg_1500 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_i3_fu_832_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_i3_reg_1506 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_tmp_2_i3_reg_1506_pp0_it4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_tmp_2_i3_reg_1506_pp0_it5 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_2_1_2_i_fu_916_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_2_1_2_i_reg_1511 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_19_2_cast_i_fu_942_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_19_2_cast_i_reg_1516 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_2_2_i_fu_945_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_2_2_i_reg_1521 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_29_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_29_reg_1526 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1021_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_reg_1531 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_1025_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_reg_1536 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_i_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_reg_1541 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1037_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_reg_1546 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_1041_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_reg_1551 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_weight_i_fu_1061_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_weight_i_reg_1556 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_i_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_i_reg_1561 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i3_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i3_reg_1567 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1229_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_reg_1572 : STD_LOGIC_VECTOR (21 downto 0);
    signal edge_val_1_fu_1107_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sepia_val_0_reg_1583 : STD_LOGIC_VECTOR (7 downto 0);
    signal sepia_val_2_fu_1157_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sepia_val_2_reg_1588 : STD_LOGIC_VECTOR (7 downto 0);
    signal sepia_val_1_fu_1177_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sepia_val_1_reg_1593 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_0_0_val_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_0_val_ce0 : STD_LOGIC;
    signal line_buffer_0_0_val_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_0_val_ce1 : STD_LOGIC;
    signal line_buffer_0_0_val_we1 : STD_LOGIC;
    signal line_buffer_0_0_val_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_0_1_val_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_1_val_ce0 : STD_LOGIC;
    signal line_buffer_0_1_val_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_1_val_ce1 : STD_LOGIC;
    signal line_buffer_0_1_val_we1 : STD_LOGIC;
    signal line_buffer_0_1_val_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_0_2_val_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_2_val_ce0 : STD_LOGIC;
    signal line_buffer_0_2_val_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_2_val_ce1 : STD_LOGIC;
    signal line_buffer_0_2_val_we1 : STD_LOGIC;
    signal line_buffer_0_2_val_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_0_val_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_0_val_ce0 : STD_LOGIC;
    signal line_buffer_1_0_val_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_0_val_ce1 : STD_LOGIC;
    signal line_buffer_1_0_val_we1 : STD_LOGIC;
    signal line_buffer_1_0_val_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_1_val_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_1_val_ce0 : STD_LOGIC;
    signal line_buffer_1_1_val_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_1_val_ce1 : STD_LOGIC;
    signal line_buffer_1_1_val_we1 : STD_LOGIC;
    signal line_buffer_1_1_val_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_2_val_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_2_val_ce0 : STD_LOGIC;
    signal line_buffer_1_2_val_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_2_val_ce1 : STD_LOGIC;
    signal line_buffer_1_2_val_we1 : STD_LOGIC;
    signal line_buffer_1_2_val_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_reg_330 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_390 : BOOLEAN;
    signal ap_reg_phiprechg_edge_val1_reg_352pp0_it7 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_edge_val1_reg_352pp0_it8 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_edge_val1_reg_352pp0_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_edge_val1_reg_352pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_edge_val1_reg_352pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_edge_val1_reg_352pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_edge_val1_reg_352pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_edge_val1_reg_352pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_479_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_window_0_1_fu_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_window_0_2_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_window_2_2_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_window_1_1_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_1_fu_843_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_window_1_2_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_window_2_1_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_1_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal G_1_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_1_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_363_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_367_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_fu_377_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_6_fu_381_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_cast_fu_411_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_row_fu_431_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_cast_fu_465_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_col_fu_489_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_17_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl2_i_fu_542_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_cast_i_cast_fu_550_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl1_i_fu_576_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl_i_fu_590_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl1_cast_i_fu_583_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp58_cast_fu_604_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_i_fu_607_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_cast_i_fu_613_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl_cast_i_fu_597_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1220_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp2_fu_617_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp60_cast_fu_623_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_i_fu_626_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl2_i6_fu_642_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_cast_i7_cast_fu_649_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl1_i1_fu_659_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl2_i1_fu_671_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_cast_i29_cast_fu_679_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp7_fu_691_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl1_cast_i1_fu_667_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp64_cast_fu_697_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl1_i4_fu_715_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl_i1_fu_729_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl1_cast_i5_fu_722_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp61_cast_fu_743_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_i1_fu_746_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_cast_i1_fu_752_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl_cast_i1_fu_736_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1211_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp5_fu_756_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp63_cast_fu_762_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_i1_fu_765_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl_i2_fu_781_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_cast_i2_fu_792_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl_cast_i2_fu_788_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_fu_795_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp66_cast_fu_801_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_i2_fu_804_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i2_fu_810_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_cast_i2_fu_826_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_cast_i_fu_829_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_0_1_i_fu_860_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_0_2_cast1_i_cast_fu_872_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_0_cast2_i_cast_fu_857_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_2_0_2_i_fu_876_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl8_i_fu_886_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_2_0_2_cast_i_fu_882_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl8_cast_i_fu_894_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_1_2_i_fu_904_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_21_1_2_cast_i_fu_912_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_2_1_1_i_fu_898_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp13_fu_922_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_0_1_cast_i_fu_868_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp69_cast_fu_928_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_weight_2_1_2_i_fu_932_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_weight_2_1_2_cast_i_fu_938_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_i3_fu_983_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_cast_i3_fu_990_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_19_2_2_cast_i_fu_999_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_2_2_i_fu_979_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_2_2_1_i_fu_994_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_2_2_2_i_fu_1003_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_2_2_2_i_fu_1009_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_fu_1051_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_1056_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal not_tmp_7_i_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_cast_fu_1095_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_fu_1085_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_cast_i_fu_1115_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal R_3_fu_1124_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_fu_1145_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1153_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal G_3_fu_1130_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_fu_1165_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1173_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1203_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1203_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1203_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1211_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1211_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1211_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1220_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1220_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1220_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1229_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1229_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1229_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1203_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1203_p20 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1211_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1211_p20 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1220_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1220_p20 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1229_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1229_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_bdd_416 : BOOLEAN;
    signal ap_sig_bdd_405 : BOOLEAN;
    signal ap_sig_bdd_309 : BOOLEAN;
    signal ap_sig_bdd_397 : BOOLEAN;

    component image_filter_mac_muladd_8ns_6ns_8ns_13_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component image_filter_am_addmul_8ns_9ns_12ns_22_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component image_filter_Loop_1_proc_line_buffer_0_0_val IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    line_buffer_0_0_val_U : component image_filter_Loop_1_proc_line_buffer_0_0_val
    generic map (
        DataWidth => 8,
        AddressRange => 1921,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_0_0_val_address0,
        ce0 => line_buffer_0_0_val_ce0,
        q0 => line_buffer_0_0_val_q0,
        address1 => line_buffer_0_0_val_address1,
        ce1 => line_buffer_0_0_val_ce1,
        we1 => line_buffer_0_0_val_we1,
        d1 => line_buffer_0_0_val_d1);

    line_buffer_0_1_val_U : component image_filter_Loop_1_proc_line_buffer_0_0_val
    generic map (
        DataWidth => 8,
        AddressRange => 1921,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_0_1_val_address0,
        ce0 => line_buffer_0_1_val_ce0,
        q0 => line_buffer_0_1_val_q0,
        address1 => line_buffer_0_1_val_address1,
        ce1 => line_buffer_0_1_val_ce1,
        we1 => line_buffer_0_1_val_we1,
        d1 => line_buffer_0_1_val_d1);

    line_buffer_0_2_val_U : component image_filter_Loop_1_proc_line_buffer_0_0_val
    generic map (
        DataWidth => 8,
        AddressRange => 1921,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_0_2_val_address0,
        ce0 => line_buffer_0_2_val_ce0,
        q0 => line_buffer_0_2_val_q0,
        address1 => line_buffer_0_2_val_address1,
        ce1 => line_buffer_0_2_val_ce1,
        we1 => line_buffer_0_2_val_we1,
        d1 => line_buffer_0_2_val_d1);

    line_buffer_1_0_val_U : component image_filter_Loop_1_proc_line_buffer_0_0_val
    generic map (
        DataWidth => 8,
        AddressRange => 1921,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_1_0_val_address0,
        ce0 => line_buffer_1_0_val_ce0,
        q0 => line_buffer_1_0_val_q0,
        address1 => line_buffer_1_0_val_address1,
        ce1 => line_buffer_1_0_val_ce1,
        we1 => line_buffer_1_0_val_we1,
        d1 => line_buffer_1_0_val_d1);

    line_buffer_1_1_val_U : component image_filter_Loop_1_proc_line_buffer_0_0_val
    generic map (
        DataWidth => 8,
        AddressRange => 1921,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_1_1_val_address0,
        ce0 => line_buffer_1_1_val_ce0,
        q0 => line_buffer_1_1_val_q0,
        address1 => line_buffer_1_1_val_address1,
        ce1 => line_buffer_1_1_val_ce1,
        we1 => line_buffer_1_1_val_we1,
        d1 => line_buffer_1_1_val_d1);

    line_buffer_1_2_val_U : component image_filter_Loop_1_proc_line_buffer_0_0_val
    generic map (
        DataWidth => 8,
        AddressRange => 1921,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_1_2_val_address0,
        ce0 => line_buffer_1_2_val_ce0,
        q0 => line_buffer_1_2_val_q0,
        address1 => line_buffer_1_2_val_address1,
        ce1 => line_buffer_1_2_val_ce1,
        we1 => line_buffer_1_2_val_we1,
        d1 => line_buffer_1_2_val_d1);

    image_filter_mac_muladd_8ns_6ns_8ns_13_1_U15 : component image_filter_mac_muladd_8ns_6ns_8ns_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1203_p0,
        din1 => grp_fu_1203_p1,
        din2 => grp_fu_1203_p2,
        dout => grp_fu_1203_p3);

    image_filter_mac_muladd_8ns_6ns_8ns_13_1_U16 : component image_filter_mac_muladd_8ns_6ns_8ns_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1211_p0,
        din1 => grp_fu_1211_p1,
        din2 => grp_fu_1211_p2,
        dout => grp_fu_1211_p3);

    image_filter_mac_muladd_8ns_6ns_8ns_13_1_U17 : component image_filter_mac_muladd_8ns_6ns_8ns_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1220_p0,
        din1 => grp_fu_1220_p1,
        din2 => grp_fu_1220_p2,
        dout => grp_fu_1220_p3);

    image_filter_am_addmul_8ns_9ns_12ns_22_1_U18 : component image_filter_am_addmul_8ns_9ns_12ns_22_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 9,
        din2_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1229_p0,
        din1 => grp_fu_1229_p1,
        din2 => grp_fu_1229_p2,
        dout => grp_fu_1229_p3);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_415_p2 = ap_const_lv1_0)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = exitcond_fu_454_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_415_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_415_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) then 
                        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
                        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_415_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_phiprechg_edge_val1_reg_352pp0_it2 assign process. --
    ap_reg_phiprechg_edge_val1_reg_352pp0_it2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_405) then
                if (ap_sig_bdd_416) then 
                    ap_reg_phiprechg_edge_val1_reg_352pp0_it2 <= ap_const_lv8_0;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_edge_val1_reg_352pp0_it2 <= ap_reg_phiprechg_edge_val1_reg_352pp0_it1;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_edge_val1_reg_352pp0_it8 assign process. --
    ap_reg_phiprechg_edge_val1_reg_352pp0_it8_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_397) then
                if (ap_sig_bdd_309) then 
                    ap_reg_phiprechg_edge_val1_reg_352pp0_it8 <= edge_val_1_fu_1107_p3;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_edge_val1_reg_352pp0_it8 <= ap_reg_phiprechg_edge_val1_reg_352pp0_it7;
                end if;
            end if; 
        end if;
    end process;

    -- col_reg_341 assign process. --
    col_reg_341_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = exitcond_fu_454_p2))) then 
                col_reg_341 <= col_1_fu_459_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_415_p2 = ap_const_lv1_0))) then 
                col_reg_341 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- row_reg_330 assign process. --
    row_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_3)) then 
                row_reg_330 <= row_1_reg_1326;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_65))) then 
                row_reg_330 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_1351) and not((ap_const_lv1_0 = or_cond_reg_1360)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                B_1_fu_156 <= img_0_data_stream_2_V_dout;
                G_1_fu_160 <= img_0_data_stream_1_V_dout;
                R_1_fu_164 <= img_0_data_stream_0_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_1351) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                B_reg_1425 <= line_buffer_1_2_val_q0;
                G_reg_1419 <= line_buffer_1_1_val_q0;
                R_reg_1414 <= line_buffer_1_0_val_q0;
                or_cond3_reg_1455 <= or_cond3_fu_560_p2;
                pix_val_0_reg_1435 <= line_buffer_0_0_val_q0;
                pix_val_1_reg_1442 <= line_buffer_0_1_val_q0;
                pix_val_2_reg_1449 <= line_buffer_0_2_val_q0;
                    tmp9_reg_1430(9 downto 1) <= tmp9_fu_554_p2(9 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it1))) then
                G_4_reg_1459 <= G_1_fu_160;
                tmp10_reg_1479 <= grp_fu_1203_p3;
                    tmp4_reg_1469(9 downto 1) <= tmp4_fu_653_p2(9 downto 1);
                    tmp_6_i2_reg_1474(14 downto 1) <= tmp_6_i2_fu_701_p2(14 downto 1);
                tmp_i_reg_1464 <= tmp_8_i_fu_626_p2(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                ap_reg_phiprechg_edge_val1_reg_352pp0_it3 <= ap_reg_phiprechg_edge_val1_reg_352pp0_it2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                ap_reg_phiprechg_edge_val1_reg_352pp0_it4 <= ap_reg_phiprechg_edge_val1_reg_352pp0_it3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                ap_reg_phiprechg_edge_val1_reg_352pp0_it5 <= ap_reg_phiprechg_edge_val1_reg_352pp0_it4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                ap_reg_phiprechg_edge_val1_reg_352pp0_it6 <= ap_reg_phiprechg_edge_val1_reg_352pp0_it5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                ap_reg_phiprechg_edge_val1_reg_352pp0_it7 <= ap_reg_phiprechg_edge_val1_reg_352pp0_it6;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                ap_reg_ppstg_exitcond_reg_1351_pp0_it1 <= exitcond_reg_1351;
                ap_reg_ppstg_line_buffer_0_0_val_addr_reg_1382_pp0_it1 <= line_buffer_0_0_val_addr_reg_1382;
                ap_reg_ppstg_line_buffer_0_1_val_addr_reg_1388_pp0_it1 <= line_buffer_0_1_val_addr_reg_1388;
                ap_reg_ppstg_line_buffer_0_2_val_addr_reg_1394_pp0_it1 <= line_buffer_0_2_val_addr_reg_1394;
                ap_reg_ppstg_or_cond2_reg_1410_pp0_it1 <= or_cond2_reg_1410;
                exitcond_reg_1351 <= exitcond_fu_454_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then
                ap_reg_ppstg_exitcond_reg_1351_pp0_it2 <= ap_reg_ppstg_exitcond_reg_1351_pp0_it1;
                ap_reg_ppstg_exitcond_reg_1351_pp0_it3 <= ap_reg_ppstg_exitcond_reg_1351_pp0_it2;
                ap_reg_ppstg_exitcond_reg_1351_pp0_it4 <= ap_reg_ppstg_exitcond_reg_1351_pp0_it3;
                ap_reg_ppstg_exitcond_reg_1351_pp0_it5 <= ap_reg_ppstg_exitcond_reg_1351_pp0_it4;
                ap_reg_ppstg_exitcond_reg_1351_pp0_it6 <= ap_reg_ppstg_exitcond_reg_1351_pp0_it5;
                ap_reg_ppstg_or_cond2_reg_1410_pp0_it2 <= ap_reg_ppstg_or_cond2_reg_1410_pp0_it1;
                ap_reg_ppstg_or_cond2_reg_1410_pp0_it3 <= ap_reg_ppstg_or_cond2_reg_1410_pp0_it2;
                ap_reg_ppstg_or_cond2_reg_1410_pp0_it4 <= ap_reg_ppstg_or_cond2_reg_1410_pp0_it3;
                ap_reg_ppstg_or_cond2_reg_1410_pp0_it5 <= ap_reg_ppstg_or_cond2_reg_1410_pp0_it4;
                ap_reg_ppstg_or_cond2_reg_1410_pp0_it6 <= ap_reg_ppstg_or_cond2_reg_1410_pp0_it5;
                ap_reg_ppstg_or_cond2_reg_1410_pp0_it7 <= ap_reg_ppstg_or_cond2_reg_1410_pp0_it6;
                ap_reg_ppstg_or_cond3_reg_1455_pp0_it2 <= or_cond3_reg_1455;
                ap_reg_ppstg_or_cond3_reg_1455_pp0_it3 <= ap_reg_ppstg_or_cond3_reg_1455_pp0_it2;
                ap_reg_ppstg_or_cond3_reg_1455_pp0_it4 <= ap_reg_ppstg_or_cond3_reg_1455_pp0_it3;
                ap_reg_ppstg_or_cond3_reg_1455_pp0_it5 <= ap_reg_ppstg_or_cond3_reg_1455_pp0_it4;
                ap_reg_ppstg_or_cond3_reg_1455_pp0_it6 <= ap_reg_ppstg_or_cond3_reg_1455_pp0_it5;
                ap_reg_ppstg_pix_val_0_reg_1435_pp0_it2 <= pix_val_0_reg_1435;
                ap_reg_ppstg_pix_val_0_reg_1435_pp0_it3 <= ap_reg_ppstg_pix_val_0_reg_1435_pp0_it2;
                ap_reg_ppstg_pix_val_0_reg_1435_pp0_it4 <= ap_reg_ppstg_pix_val_0_reg_1435_pp0_it3;
                ap_reg_ppstg_pix_val_0_reg_1435_pp0_it5 <= ap_reg_ppstg_pix_val_0_reg_1435_pp0_it4;
                ap_reg_ppstg_pix_val_1_reg_1442_pp0_it2 <= pix_val_1_reg_1442;
                ap_reg_ppstg_pix_val_2_reg_1449_pp0_it2 <= pix_val_2_reg_1449;
                ap_reg_ppstg_tmp_2_i3_reg_1506_pp0_it4 <= tmp_2_i3_reg_1506;
                ap_reg_ppstg_tmp_2_i3_reg_1506_pp0_it5 <= ap_reg_ppstg_tmp_2_i3_reg_1506_pp0_it4;
                ap_reg_ppstg_y_window_2_1_1_reg_1484_pp0_it4 <= y_window_2_1_1_reg_1484;
                mul_reg_1572 <= grp_fu_1229_p3;
                sepia_val_0_reg_1583 <= mul_reg_1572(19 downto 12);
                sepia_val_1_reg_1593 <= sepia_val_1_fu_1177_p3;
                sepia_val_2_reg_1588 <= sepia_val_2_fu_1157_p3;
                y_window_2_1_1_reg_1484 <= y_window_2_1_fu_152;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it5) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond3_reg_1455_pp0_it5))) then
                edge_weight_i_reg_1556 <= edge_weight_i_fu_1061_p2;
                tmp_7_i_reg_1561 <= tmp_7_i_fu_1067_p2;
                tmp_8_i3_reg_1567 <= tmp_8_i3_fu_1073_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = exitcond_fu_454_p2))) then
                line_buffer_0_0_val_addr_reg_1382 <= tmp_16_fu_479_p1(11 - 1 downto 0);
                line_buffer_0_1_val_addr_reg_1388 <= tmp_16_fu_479_p1(11 - 1 downto 0);
                line_buffer_0_2_val_addr_reg_1394 <= tmp_16_fu_479_p1(11 - 1 downto 0);
                line_buffer_1_0_val_addr_reg_1364 <= tmp_16_fu_479_p1(11 - 1 downto 0);
                line_buffer_1_1_val_addr_reg_1370 <= tmp_16_fu_479_p1(11 - 1 downto 0);
                line_buffer_1_2_val_addr_reg_1376 <= tmp_16_fu_479_p1(11 - 1 downto 0);
                or_cond2_reg_1410 <= or_cond2_fu_522_p2;
                or_cond_reg_1360 <= or_cond_fu_474_p2;
                tmp11_reg_1400 <= tmp11_fu_506_p2;
                tmp12_reg_1405 <= tmp12_fu_511_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                row_1_reg_1326 <= row_1_fu_420_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_415_p2 = ap_const_lv1_0))) then
                tmp_10_reg_1336 <= tmp_10_fu_437_p2;
                tmp_11_reg_1341 <= tmp_11_fu_443_p2;
                tmp_12_reg_1346 <= tmp_12_fu_449_p2;
                tmp_9_reg_1331 <= tmp_9_fu_426_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond3_reg_1455_pp0_it3))) then
                    tmp_19_2_cast_i_reg_1516(7 downto 0) <= tmp_19_2_cast_i_fu_942_p1(7 downto 0);
                x_weight_2_1_2_i_reg_1511 <= x_weight_2_1_2_i_fu_916_p2;
                y_weight_2_2_i_reg_1521 <= y_weight_2_2_i_fu_945_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond3_reg_1455_pp0_it4))) then
                tmp_22_reg_1536 <= tmp_22_fu_1025_p2;
                tmp_25_reg_1551 <= tmp_25_fu_1041_p2;
                tmp_28_reg_1531 <= tmp_28_fu_1021_p1;
                tmp_29_reg_1546 <= tmp_29_fu_1037_p1;
                tmp_4_i_reg_1541 <= tmp_4_i_fu_1031_p2;
                tmp_i_29_reg_1526 <= tmp_i_29_fu_1015_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it2))) then
                tmp_2_i3_reg_1506 <= tmp_2_i3_fu_832_p2;
                tmp_i1_reg_1495 <= tmp_8_i1_fu_765_p2(15 downto 8);
                y_2_reg_1500 <= y_2_fu_820_p2;
                y_reg_1490 <= y_fu_710_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it3))) then
                y_window_0_1_fu_132 <= y_2_reg_1500;
                y_window_0_2_fu_136 <= y_window_0_1_fu_132;
                y_window_1_1_fu_144 <= y_1_fu_843_p2;
                y_window_1_2_fu_148 <= y_window_1_1_fu_144;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it2))) then
                y_window_2_1_fu_152 <= y_fu_710_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it4))) then
                y_window_2_2_fu_140 <= ap_reg_ppstg_y_window_2_1_1_reg_1484_pp0_it4;
            end if;
        end if;
    end process;
    tmp9_reg_1430(0) <= '0';
    tmp4_reg_1469(0) <= '0';
    tmp_6_i2_reg_1474(0) <= '0';
    tmp_19_2_cast_i_reg_1516(10 downto 8) <= "000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_bdd_65, exitcond1_fu_415_p2, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it7, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_65)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond1_fu_415_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4))))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st12_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    B_cast_i_fu_1115_p4 <= mul_reg_1572(20 downto 12);
    G_3_fu_1130_p2 <= std_logic_vector(unsigned(ap_const_lv9_22) + unsigned(B_cast_i_fu_1115_p4));
    R_3_fu_1124_p2 <= std_logic_vector(unsigned(ap_const_lv9_3C) + unsigned(B_cast_i_fu_1115_p4));

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, exitcond1_fu_415_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_415_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(exitcond1_fu_415_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_415_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_edge_val1_reg_352pp0_it1 <= "XXXXXXXX";

    -- ap_sig_bdd_107 assign process. --
    ap_sig_bdd_107_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_107 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_124 assign process. --
    ap_sig_bdd_124_assign_proc : process(img_0_data_stream_0_V_empty_n, img_0_data_stream_1_V_empty_n, img_0_data_stream_2_V_empty_n, exitcond_reg_1351, or_cond_reg_1360)
    begin
                ap_sig_bdd_124 <= (((img_0_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = exitcond_reg_1351) and not((ap_const_lv1_0 = or_cond_reg_1360))) or ((ap_const_lv1_0 = exitcond_reg_1351) and not((ap_const_lv1_0 = or_cond_reg_1360)) and (img_0_data_stream_1_V_empty_n = ap_const_logic_0)) or ((ap_const_lv1_0 = exitcond_reg_1351) and not((ap_const_lv1_0 = or_cond_reg_1360)) and (img_0_data_stream_2_V_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_152 assign process. --
    ap_sig_bdd_152_assign_proc : process(img_1_data_stream_0_V_full_n, img_1_data_stream_1_V_full_n, img_1_data_stream_2_V_full_n, ap_reg_ppstg_or_cond2_reg_1410_pp0_it7)
    begin
                ap_sig_bdd_152 <= (((img_1_data_stream_0_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1410_pp0_it7))) or (not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1410_pp0_it7)) and (img_1_data_stream_1_V_full_n = ap_const_logic_0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1410_pp0_it7)) and (img_1_data_stream_2_V_full_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_309 assign process. --
    ap_sig_bdd_309_assign_proc : process(ap_reg_ppstg_exitcond_reg_1351_pp0_it6, ap_reg_ppstg_or_cond3_reg_1455_pp0_it6)
    begin
                ap_sig_bdd_309 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it6) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond3_reg_1455_pp0_it6));
    end process;


    -- ap_sig_bdd_390 assign process. --
    ap_sig_bdd_390_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_390 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_397 assign process. --
    ap_sig_bdd_397_assign_proc : process(ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it7, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
                ap_sig_bdd_397 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))));
    end process;


    -- ap_sig_bdd_405 assign process. --
    ap_sig_bdd_405_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
                ap_sig_bdd_405 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))));
    end process;


    -- ap_sig_bdd_416 assign process. --
    ap_sig_bdd_416_assign_proc : process(exitcond_reg_1351, or_cond3_fu_560_p2)
    begin
                ap_sig_bdd_416 <= ((ap_const_lv1_0 = exitcond_reg_1351) and not((ap_const_lv1_0 = or_cond3_fu_560_p2)));
    end process;


    -- ap_sig_bdd_65 assign process. --
    ap_sig_bdd_65_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_65 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_85 assign process. --
    ap_sig_bdd_85_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_85 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_107)
    begin
        if (ap_sig_bdd_107) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st12_fsm_3 assign process. --
    ap_sig_cseq_ST_st12_fsm_3_assign_proc : process(ap_sig_bdd_390)
    begin
        if (ap_sig_bdd_390) then 
            ap_sig_cseq_ST_st12_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_85)
    begin
        if (ap_sig_bdd_85) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;

    col_1_fu_459_p2 <= std_logic_vector(unsigned(col_reg_341) + unsigned(ap_const_lv11_1));
    col_cast_fu_465_p1 <= std_logic_vector(resize(unsigned(col_reg_341),12));
    edge_val_1_fu_1107_p3 <= 
        p_i_cast_fu_1095_p3 when (tmp_27_fu_1103_p2(0) = '1') else 
        edge_val_fu_1085_p2;
    edge_val_fu_1085_p2 <= (edge_weight_i_reg_1556 xor ap_const_lv8_FF);
    edge_weight_i_fu_1061_p2 <= std_logic_vector(unsigned(tmp_23_fu_1051_p3) + unsigned(tmp_26_fu_1056_p3));
    exitcond1_fu_415_p2 <= "1" when (row_reg_330 = tmp_8_fu_397_p2) else "0";
    exitcond_fu_454_p2 <= "1" when (col_reg_341 = tmp_7_fu_391_p2) else "0";
    grp_fu_1203_p0 <= grp_fu_1203_p00(8 - 1 downto 0);
    grp_fu_1203_p00 <= std_logic_vector(resize(unsigned(B_1_fu_156),13));
    grp_fu_1203_p1 <= ap_const_lv13_19(6 - 1 downto 0);
    grp_fu_1203_p2 <= grp_fu_1203_p20(8 - 1 downto 0);
    grp_fu_1203_p20 <= std_logic_vector(resize(unsigned(G_1_fu_160),13));
    grp_fu_1211_p0 <= grp_fu_1211_p00(8 - 1 downto 0);
    grp_fu_1211_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_pix_val_2_reg_1449_pp0_it2),13));
    grp_fu_1211_p1 <= ap_const_lv13_19(6 - 1 downto 0);
    grp_fu_1211_p2 <= grp_fu_1211_p20(8 - 1 downto 0);
    grp_fu_1211_p20 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_pix_val_1_reg_1442_pp0_it2),13));
    grp_fu_1220_p0 <= grp_fu_1220_p00(8 - 1 downto 0);
    grp_fu_1220_p00 <= std_logic_vector(resize(unsigned(B_reg_1425),13));
    grp_fu_1220_p1 <= ap_const_lv13_19(6 - 1 downto 0);
    grp_fu_1220_p2 <= grp_fu_1220_p20(8 - 1 downto 0);
    grp_fu_1220_p20 <= std_logic_vector(resize(unsigned(G_reg_1419),13));
    grp_fu_1229_p0 <= grp_fu_1229_p00(8 - 1 downto 0);
    grp_fu_1229_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_pix_val_0_reg_1435_pp0_it5),10));
    grp_fu_1229_p1 <= grp_fu_1229_p10(9 - 1 downto 0);
    grp_fu_1229_p10 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_2_i3_reg_1506_pp0_it5),10));
    grp_fu_1229_p2 <= ap_const_lv22_556(12 - 1 downto 0);

    -- img_0_data_stream_0_V_read assign process. --
    img_0_data_stream_0_V_read_assign_proc : process(exitcond_reg_1351, ap_sig_cseq_ST_pp0_stg0_fsm_2, or_cond_reg_1360, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_1351) and not((ap_const_lv1_0 = or_cond_reg_1360)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            img_0_data_stream_0_V_read <= ap_const_logic_1;
        else 
            img_0_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- img_0_data_stream_1_V_read assign process. --
    img_0_data_stream_1_V_read_assign_proc : process(exitcond_reg_1351, ap_sig_cseq_ST_pp0_stg0_fsm_2, or_cond_reg_1360, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_1351) and not((ap_const_lv1_0 = or_cond_reg_1360)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            img_0_data_stream_1_V_read <= ap_const_logic_1;
        else 
            img_0_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- img_0_data_stream_2_V_read assign process. --
    img_0_data_stream_2_V_read_assign_proc : process(exitcond_reg_1351, ap_sig_cseq_ST_pp0_stg0_fsm_2, or_cond_reg_1360, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_1351) and not((ap_const_lv1_0 = or_cond_reg_1360)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            img_0_data_stream_2_V_read <= ap_const_logic_1;
        else 
            img_0_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

    img_1_data_stream_0_V_din <= std_logic_vector(unsigned(ap_reg_phiprechg_edge_val1_reg_352pp0_it8) + unsigned(sepia_val_0_reg_1583));

    -- img_1_data_stream_0_V_write assign process. --
    img_1_data_stream_0_V_write_assign_proc : process(ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_or_cond2_reg_1410_pp0_it7, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1410_pp0_it7)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            img_1_data_stream_0_V_write <= ap_const_logic_1;
        else 
            img_1_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_1_data_stream_1_V_din <= std_logic_vector(unsigned(ap_reg_phiprechg_edge_val1_reg_352pp0_it8) + unsigned(sepia_val_1_reg_1593));

    -- img_1_data_stream_1_V_write assign process. --
    img_1_data_stream_1_V_write_assign_proc : process(ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_or_cond2_reg_1410_pp0_it7, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1410_pp0_it7)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            img_1_data_stream_1_V_write <= ap_const_logic_1;
        else 
            img_1_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_1_data_stream_2_V_din <= std_logic_vector(unsigned(ap_reg_phiprechg_edge_val1_reg_352pp0_it8) + unsigned(sepia_val_2_reg_1588));

    -- img_1_data_stream_2_V_write assign process. --
    img_1_data_stream_2_V_write_assign_proc : process(ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_or_cond2_reg_1410_pp0_it7, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1410_pp0_it7)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            img_1_data_stream_2_V_write <= ap_const_logic_1;
        else 
            img_1_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_0_0_val_address0 <= tmp_16_fu_479_p1(11 - 1 downto 0);
    line_buffer_0_0_val_address1 <= ap_reg_ppstg_line_buffer_0_0_val_addr_reg_1382_pp0_it1;

    -- line_buffer_0_0_val_ce0 assign process. --
    line_buffer_0_0_val_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_0_0_val_ce0 <= ap_const_logic_1;
        else 
            line_buffer_0_0_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffer_0_0_val_ce1 assign process. --
    line_buffer_0_0_val_ce1_assign_proc : process(ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_0_0_val_ce1 <= ap_const_logic_1;
        else 
            line_buffer_0_0_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_0_0_val_d1 <= R_1_fu_164;

    -- line_buffer_0_0_val_we1 assign process. --
    line_buffer_0_0_val_we1_assign_proc : process(ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_exitcond_reg_1351_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it1)))) then 
            line_buffer_0_0_val_we1 <= ap_const_logic_1;
        else 
            line_buffer_0_0_val_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_0_1_val_address0 <= tmp_16_fu_479_p1(11 - 1 downto 0);
    line_buffer_0_1_val_address1 <= ap_reg_ppstg_line_buffer_0_1_val_addr_reg_1388_pp0_it1;

    -- line_buffer_0_1_val_ce0 assign process. --
    line_buffer_0_1_val_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_0_1_val_ce0 <= ap_const_logic_1;
        else 
            line_buffer_0_1_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffer_0_1_val_ce1 assign process. --
    line_buffer_0_1_val_ce1_assign_proc : process(ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_0_1_val_ce1 <= ap_const_logic_1;
        else 
            line_buffer_0_1_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_0_1_val_d1 <= G_1_fu_160;

    -- line_buffer_0_1_val_we1 assign process. --
    line_buffer_0_1_val_we1_assign_proc : process(ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_exitcond_reg_1351_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it1)))) then 
            line_buffer_0_1_val_we1 <= ap_const_logic_1;
        else 
            line_buffer_0_1_val_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_0_2_val_address0 <= tmp_16_fu_479_p1(11 - 1 downto 0);
    line_buffer_0_2_val_address1 <= ap_reg_ppstg_line_buffer_0_2_val_addr_reg_1394_pp0_it1;

    -- line_buffer_0_2_val_ce0 assign process. --
    line_buffer_0_2_val_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_0_2_val_ce0 <= ap_const_logic_1;
        else 
            line_buffer_0_2_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffer_0_2_val_ce1 assign process. --
    line_buffer_0_2_val_ce1_assign_proc : process(ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_0_2_val_ce1 <= ap_const_logic_1;
        else 
            line_buffer_0_2_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_0_2_val_d1 <= B_1_fu_156;

    -- line_buffer_0_2_val_we1 assign process. --
    line_buffer_0_2_val_we1_assign_proc : process(ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_exitcond_reg_1351_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1351_pp0_it1)))) then 
            line_buffer_0_2_val_we1 <= ap_const_logic_1;
        else 
            line_buffer_0_2_val_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_1_0_val_address0 <= tmp_16_fu_479_p1(11 - 1 downto 0);
    line_buffer_1_0_val_address1 <= line_buffer_1_0_val_addr_reg_1364;

    -- line_buffer_1_0_val_ce0 assign process. --
    line_buffer_1_0_val_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_1_0_val_ce0 <= ap_const_logic_1;
        else 
            line_buffer_1_0_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffer_1_0_val_ce1 assign process. --
    line_buffer_1_0_val_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_1_0_val_ce1 <= ap_const_logic_1;
        else 
            line_buffer_1_0_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_1_0_val_d1 <= line_buffer_0_0_val_q0;

    -- line_buffer_1_0_val_we1 assign process. --
    line_buffer_1_0_val_we1_assign_proc : process(exitcond_reg_1351, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_1351) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))))) then 
            line_buffer_1_0_val_we1 <= ap_const_logic_1;
        else 
            line_buffer_1_0_val_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_1_1_val_address0 <= tmp_16_fu_479_p1(11 - 1 downto 0);
    line_buffer_1_1_val_address1 <= line_buffer_1_1_val_addr_reg_1370;

    -- line_buffer_1_1_val_ce0 assign process. --
    line_buffer_1_1_val_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_1_1_val_ce0 <= ap_const_logic_1;
        else 
            line_buffer_1_1_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffer_1_1_val_ce1 assign process. --
    line_buffer_1_1_val_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_1_1_val_ce1 <= ap_const_logic_1;
        else 
            line_buffer_1_1_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_1_1_val_d1 <= line_buffer_0_1_val_q0;

    -- line_buffer_1_1_val_we1 assign process. --
    line_buffer_1_1_val_we1_assign_proc : process(exitcond_reg_1351, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_1351) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))))) then 
            line_buffer_1_1_val_we1 <= ap_const_logic_1;
        else 
            line_buffer_1_1_val_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_1_2_val_address0 <= tmp_16_fu_479_p1(11 - 1 downto 0);
    line_buffer_1_2_val_address1 <= line_buffer_1_2_val_addr_reg_1376;

    -- line_buffer_1_2_val_ce0 assign process. --
    line_buffer_1_2_val_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_1_2_val_ce0 <= ap_const_logic_1;
        else 
            line_buffer_1_2_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buffer_1_2_val_ce1 assign process. --
    line_buffer_1_2_val_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            line_buffer_1_2_val_ce1 <= ap_const_logic_1;
        else 
            line_buffer_1_2_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_1_2_val_d1 <= line_buffer_0_2_val_q0;

    -- line_buffer_1_2_val_we1 assign process. --
    line_buffer_1_2_val_we1_assign_proc : process(exitcond_reg_1351, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_124, ap_reg_ppiten_pp0_it1, ap_sig_bdd_152, ap_reg_ppiten_pp0_it8)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_1351) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_152 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))))) then 
            line_buffer_1_2_val_we1 <= ap_const_logic_1;
        else 
            line_buffer_1_2_val_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_tmp_7_i_fu_1090_p2 <= (tmp_7_i_reg_1561 xor ap_const_lv1_1);
    or_cond2_fu_522_p2 <= (tmp_11_reg_1341 and tmp_19_fu_516_p2);
    or_cond3_fu_560_p2 <= (tmp12_reg_1405 or tmp11_reg_1400);
    or_cond_fu_474_p2 <= (tmp_9_reg_1331 and tmp_14_fu_469_p2);
    output_col_fu_489_p2 <= std_logic_vector(unsigned(col_cast_fu_465_p1) + unsigned(ap_const_lv12_FFF));
    output_row_fu_431_p2 <= std_logic_vector(unsigned(row_cast_fu_411_p1) + unsigned(ap_const_lv12_FFF));
    p_i_cast_fu_1095_p3 <= 
        ap_const_lv8_FF when (not_tmp_7_i_fu_1090_p2(0) = '1') else 
        ap_const_lv8_0;
    p_shl1_cast_i1_fu_667_p1 <= std_logic_vector(resize(unsigned(p_shl1_i1_fu_659_p3),15));
    p_shl1_cast_i5_fu_722_p1 <= std_logic_vector(resize(unsigned(p_shl1_i4_fu_715_p3),15));
    p_shl1_cast_i_fu_583_p1 <= std_logic_vector(resize(unsigned(p_shl1_i_fu_576_p3),15));
    p_shl1_i1_fu_659_p3 <= (R_1_fu_164 & ap_const_lv6_0);
    p_shl1_i4_fu_715_p3 <= (ap_reg_ppstg_pix_val_0_reg_1435_pp0_it2 & ap_const_lv6_0);
    p_shl1_i_fu_576_p3 <= (R_reg_1414 & ap_const_lv6_0);
    p_shl2_cast_i29_cast_fu_679_p1 <= std_logic_vector(resize(unsigned(p_shl2_i1_fu_671_p3),10));
    p_shl2_cast_i7_cast_fu_649_p1 <= std_logic_vector(resize(unsigned(p_shl2_i6_fu_642_p3),10));
    p_shl2_cast_i_cast_fu_550_p1 <= std_logic_vector(resize(unsigned(p_shl2_i_fu_542_p3),10));
    p_shl2_i1_fu_671_p3 <= (R_1_fu_164 & ap_const_lv1_0);
    p_shl2_i6_fu_642_p3 <= (pix_val_0_reg_1435 & ap_const_lv1_0);
    p_shl2_i_fu_542_p3 <= (line_buffer_1_0_val_q0 & ap_const_lv1_0);
    p_shl8_cast_i_fu_894_p1 <= std_logic_vector(resize(unsigned(p_shl8_i_fu_886_p3),11));
    p_shl8_i_fu_886_p3 <= (y_1_fu_843_p2 & ap_const_lv1_0);
    p_shl_cast_i1_fu_736_p1 <= std_logic_vector(resize(unsigned(p_shl_i1_fu_729_p3),16));
    p_shl_cast_i2_fu_788_p1 <= std_logic_vector(resize(unsigned(p_shl_i2_fu_781_p3),16));
    p_shl_cast_i3_fu_990_p1 <= std_logic_vector(resize(unsigned(p_shl_i3_fu_983_p3),11));
    p_shl_cast_i_fu_597_p1 <= std_logic_vector(resize(unsigned(p_shl_i_fu_590_p3),16));
    p_shl_i1_fu_729_p3 <= (ap_reg_ppstg_pix_val_1_reg_1442_pp0_it2 & ap_const_lv7_0);
    p_shl_i2_fu_781_p3 <= (G_4_reg_1459 & ap_const_lv7_0);
    p_shl_i3_fu_983_p3 <= (ap_reg_ppstg_y_window_2_1_1_reg_1484_pp0_it4 & ap_const_lv1_0);
    p_shl_i_fu_590_p3 <= (G_reg_1419 & ap_const_lv7_0);
    row_1_fu_420_p2 <= std_logic_vector(unsigned(row_reg_330) + unsigned(ap_const_lv11_1));
    row_cast_fu_411_p1 <= std_logic_vector(resize(unsigned(row_reg_330),12));
    sepia_val_1_fu_1177_p3 <= 
        ap_const_lv8_FF when (tmp_32_fu_1165_p3(0) = '1') else 
        tmp_33_fu_1173_p1;
    sepia_val_2_fu_1157_p3 <= 
        ap_const_lv8_FF when (tmp_30_fu_1145_p3(0) = '1') else 
        tmp_31_fu_1153_p1;
    tmp11_fu_506_p2 <= (tmp_10_reg_1336 or tmp_17_fu_495_p2);
    tmp12_fu_511_p2 <= (tmp_12_reg_1346 or tmp_18_fu_501_p2);
    tmp13_fu_922_p2 <= std_logic_vector(unsigned(tmp_19_0_2_cast1_i_cast_fu_872_p1) + unsigned(tmp_19_0_cast2_i_cast_fu_857_p1));
    tmp2_fu_617_p2 <= std_logic_vector(unsigned(tmp_6_cast_i_fu_613_p1) + unsigned(p_shl_cast_i_fu_597_p1));
    tmp4_fu_653_p2 <= std_logic_vector(unsigned(p_shl2_cast_i7_cast_fu_649_p1) + unsigned(ap_const_lv10_80));
    tmp58_cast_fu_604_p1 <= std_logic_vector(resize(unsigned(tmp9_reg_1430),15));
    tmp5_fu_756_p2 <= std_logic_vector(unsigned(tmp_6_cast_i1_fu_752_p1) + unsigned(p_shl_cast_i1_fu_736_p1));
    tmp60_cast_fu_623_p1 <= std_logic_vector(resize(unsigned(grp_fu_1220_p3),16));
    tmp61_cast_fu_743_p1 <= std_logic_vector(resize(unsigned(tmp4_reg_1469),15));
    tmp63_cast_fu_762_p1 <= std_logic_vector(resize(unsigned(grp_fu_1211_p3),16));
    tmp64_cast_fu_697_p1 <= std_logic_vector(resize(unsigned(tmp7_fu_691_p2),15));
    tmp66_cast_fu_801_p1 <= std_logic_vector(resize(unsigned(tmp10_reg_1479),16));
    tmp69_cast_fu_928_p1 <= std_logic_vector(resize(unsigned(tmp13_fu_922_p2),10));
    tmp7_fu_691_p2 <= std_logic_vector(unsigned(p_shl2_cast_i29_cast_fu_679_p1) + unsigned(ap_const_lv10_80));
    tmp8_fu_795_p2 <= std_logic_vector(unsigned(tmp_6_cast_i2_fu_792_p1) + unsigned(p_shl_cast_i2_fu_788_p1));
    tmp9_fu_554_p2 <= std_logic_vector(unsigned(p_shl2_cast_i_cast_fu_550_p1) + unsigned(ap_const_lv10_80));
    tmp_10_cast_fu_373_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_367_p2),12));
    tmp_10_fu_437_p2 <= "1" when (output_row_fu_431_p2 = ap_const_lv12_0) else "0";
    tmp_11_cast_fu_387_p1 <= std_logic_vector(resize(unsigned(tmp_6_fu_381_p2),12));
    tmp_11_fu_443_p2 <= "0" when (row_reg_330 = ap_const_lv11_0) else "1";
    tmp_12_fu_449_p2 <= "1" when (output_row_fu_431_p2 = tmp_10_cast_fu_373_p1) else "0";
    tmp_14_fu_469_p2 <= "1" when (signed(col_cast_fu_465_p1) < signed(tmp_24_fu_407_p1)) else "0";
    tmp_16_fu_479_p1 <= std_logic_vector(resize(unsigned(col_reg_341),64));
    tmp_17_fu_495_p2 <= "1" when (output_col_fu_489_p2 = ap_const_lv12_0) else "0";
    tmp_18_fu_501_p2 <= "1" when (output_col_fu_489_p2 = tmp_11_cast_fu_387_p1) else "0";
    tmp_19_0_2_cast1_i_cast_fu_872_p1 <= std_logic_vector(resize(unsigned(y_window_0_2_fu_136),9));
    tmp_19_0_cast2_i_cast_fu_857_p1 <= std_logic_vector(resize(unsigned(y_2_reg_1500),9));
    tmp_19_2_2_cast_i_fu_999_p1 <= std_logic_vector(resize(unsigned(y_window_2_2_fu_140),11));
    tmp_19_2_cast_i_fu_942_p1 <= std_logic_vector(resize(unsigned(y_reg_1490),11));
    tmp_19_fu_516_p2 <= "0" when (col_reg_341 = ap_const_lv11_0) else "1";
    tmp_1_fu_363_p1 <= rows(11 - 1 downto 0);
    tmp_21_1_2_cast_i_fu_912_p1 <= std_logic_vector(resize(unsigned(tmp_21_1_2_i_fu_904_p3),11));
    tmp_21_1_2_i_fu_904_p3 <= (y_window_1_2_fu_148 & ap_const_lv1_0);
    tmp_21_fu_403_p1 <= rows(12 - 1 downto 0);
    tmp_22_fu_1025_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(tmp_28_fu_1021_p1));
    tmp_23_0_1_cast_i_fu_868_p1 <= std_logic_vector(resize(unsigned(tmp_23_0_1_i_fu_860_p3),10));
    tmp_23_0_1_i_fu_860_p3 <= (y_window_0_1_fu_132 & ap_const_lv1_0);
    tmp_23_fu_1051_p3 <= 
        tmp_28_reg_1531 when (tmp_i_29_reg_1526(0) = '1') else 
        tmp_22_reg_1536;
    tmp_24_fu_407_p1 <= cols(12 - 1 downto 0);
    tmp_25_fu_1041_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(tmp_29_fu_1037_p1));
    tmp_26_fu_1056_p3 <= 
        tmp_29_reg_1546 when (tmp_4_i_reg_1541(0) = '1') else 
        tmp_25_reg_1551;
    tmp_27_fu_1103_p2 <= (tmp_7_i_reg_1561 or tmp_8_i3_reg_1567);
    tmp_28_fu_1021_p1 <= x_weight_2_2_2_i_fu_1003_p2(8 - 1 downto 0);
    tmp_29_fu_1037_p1 <= y_weight_2_2_2_i_fu_1009_p2(8 - 1 downto 0);
    tmp_2_fu_377_p1 <= cols(11 - 1 downto 0);
    tmp_2_i3_fu_832_p2 <= std_logic_vector(unsigned(tmp_cast_i2_fu_826_p1) + unsigned(tmp_cast_i_fu_829_p1));
    tmp_30_fu_1145_p3 <= R_3_fu_1124_p2(8 downto 8);
    tmp_31_fu_1153_p1 <= R_3_fu_1124_p2(8 - 1 downto 0);
    tmp_32_fu_1165_p3 <= G_3_fu_1130_p2(8 downto 8);
    tmp_33_fu_1173_p1 <= G_3_fu_1130_p2(8 - 1 downto 0);
    tmp_4_i_fu_1031_p2 <= "1" when (signed(y_weight_2_2_2_i_fu_1009_p2) > signed(ap_const_lv11_0)) else "0";
    tmp_6_cast_i1_fu_752_p1 <= std_logic_vector(resize(unsigned(tmp_6_i1_fu_746_p2),16));
    tmp_6_cast_i2_fu_792_p1 <= std_logic_vector(resize(unsigned(tmp_6_i2_reg_1474),16));
    tmp_6_cast_i_fu_613_p1 <= std_logic_vector(resize(unsigned(tmp_6_i_fu_607_p2),16));
    tmp_6_fu_381_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(tmp_2_fu_377_p1));
    tmp_6_i1_fu_746_p2 <= std_logic_vector(unsigned(p_shl1_cast_i5_fu_722_p1) + unsigned(tmp61_cast_fu_743_p1));
    tmp_6_i2_fu_701_p2 <= std_logic_vector(unsigned(p_shl1_cast_i1_fu_667_p1) + unsigned(tmp64_cast_fu_697_p1));
    tmp_6_i_fu_607_p2 <= std_logic_vector(unsigned(p_shl1_cast_i_fu_583_p1) + unsigned(tmp58_cast_fu_604_p1));
    tmp_7_fu_391_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(tmp_2_fu_377_p1));
    tmp_7_i_fu_1067_p2 <= "1" when (unsigned(edge_weight_i_fu_1061_p2) < unsigned(ap_const_lv8_37)) else "0";
    tmp_8_fu_397_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(tmp_1_fu_363_p1));
    tmp_8_i1_fu_765_p2 <= std_logic_vector(unsigned(tmp5_fu_756_p2) + unsigned(tmp63_cast_fu_762_p1));
    tmp_8_i2_fu_804_p2 <= std_logic_vector(unsigned(tmp8_fu_795_p2) + unsigned(tmp66_cast_fu_801_p1));
    tmp_8_i3_fu_1073_p2 <= "1" when (unsigned(edge_weight_i_fu_1061_p2) > unsigned(ap_const_lv8_CD)) else "0";
    tmp_8_i_fu_626_p2 <= std_logic_vector(unsigned(tmp2_fu_617_p2) + unsigned(tmp60_cast_fu_623_p1));
    tmp_9_fu_426_p2 <= "1" when (signed(row_cast_fu_411_p1) < signed(tmp_21_fu_403_p1)) else "0";
    tmp_cast_i2_fu_826_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_pix_val_2_reg_1449_pp0_it2),9));
    tmp_cast_i_fu_829_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_pix_val_1_reg_1442_pp0_it2),9));
    tmp_i2_fu_810_p4 <= tmp_8_i2_fu_804_p2(15 downto 8);
    tmp_i_29_fu_1015_p2 <= "1" when (signed(x_weight_2_2_2_i_fu_1003_p2) > signed(ap_const_lv11_0)) else "0";
    tmp_s_fu_367_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(tmp_1_fu_363_p1));
        x_weight_2_0_2_cast_i_fu_882_p1 <= std_logic_vector(resize(signed(x_weight_2_0_2_i_fu_876_p2),11));

    x_weight_2_0_2_i_fu_876_p2 <= std_logic_vector(unsigned(tmp_19_0_2_cast1_i_cast_fu_872_p1) - unsigned(tmp_19_0_cast2_i_cast_fu_857_p1));
    x_weight_2_1_1_i_fu_898_p2 <= std_logic_vector(signed(x_weight_2_0_2_cast_i_fu_882_p1) - signed(p_shl8_cast_i_fu_894_p1));
    x_weight_2_1_2_i_fu_916_p2 <= std_logic_vector(unsigned(tmp_21_1_2_cast_i_fu_912_p1) + unsigned(x_weight_2_1_1_i_fu_898_p2));
    x_weight_2_2_2_i_fu_1003_p2 <= std_logic_vector(unsigned(tmp_19_2_2_cast_i_fu_999_p1) + unsigned(x_weight_2_2_i_fu_979_p2));
    x_weight_2_2_i_fu_979_p2 <= std_logic_vector(signed(x_weight_2_1_2_i_reg_1511) - signed(tmp_19_2_cast_i_reg_1516));
    y_1_fu_843_p2 <= std_logic_vector(unsigned(tmp_i1_reg_1495) + unsigned(ap_const_lv8_10));
    y_2_fu_820_p2 <= std_logic_vector(unsigned(tmp_i2_fu_810_p4) + unsigned(ap_const_lv8_10));
    y_fu_710_p2 <= std_logic_vector(unsigned(tmp_i_reg_1464) + unsigned(ap_const_lv8_10));
    y_weight_2_1_2_cast_i_fu_938_p1 <= std_logic_vector(resize(unsigned(y_weight_2_1_2_i_fu_932_p2),11));
    y_weight_2_1_2_i_fu_932_p2 <= std_logic_vector(unsigned(tmp_23_0_1_cast_i_fu_868_p1) + unsigned(tmp69_cast_fu_928_p1));
    y_weight_2_2_1_i_fu_994_p2 <= std_logic_vector(unsigned(y_weight_2_2_i_reg_1521) - unsigned(p_shl_cast_i3_fu_990_p1));
    y_weight_2_2_2_i_fu_1009_p2 <= std_logic_vector(unsigned(y_weight_2_2_1_i_fu_994_p2) - unsigned(tmp_19_2_2_cast_i_fu_999_p1));
    y_weight_2_2_i_fu_945_p2 <= std_logic_vector(unsigned(y_weight_2_1_2_cast_i_fu_938_p1) - unsigned(tmp_19_2_cast_i_fu_942_p1));
end behav;
