-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity image_filter_Loop_1_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    img_1_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_1_data_stream_0_V_full_n : IN STD_LOGIC;
    img_1_data_stream_0_V_write : OUT STD_LOGIC;
    img_1_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_1_data_stream_1_V_full_n : IN STD_LOGIC;
    img_1_data_stream_1_V_write : OUT STD_LOGIC;
    img_1_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_1_data_stream_2_V_full_n : IN STD_LOGIC;
    img_1_data_stream_2_V_write : OUT STD_LOGIC;
    img_0_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_0_data_stream_0_V_empty_n : IN STD_LOGIC;
    img_0_data_stream_0_V_read : OUT STD_LOGIC;
    img_0_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_0_data_stream_1_V_empty_n : IN STD_LOGIC;
    img_0_data_stream_1_V_read : OUT STD_LOGIC;
    img_0_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_0_data_stream_2_V_empty_n : IN STD_LOGIC;
    img_0_data_stream_2_V_read : OUT STD_LOGIC );
end;


architecture behav of image_filter_Loop_1_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st7_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal col_reg_166 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_fu_177_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_bdd_63 : BOOLEAN;
    signal tmp_4_fu_181_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond2_fu_189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_75 : BOOLEAN;
    signal row_1_fu_194_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_1_reg_537 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond1_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_reg_542 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_86 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_bdd_100 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond1_reg_542_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_116 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond1_reg_542_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_1_fu_209_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_551 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_icmp_reg_551_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_icmp_reg_551_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_val_0_1_load_reg_559 : STD_LOGIC_VECTOR (7 downto 0);
    signal buffer_val_0_1_1_load_reg_564 : STD_LOGIC_VECTOR (7 downto 0);
    signal buffer_val_1_1_load_reg_569 : STD_LOGIC_VECTOR (7 downto 0);
    signal buffer_val_1_1_1_load_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal scl_val_0_reg_579 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_scl_val_0_reg_579_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal scl_val_1_reg_585 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_scl_val_1_reg_585_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_val_2_reg_591 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_val_2_reg_591_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_reg_600 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_606 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult1_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult1_reg_611 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_1_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_1_reg_616 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult2_fu_267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult2_reg_622 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult3_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult3_reg_627 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_val_2_1_load_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal buffer_val_2_1_1_load_reg_637 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_val_0_fu_337_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_val_0_reg_642 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_val_1_fu_376_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_val_1_reg_648 : STD_LOGIC_VECTOR (7 downto 0);
    signal brmerge_2_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_2_reg_654 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_2_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_2_reg_659 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_reg_155 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_195 : BOOLEAN;
    signal buffer_val_0_1_fu_80 : STD_LOGIC_VECTOR (7 downto 0);
    signal buffer_val_0_1_1_fu_84 : STD_LOGIC_VECTOR (7 downto 0);
    signal buffer_val_1_1_fu_88 : STD_LOGIC_VECTOR (7 downto 0);
    signal buffer_val_1_1_1_fu_92 : STD_LOGIC_VECTOR (7 downto 0);
    signal buffer_val_2_1_fu_96 : STD_LOGIC_VECTOR (7 downto 0);
    signal buffer_val_2_1_1_fu_100 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_cast_fu_185_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_cast_fu_200_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_215_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal rev_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_0_not_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_val_0_1_1_scl_val_0_fu_331_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rev2_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_0_not_1_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_1_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_1_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_val_1_1_1_scl_val_1_fu_370_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult4_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_2_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_0_not_2_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult5_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev5_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_val_0_2_fu_443_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_val_1_2_fu_460_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buffer_val_2_1_1_p_val_2_fu_438_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp9_fu_473_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond2_fu_189_p2 = ap_const_lv1_0)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond1_fu_204_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_189_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and (exitcond1_fu_204_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_189_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond1_fu_204_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_189_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- col_reg_166 assign process. --
    col_reg_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and (exitcond1_fu_204_p2 = ap_const_lv1_0))) then 
                col_reg_166 <= col_1_fu_209_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_189_p2 = ap_const_lv1_0))) then 
                col_reg_166 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- row_reg_155 assign process. --
    row_reg_155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_63))) then 
                row_reg_155 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_3)) then 
                row_reg_155 <= row_1_reg_537;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then
                ap_reg_ppstg_exitcond1_reg_542_pp0_it1 <= exitcond1_reg_542;
                ap_reg_ppstg_icmp_reg_551_pp0_it1 <= icmp_reg_551;
                exitcond1_reg_542 <= exitcond1_fu_204_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) then
                ap_reg_ppstg_exitcond1_reg_542_pp0_it2 <= ap_reg_ppstg_exitcond1_reg_542_pp0_it1;
                ap_reg_ppstg_icmp_reg_551_pp0_it2 <= ap_reg_ppstg_icmp_reg_551_pp0_it1;
                ap_reg_ppstg_p_val_2_reg_591_pp0_it2 <= p_val_2_reg_591;
                ap_reg_ppstg_scl_val_0_reg_579_pp0_it2 <= scl_val_0_reg_579;
                ap_reg_ppstg_scl_val_1_reg_585_pp0_it2 <= scl_val_1_reg_585;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_542_pp0_it1))) then
                brmerge1_2_reg_659 <= brmerge1_2_fu_423_p2;
                brmerge_2_reg_654 <= brmerge_2_fu_406_p2;
                buffer_val_2_1_1_load_reg_637 <= buffer_val_2_1_1_fu_100;
                buffer_val_2_1_load_reg_632 <= buffer_val_2_1_fu_96;
                p_val_0_reg_642 <= p_val_0_fu_337_p3;
                p_val_1_reg_648 <= p_val_1_fu_376_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond1_reg_542 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then
                buffer_val_0_1_1_fu_84 <= buffer_val_0_1_fu_80;
                buffer_val_0_1_fu_80 <= img_0_data_stream_0_V_dout;
                buffer_val_1_1_1_fu_92 <= buffer_val_1_1_fu_88;
                buffer_val_1_1_fu_88 <= img_0_data_stream_1_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond1_reg_542 = ap_const_lv1_0) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then
                buffer_val_0_1_1_load_reg_564 <= buffer_val_0_1_1_fu_84;
                buffer_val_0_1_load_reg_559 <= buffer_val_0_1_fu_80;
                buffer_val_1_1_1_load_reg_574 <= buffer_val_1_1_1_fu_92;
                buffer_val_1_1_load_reg_569 <= buffer_val_1_1_fu_88;
                c_1_reg_616 <= c_1_fu_261_p2;
                c_reg_600 <= c_fu_243_p2;
                p_val_2_reg_591 <= img_0_data_stream_2_V_dout;
                scl_val_0_reg_579 <= img_0_data_stream_0_V_dout;
                scl_val_1_reg_585 <= img_0_data_stream_1_V_dout;
                ult1_reg_611 <= ult1_fu_255_p2;
                ult2_reg_622 <= ult2_fu_267_p2;
                ult3_reg_627 <= ult3_fu_273_p2;
                ult_reg_606 <= ult_fu_249_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_542_pp0_it1))) then
                buffer_val_2_1_1_fu_100 <= buffer_val_2_1_fu_96;
                buffer_val_2_1_fu_96 <= p_val_2_reg_591;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and (exitcond1_fu_204_p2 = ap_const_lv1_0))) then
                icmp_reg_551 <= icmp_fu_225_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                row_1_reg_537 <= row_1_fu_194_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_bdd_63, exitcond2_fu_189_p2, exitcond1_fu_204_p2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_100, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_116, ap_reg_ppiten_pp0_it3)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_63)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond2_fu_189_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond1_fu_204_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond1_fu_204_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st7_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, exitcond2_fu_189_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond2_fu_189_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(exitcond2_fu_189_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond2_fu_189_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_100 assign process. --
    ap_sig_bdd_100_assign_proc : process(img_0_data_stream_0_V_empty_n, img_0_data_stream_1_V_empty_n, img_0_data_stream_2_V_empty_n, exitcond1_reg_542)
    begin
                ap_sig_bdd_100 <= (((img_0_data_stream_0_V_empty_n = ap_const_logic_0) and (exitcond1_reg_542 = ap_const_lv1_0)) or ((exitcond1_reg_542 = ap_const_lv1_0) and (img_0_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond1_reg_542 = ap_const_lv1_0) and (img_0_data_stream_2_V_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_116 assign process. --
    ap_sig_bdd_116_assign_proc : process(img_1_data_stream_0_V_full_n, img_1_data_stream_1_V_full_n, img_1_data_stream_2_V_full_n, ap_reg_ppstg_exitcond1_reg_542_pp0_it2)
    begin
                ap_sig_bdd_116 <= (((img_1_data_stream_0_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_542_pp0_it2)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_542_pp0_it2) and (img_1_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_542_pp0_it2) and (img_1_data_stream_2_V_full_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_195 assign process. --
    ap_sig_bdd_195_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_195 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_63 assign process. --
    ap_sig_bdd_63_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_63 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_75 assign process. --
    ap_sig_bdd_75_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_75 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_86 assign process. --
    ap_sig_bdd_86_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_86 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_86)
    begin
        if (ap_sig_bdd_86) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_75)
    begin
        if (ap_sig_bdd_75) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_3 assign process. --
    ap_sig_cseq_ST_st7_fsm_3_assign_proc : process(ap_sig_bdd_195)
    begin
        if (ap_sig_bdd_195) then 
            ap_sig_cseq_ST_st7_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_1_fu_365_p2 <= (rev3_fu_360_p2 or c_1_reg_616);
    brmerge1_2_fu_423_p2 <= (rev5_fu_417_p2 or c_2_fu_383_p2);
    brmerge1_fu_326_p2 <= (rev1_fu_321_p2 or c_reg_600);
    brmerge_1_fu_354_p2 <= (rev2_fu_344_p2 or c_0_not_1_fu_349_p2);
    brmerge_2_fu_406_p2 <= (rev4_fu_394_p2 or c_0_not_2_fu_400_p2);
    brmerge_fu_315_p2 <= (rev_fu_305_p2 or c_0_not_fu_310_p2);
    buffer_val_0_1_1_scl_val_0_fu_331_p3 <= 
        buffer_val_0_1_1_load_reg_564 when (brmerge1_fu_326_p2(0) = '1') else 
        scl_val_0_reg_579;
    buffer_val_1_1_1_scl_val_1_fu_370_p3 <= 
        buffer_val_1_1_1_load_reg_574 when (brmerge1_1_fu_365_p2(0) = '1') else 
        scl_val_1_reg_585;
    buffer_val_2_1_1_p_val_2_fu_438_p3 <= 
        buffer_val_2_1_1_load_reg_637 when (brmerge1_2_reg_659(0) = '1') else 
        ap_reg_ppstg_p_val_2_reg_591_pp0_it2;
    c_0_not_1_fu_349_p2 <= (c_1_reg_616 xor ap_const_lv1_1);
    c_0_not_2_fu_400_p2 <= (c_2_fu_383_p2 xor ap_const_lv1_1);
    c_0_not_fu_310_p2 <= (c_reg_600 xor ap_const_lv1_1);
    c_1_fu_261_p2 <= "1" when (unsigned(buffer_val_1_1_fu_88) > unsigned(img_0_data_stream_1_V_dout)) else "0";
    c_2_fu_383_p2 <= "1" when (unsigned(buffer_val_2_1_fu_96) > unsigned(p_val_2_reg_591)) else "0";
    c_fu_243_p2 <= "1" when (unsigned(buffer_val_0_1_fu_80) > unsigned(img_0_data_stream_0_V_dout)) else "0";
    col_1_fu_209_p2 <= std_logic_vector(unsigned(col_reg_166) + unsigned(ap_const_lv11_1));
    col_cast_fu_200_p1 <= std_logic_vector(resize(unsigned(col_reg_166),12));
    exitcond1_fu_204_p2 <= "1" when (col_cast_fu_200_p1 = tmp_4_fu_181_p1) else "0";
    exitcond2_fu_189_p2 <= "1" when (row_cast_fu_185_p1 = tmp_3_fu_177_p1) else "0";
    icmp_fu_225_p2 <= "0" when (tmp_5_fu_215_p4 = ap_const_lv10_0) else "1";

    -- img_0_data_stream_0_V_read assign process. --
    img_0_data_stream_0_V_read_assign_proc : process(exitcond1_reg_542, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_100, ap_reg_ppiten_pp0_it1, ap_sig_bdd_116, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond1_reg_542 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            img_0_data_stream_0_V_read <= ap_const_logic_1;
        else 
            img_0_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- img_0_data_stream_1_V_read assign process. --
    img_0_data_stream_1_V_read_assign_proc : process(exitcond1_reg_542, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_100, ap_reg_ppiten_pp0_it1, ap_sig_bdd_116, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond1_reg_542 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            img_0_data_stream_1_V_read <= ap_const_logic_1;
        else 
            img_0_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- img_0_data_stream_2_V_read assign process. --
    img_0_data_stream_2_V_read_assign_proc : process(exitcond1_reg_542, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_100, ap_reg_ppiten_pp0_it1, ap_sig_bdd_116, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond1_reg_542 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            img_0_data_stream_2_V_read <= ap_const_logic_1;
        else 
            img_0_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

    img_1_data_stream_0_V_din <= 
        p_val_0_reg_642 when (sel_tmp2_fu_448_p2(0) = '1') else 
        p_val_0_2_fu_443_p3;

    -- img_1_data_stream_0_V_write assign process. --
    img_1_data_stream_0_V_write_assign_proc : process(ap_sig_bdd_100, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond1_reg_542_pp0_it2, ap_sig_bdd_116, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_542_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            img_1_data_stream_0_V_write <= ap_const_logic_1;
        else 
            img_1_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_1_data_stream_1_V_din <= 
        p_val_1_reg_648 when (sel_tmp2_fu_448_p2(0) = '1') else 
        p_val_1_2_fu_460_p3;

    -- img_1_data_stream_1_V_write assign process. --
    img_1_data_stream_1_V_write_assign_proc : process(ap_sig_bdd_100, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond1_reg_542_pp0_it2, ap_sig_bdd_116, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_542_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            img_1_data_stream_1_V_write <= ap_const_logic_1;
        else 
            img_1_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_1_data_stream_2_V_din <= 
        buffer_val_2_1_1_p_val_2_fu_438_p3 when (sel_tmp2_fu_448_p2(0) = '1') else 
        sel_tmp9_fu_473_p3;

    -- img_1_data_stream_2_V_write assign process. --
    img_1_data_stream_2_V_write_assign_proc : process(ap_sig_bdd_100, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond1_reg_542_pp0_it2, ap_sig_bdd_116, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_542_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_100 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_116 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            img_1_data_stream_2_V_write <= ap_const_logic_1;
        else 
            img_1_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_val_0_2_fu_443_p3 <= 
        p_val_0_reg_642 when (ap_reg_ppstg_icmp_reg_551_pp0_it2(0) = '1') else 
        ap_reg_ppstg_scl_val_0_reg_579_pp0_it2;
    p_val_0_fu_337_p3 <= 
        buffer_val_0_1_1_scl_val_0_fu_331_p3 when (brmerge_fu_315_p2(0) = '1') else 
        buffer_val_0_1_load_reg_559;
    p_val_1_2_fu_460_p3 <= 
        p_val_1_reg_648 when (ap_reg_ppstg_icmp_reg_551_pp0_it2(0) = '1') else 
        ap_reg_ppstg_scl_val_1_reg_585_pp0_it2;
    p_val_1_fu_376_p3 <= 
        buffer_val_1_1_1_scl_val_1_fu_370_p3 when (brmerge_1_fu_354_p2(0) = '1') else 
        buffer_val_1_1_load_reg_569;
    rev1_fu_321_p2 <= (ult1_reg_611 xor ap_const_lv1_1);
    rev2_fu_344_p2 <= (ult2_reg_622 xor ap_const_lv1_1);
    rev3_fu_360_p2 <= (ult3_reg_627 xor ap_const_lv1_1);
    rev4_fu_394_p2 <= (ult4_fu_388_p2 xor ap_const_lv1_1);
    rev5_fu_417_p2 <= (ult5_fu_412_p2 xor ap_const_lv1_1);
    rev_fu_305_p2 <= (ult_reg_606 xor ap_const_lv1_1);
    row_1_fu_194_p2 <= std_logic_vector(unsigned(row_reg_155) + unsigned(ap_const_lv11_1));
    row_cast_fu_185_p1 <= std_logic_vector(resize(unsigned(row_reg_155),12));
    sel_tmp2_fu_448_p2 <= (ap_reg_ppstg_icmp_reg_551_pp0_it2 and brmerge_2_reg_654);
    sel_tmp9_fu_473_p3 <= 
        buffer_val_2_1_load_reg_632 when (ap_reg_ppstg_icmp_reg_551_pp0_it2(0) = '1') else 
        ap_reg_ppstg_p_val_2_reg_591_pp0_it2;
    tmp_3_fu_177_p1 <= rows(12 - 1 downto 0);
    tmp_4_fu_181_p1 <= cols(12 - 1 downto 0);
    tmp_5_fu_215_p4 <= col_reg_166(10 downto 1);
    ult1_fu_255_p2 <= "1" when (unsigned(img_0_data_stream_0_V_dout) < unsigned(buffer_val_0_1_1_fu_84)) else "0";
    ult2_fu_267_p2 <= "1" when (unsigned(buffer_val_1_1_fu_88) < unsigned(buffer_val_1_1_1_fu_92)) else "0";
    ult3_fu_273_p2 <= "1" when (unsigned(img_0_data_stream_1_V_dout) < unsigned(buffer_val_1_1_1_fu_92)) else "0";
    ult4_fu_388_p2 <= "1" when (unsigned(buffer_val_2_1_fu_96) < unsigned(buffer_val_2_1_1_fu_100)) else "0";
    ult5_fu_412_p2 <= "1" when (unsigned(p_val_2_reg_591) < unsigned(buffer_val_2_1_1_fu_100)) else "0";
    ult_fu_249_p2 <= "1" when (unsigned(buffer_val_0_1_fu_80) < unsigned(buffer_val_0_1_1_fu_84)) else "0";
end behav;
