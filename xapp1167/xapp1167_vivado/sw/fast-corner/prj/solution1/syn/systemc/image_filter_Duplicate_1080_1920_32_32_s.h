// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _image_filter_Duplicate_1080_1920_32_32_s_HH_
#define _image_filter_Duplicate_1080_1920_32_32_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct image_filter_Duplicate_1080_1920_32_32_s : public sc_module {
    // Port declarations 40
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > src_rows_V_dout;
    sc_in< sc_logic > src_rows_V_empty_n;
    sc_out< sc_logic > src_rows_V_read;
    sc_in< sc_lv<12> > src_cols_V_dout;
    sc_in< sc_logic > src_cols_V_empty_n;
    sc_out< sc_logic > src_cols_V_read;
    sc_in< sc_lv<8> > src_data_stream_0_V_dout;
    sc_in< sc_logic > src_data_stream_0_V_empty_n;
    sc_out< sc_logic > src_data_stream_0_V_read;
    sc_in< sc_lv<8> > src_data_stream_1_V_dout;
    sc_in< sc_logic > src_data_stream_1_V_empty_n;
    sc_out< sc_logic > src_data_stream_1_V_read;
    sc_in< sc_lv<8> > src_data_stream_2_V_dout;
    sc_in< sc_logic > src_data_stream_2_V_empty_n;
    sc_out< sc_logic > src_data_stream_2_V_read;
    sc_out< sc_lv<8> > dst1_data_stream_0_V_din;
    sc_in< sc_logic > dst1_data_stream_0_V_full_n;
    sc_out< sc_logic > dst1_data_stream_0_V_write;
    sc_out< sc_lv<8> > dst1_data_stream_1_V_din;
    sc_in< sc_logic > dst1_data_stream_1_V_full_n;
    sc_out< sc_logic > dst1_data_stream_1_V_write;
    sc_out< sc_lv<8> > dst1_data_stream_2_V_din;
    sc_in< sc_logic > dst1_data_stream_2_V_full_n;
    sc_out< sc_logic > dst1_data_stream_2_V_write;
    sc_out< sc_lv<8> > dst2_data_stream_0_V_din;
    sc_in< sc_logic > dst2_data_stream_0_V_full_n;
    sc_out< sc_logic > dst2_data_stream_0_V_write;
    sc_out< sc_lv<8> > dst2_data_stream_1_V_din;
    sc_in< sc_logic > dst2_data_stream_1_V_full_n;
    sc_out< sc_logic > dst2_data_stream_1_V_write;
    sc_out< sc_lv<8> > dst2_data_stream_2_V_din;
    sc_in< sc_logic > dst2_data_stream_2_V_full_n;
    sc_out< sc_logic > dst2_data_stream_2_V_write;


    // Module declarations
    image_filter_Duplicate_1080_1920_32_32_s(sc_module_name name);
    SC_HAS_PROCESS(image_filter_Duplicate_1080_1920_32_32_s);

    ~image_filter_Duplicate_1080_1920_32_32_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_23;
    sc_signal< sc_lv<11> > p_3_i_reg_159;
    sc_signal< sc_lv<12> > rows_V_reg_200;
    sc_signal< bool > ap_sig_bdd_85;
    sc_signal< sc_lv<12> > cols_V_reg_205;
    sc_signal< sc_lv<1> > exitcond3_i_fu_174_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_97;
    sc_signal< sc_lv<11> > i_V_fu_179_p2;
    sc_signal< sc_lv<11> > i_V_reg_214;
    sc_signal< sc_lv<1> > exitcond_i_fu_189_p2;
    sc_signal< sc_lv<1> > exitcond_i_reg_219;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_2;
    sc_signal< bool > ap_sig_bdd_108;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< bool > ap_sig_bdd_140;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<11> > j_V_fu_194_p2;
    sc_signal< sc_lv<11> > p_i_reg_148;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_3;
    sc_signal< bool > ap_sig_bdd_165;
    sc_signal< sc_lv<12> > p_cast_i_fu_170_p1;
    sc_signal< sc_lv<12> > p_3_cast_i_fu_185_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_pp0_stg0_fsm_2;
    static const sc_lv<4> ap_ST_st5_fsm_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<11> ap_const_lv11_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_108();
    void thread_ap_sig_bdd_140();
    void thread_ap_sig_bdd_165();
    void thread_ap_sig_bdd_23();
    void thread_ap_sig_bdd_85();
    void thread_ap_sig_bdd_97();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_2();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st5_fsm_3();
    void thread_dst1_data_stream_0_V_din();
    void thread_dst1_data_stream_0_V_write();
    void thread_dst1_data_stream_1_V_din();
    void thread_dst1_data_stream_1_V_write();
    void thread_dst1_data_stream_2_V_din();
    void thread_dst1_data_stream_2_V_write();
    void thread_dst2_data_stream_0_V_din();
    void thread_dst2_data_stream_0_V_write();
    void thread_dst2_data_stream_1_V_din();
    void thread_dst2_data_stream_1_V_write();
    void thread_dst2_data_stream_2_V_din();
    void thread_dst2_data_stream_2_V_write();
    void thread_exitcond3_i_fu_174_p2();
    void thread_exitcond_i_fu_189_p2();
    void thread_i_V_fu_179_p2();
    void thread_j_V_fu_194_p2();
    void thread_p_3_cast_i_fu_185_p1();
    void thread_p_cast_i_fu_170_p1();
    void thread_src_cols_V_read();
    void thread_src_data_stream_0_V_read();
    void thread_src_data_stream_1_V_read();
    void thread_src_data_stream_2_V_read();
    void thread_src_rows_V_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
