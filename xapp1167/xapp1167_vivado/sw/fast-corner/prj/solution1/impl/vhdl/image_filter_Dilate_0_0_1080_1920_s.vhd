-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity image_filter_Dilate_0_0_1080_1920_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of image_filter_Dilate_0_0_1080_1920_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_pp0_stg0_fsm_6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_st17_fsm_7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv13_5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000101";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv13_1FFD : STD_LOGIC_VECTOR (12 downto 0) := "1111111111101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv13_1FFC : STD_LOGIC_VECTOR (12 downto 0) := "1111111111100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv13_1FFB : STD_LOGIC_VECTOR (12 downto 0) := "1111111111011";
    constant ap_const_lv13_1FFA : STD_LOGIC_VECTOR (12 downto 0) := "1111111111010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_27 : BOOLEAN;
    signal p_029_0_i_i_reg_298 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_bdd_51 : BOOLEAN;
    signal rows_assign_cast_fu_309_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal rows_assign_cast_reg_1204 : STD_LOGIC_VECTOR (12 downto 0);
    signal cols_assign_cast_fu_313_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal cols_assign_cast_reg_1213 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_65 : BOOLEAN;
    signal tmp_11_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_74 : BOOLEAN;
    signal tmp_14_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_83 : BOOLEAN;
    signal heightloop_fu_335_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal heightloop_reg_1325 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_13_phi_fu_280_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal widthloop_fu_340_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal widthloop_reg_1330 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_16_fu_345_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_16_reg_1335 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_neg313_i_i_cast_fu_353_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_neg313_i_i_cast_reg_1340 : STD_LOGIC_VECTOR (1 downto 0);
    signal ref_fu_359_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ref_reg_1346 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_40_fu_367_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_40_reg_1351 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_94_fu_373_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_94_reg_1356 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_V_fu_386_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_V_reg_1367 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_110 : BOOLEAN;
    signal tmp_19_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1372 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_1377 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1382 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1387 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_reg_1393 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_448_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_47_reg_1397 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i335_i_i_1_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i335_i_i_1_reg_1402 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_reg_1407 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_fu_494_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_100_reg_1412 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i335_i_i_2_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i335_i_i_2_reg_1417 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_reg_1422 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_537_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_103_reg_1427 : STD_LOGIC_VECTOR (1 downto 0);
    signal locy_fu_551_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal locy_reg_1432 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_147 : BOOLEAN;
    signal locy_1_t_fu_568_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal locy_1_t_reg_1437 : STD_LOGIC_VECTOR (1 downto 0);
    signal locy_2_t_fu_586_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal locy_2_t_reg_1442 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge1_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_reg_1447 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_1451 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_162 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_21_reg_1451_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_reg_1469 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_181 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal or_cond307_i_i_reg_1460 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_203 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_21_reg_1451_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_21_reg_1451_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_21_reg_1451_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_21_reg_1451_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_21_reg_1451_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_606_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond307_i_i_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_106_fu_643_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_106_reg_1464 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_cond_i_i_i_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_fu_672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_reg_1474 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_108_reg_1474_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_108_reg_1474_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1482 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_reg_1482_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_reg_1482_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1486 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_31_reg_1486_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_fu_691_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_reg_1490 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_col_assign_reg_1490_pp0_it1 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_0_addr_reg_1496 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_1_addr_reg_1502 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_2_addr_reg_1508 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_3_t_fu_719_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_3_t_reg_1514 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_col_assign_3_t_reg_1514_pp0_it2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_4_reg_1521 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_4_reg_1530 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_reg_1539 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_1_1_reg_1548 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it7 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_1_reg_1555 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_1_1_1_reg_1555_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_1_1_1_reg_1555_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_061_i_i_1_0_1_fu_1059_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_061_i_i_1_0_1_reg_1562 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_1_lo_reg_1568 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1568_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1568_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1568_pp0_it7 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_lo_reg_1574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_1_1_lo_reg_1574_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_061_i_i_1_0_2_fu_1086_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_061_i_i_1_0_2_reg_1580 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_061_i_i_1_1_fu_1101_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_061_i_i_1_1_reg_1586 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_131_1_1_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_1_1_reg_1591 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_061_i_i_1_1_2_fu_1127_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_061_i_i_1_1_2_reg_1596 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_061_i_i_1_2_fu_1142_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_061_i_i_1_2_reg_1602 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_131_2_1_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_2_1_reg_1607 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_1168_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_reg_1612 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_0_ce0 : STD_LOGIC;
    signal k_buf_0_val_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_0_ce1 : STD_LOGIC;
    signal k_buf_0_val_0_we1 : STD_LOGIC;
    signal k_buf_0_val_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_1_ce0 : STD_LOGIC;
    signal k_buf_0_val_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_1_ce1 : STD_LOGIC;
    signal k_buf_0_val_1_we1 : STD_LOGIC;
    signal k_buf_0_val_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_2_ce0 : STD_LOGIC;
    signal k_buf_0_val_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_2_ce1 : STD_LOGIC;
    signal k_buf_0_val_2_we1 : STD_LOGIC;
    signal k_buf_0_val_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_phi_fu_258_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_254 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_phi_fu_269_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_265 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_276 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_016_0_i_i_reg_287 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_410 : BOOLEAN;
    signal tmp_41_fu_708_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal right_border_buf_0_val_0_0_fu_120 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_1_fu_124 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_2_fu_128 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_1_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_fu_891_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_2_fu_966_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_val_load_0_mux_fu_942_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_2_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_2_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_fu_899_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_2_fu_977_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_val_load_1_mux_fu_936_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_2_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_1_fu_907_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_2_fu_997_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_val_load_2_mux_fu_930_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_4_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_5_fu_804_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_6_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_3_fu_796_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_7_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_1_fu_780_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_1_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_7_fu_844_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_6_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_5_fu_836_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_8_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_3_fu_820_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_350_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_93_fu_364_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_cast_fu_377_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_y_fu_398_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_95_fu_410_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_42_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_fu_444_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_1_fu_455_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_98_fu_461_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_1_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_1_1_fu_498_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_101_fu_504_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_2_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_545_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_62_fu_556_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_63_fu_562_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_64_fu_574_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_65_fu_580_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_cast_fu_597_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_104_fu_612_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp2_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ImagLoc_x_fu_633_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_107_fu_647_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_639_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_1_cast_fu_696_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fu_702_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_109_fu_715_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_buf_0_val_1_0_fu_767_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_2_fu_788_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_2_fu_812_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_4_fu_828_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_fu_891_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_fu_891_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_fu_891_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_fu_891_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_0_val_1_0_fu_899_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_fu_899_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_fu_899_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_fu_899_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_0_val_2_0_1_fu_907_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_1_fu_907_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_1_fu_907_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_1_fu_907_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_0_val_0_0_2_fu_966_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_2_fu_966_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_2_fu_966_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_2_fu_966_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_0_val_1_0_2_fu_977_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_2_fu_977_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_2_fu_977_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_2_fu_977_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_0_val_2_0_2_fu_997_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_2_fu_997_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_2_fu_997_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_2_fu_997_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_131_0_1_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_0_2_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_1_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_061_i_i_1_1_1_fu_1117_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_131_1_2_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_2_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_061_i_i_1_2_1_fu_1158_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_131_2_2_fu_1163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_bdd_1040 : BOOLEAN;
    signal ap_sig_bdd_1043 : BOOLEAN;
    signal ap_sig_bdd_1045 : BOOLEAN;
    signal ap_sig_bdd_1047 : BOOLEAN;
    signal ap_sig_bdd_485 : BOOLEAN;

    component image_filter_mux_3to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component image_filter_FAST_t_opr_k_buf_val_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_0_U : component image_filter_FAST_t_opr_k_buf_val_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_0_address0,
        ce0 => k_buf_0_val_0_ce0,
        q0 => k_buf_0_val_0_q0,
        address1 => k_buf_0_val_0_address1,
        ce1 => k_buf_0_val_0_ce1,
        we1 => k_buf_0_val_0_we1,
        d1 => k_buf_0_val_0_d1);

    k_buf_0_val_1_U : component image_filter_FAST_t_opr_k_buf_val_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_1_address0,
        ce0 => k_buf_0_val_1_ce0,
        q0 => k_buf_0_val_1_q0,
        address1 => k_buf_0_val_1_address1,
        ce1 => k_buf_0_val_1_ce1,
        we1 => k_buf_0_val_1_we1,
        d1 => k_buf_0_val_1_d1);

    k_buf_0_val_2_U : component image_filter_FAST_t_opr_k_buf_val_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_2_address0,
        ce0 => k_buf_0_val_2_ce0,
        q0 => k_buf_0_val_2_q0,
        address1 => k_buf_0_val_2_address1,
        ce1 => k_buf_0_val_2_ce1,
        we1 => k_buf_0_val_2_we1,
        d1 => k_buf_0_val_2_d1);

    image_filter_mux_3to1_sel2_8_1_U54 : component image_filter_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => src_kernel_win_0_val_0_0_fu_891_p1,
        din2 => src_kernel_win_0_val_0_0_fu_891_p2,
        din3 => src_kernel_win_0_val_0_0_fu_891_p3,
        din4 => src_kernel_win_0_val_0_0_fu_891_p4,
        dout => src_kernel_win_0_val_0_0_fu_891_p5);

    image_filter_mux_3to1_sel2_8_1_U55 : component image_filter_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => src_kernel_win_0_val_1_0_fu_899_p1,
        din2 => src_kernel_win_0_val_1_0_fu_899_p2,
        din3 => src_kernel_win_0_val_1_0_fu_899_p3,
        din4 => src_kernel_win_0_val_1_0_fu_899_p4,
        dout => src_kernel_win_0_val_1_0_fu_899_p5);

    image_filter_mux_3to1_sel2_8_1_U56 : component image_filter_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => src_kernel_win_0_val_2_0_1_fu_907_p1,
        din2 => src_kernel_win_0_val_2_0_1_fu_907_p2,
        din3 => src_kernel_win_0_val_2_0_1_fu_907_p3,
        din4 => src_kernel_win_0_val_2_0_1_fu_907_p4,
        dout => src_kernel_win_0_val_2_0_1_fu_907_p5);

    image_filter_mux_3to1_sel2_8_1_U57 : component image_filter_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => src_kernel_win_0_val_0_0_2_fu_966_p1,
        din2 => src_kernel_win_0_val_0_0_2_fu_966_p2,
        din3 => src_kernel_win_0_val_0_0_2_fu_966_p3,
        din4 => src_kernel_win_0_val_0_0_2_fu_966_p4,
        dout => src_kernel_win_0_val_0_0_2_fu_966_p5);

    image_filter_mux_3to1_sel2_8_1_U58 : component image_filter_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => src_kernel_win_0_val_1_0_2_fu_977_p1,
        din2 => src_kernel_win_0_val_1_0_2_fu_977_p2,
        din3 => src_kernel_win_0_val_1_0_2_fu_977_p3,
        din4 => src_kernel_win_0_val_1_0_2_fu_977_p4,
        dout => src_kernel_win_0_val_1_0_2_fu_977_p5);

    image_filter_mux_3to1_sel2_8_1_U59 : component image_filter_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => src_kernel_win_0_val_2_0_2_fu_997_p1,
        din2 => src_kernel_win_0_val_2_0_2_fu_997_p2,
        din3 => src_kernel_win_0_val_2_0_2_fu_997_p3,
        din4 => src_kernel_win_0_val_2_0_2_fu_997_p4,
        dout => src_kernel_win_0_val_2_0_2_fu_997_p5);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = tmp_18_fu_381_p2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and (ap_const_lv1_0 = tmp_21_fu_601_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) then 
                        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
                        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                    ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- p_016_0_i_i_reg_287 assign process. --
    p_016_0_i_i_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_7)) then 
                p_016_0_i_i_reg_287 <= i_V_reg_1367;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (tmp_13_phi_fu_280_p4 = ap_const_lv1_0))) then 
                p_016_0_i_i_reg_287 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- p_029_0_i_i_reg_298 assign process. --
    p_029_0_i_i_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_21_fu_601_p2)))) then 
                p_029_0_i_i_reg_298 <= j_V_fu_606_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                p_029_0_i_i_reg_298 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- src_kernel_win_0_val_0_1_fu_136 assign process. --
    src_kernel_win_0_val_0_1_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_485) then
                if (ap_sig_bdd_1047) then 
                    src_kernel_win_0_val_0_1_fu_136 <= src_kernel_win_0_val_0_0_4_reg_1521;
                elsif (ap_sig_bdd_1045) then 
                    src_kernel_win_0_val_0_1_fu_136 <= k_buf_val_load_0_mux_fu_942_p3;
                elsif (ap_sig_bdd_1043) then 
                    src_kernel_win_0_val_0_1_fu_136 <= src_kernel_win_0_val_0_0_2_fu_966_p5;
                elsif (ap_sig_bdd_1040) then 
                    src_kernel_win_0_val_0_1_fu_136 <= src_kernel_win_0_val_0_0_fu_891_p5;
                end if;
            end if; 
        end if;
    end process;

    -- src_kernel_win_0_val_1_1_fu_148 assign process. --
    src_kernel_win_0_val_1_1_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_485) then
                if (ap_sig_bdd_1047) then 
                    src_kernel_win_0_val_1_1_fu_148 <= src_kernel_win_0_val_1_0_4_reg_1530;
                elsif (ap_sig_bdd_1045) then 
                    src_kernel_win_0_val_1_1_fu_148 <= k_buf_val_load_1_mux_fu_936_p3;
                elsif (ap_sig_bdd_1043) then 
                    src_kernel_win_0_val_1_1_fu_148 <= src_kernel_win_0_val_1_0_2_fu_977_p5;
                elsif (ap_sig_bdd_1040) then 
                    src_kernel_win_0_val_1_1_fu_148 <= src_kernel_win_0_val_1_0_fu_899_p5;
                end if;
            end if; 
        end if;
    end process;

    -- src_kernel_win_0_val_2_1_fu_156 assign process. --
    src_kernel_win_0_val_2_1_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_485) then
                if (ap_sig_bdd_1047) then 
                    src_kernel_win_0_val_2_1_fu_156 <= src_kernel_win_0_val_2_0_reg_1539;
                elsif (ap_sig_bdd_1045) then 
                    src_kernel_win_0_val_2_1_fu_156 <= k_buf_val_load_2_mux_fu_930_p3;
                elsif (ap_sig_bdd_1043) then 
                    src_kernel_win_0_val_2_1_fu_156 <= src_kernel_win_0_val_2_0_2_fu_997_p5;
                elsif (ap_sig_bdd_1040) then 
                    src_kernel_win_0_val_2_1_fu_156 <= src_kernel_win_0_val_2_0_1_fu_907_p5;
                end if;
            end if; 
        end if;
    end process;

    -- tmp_10_reg_265 assign process. --
    tmp_10_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = tmp_7_phi_fu_258_p4))) then 
                tmp_10_reg_265 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_10_phi_fu_269_p4)))) then 
                tmp_10_reg_265 <= tmp_11_fu_323_p2;
            end if; 
        end if;
    end process;

    -- tmp_13_reg_276 assign process. --
    tmp_13_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_10_phi_fu_269_p4))) then 
                tmp_13_reg_276 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((tmp_13_phi_fu_280_p4 = ap_const_lv1_0)))) then 
                tmp_13_reg_276 <= tmp_14_fu_329_p2;
            end if; 
        end if;
    end process;

    -- tmp_7_reg_254 assign process. --
    tmp_7_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_51))) then 
                tmp_7_reg_254 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_7_phi_fu_258_p4)))) then 
                tmp_7_reg_254 <= tmp_8_fu_317_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then
                ap_reg_ppstg_brmerge_reg_1482_pp0_it1 <= brmerge_reg_1482;
                ap_reg_ppstg_col_assign_reg_1490_pp0_it1 <= col_assign_reg_1490;
                ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it1 <= or_cond307_i_i_reg_1460;
                ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1 <= or_cond_i_i_i_reg_1469;
                ap_reg_ppstg_tmp_108_reg_1474_pp0_it1 <= tmp_108_reg_1474;
                ap_reg_ppstg_tmp_21_reg_1451_pp0_it1 <= tmp_21_reg_1451;
                ap_reg_ppstg_tmp_31_reg_1486_pp0_it1 <= tmp_31_reg_1486;
                tmp_21_reg_1451 <= tmp_21_fu_601_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then
                ap_reg_ppstg_brmerge_reg_1482_pp0_it2 <= ap_reg_ppstg_brmerge_reg_1482_pp0_it1;
                ap_reg_ppstg_col_assign_3_t_reg_1514_pp0_it2 <= col_assign_3_t_reg_1514;
                ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it2 <= ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it1;
                ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it3 <= ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it2;
                ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it4 <= ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it3;
                ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it5 <= ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it4;
                ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it6 <= ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it5;
                ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it7 <= ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it6;
                ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it8 <= ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it7;
                ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it2 <= ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1;
                ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it4 <= src_kernel_win_0_val_0_1_1_reg_1548;
                ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it5 <= ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it4;
                ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it6 <= ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it5;
                ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it7 <= ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it6;
                ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1568_pp0_it5 <= src_kernel_win_0_val_0_1_lo_reg_1568;
                ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1568_pp0_it6 <= ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1568_pp0_it5;
                ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1568_pp0_it7 <= ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1568_pp0_it6;
                ap_reg_ppstg_src_kernel_win_0_val_1_1_1_reg_1555_pp0_it4 <= src_kernel_win_0_val_1_1_1_reg_1555;
                ap_reg_ppstg_src_kernel_win_0_val_1_1_1_reg_1555_pp0_it5 <= ap_reg_ppstg_src_kernel_win_0_val_1_1_1_reg_1555_pp0_it4;
                ap_reg_ppstg_src_kernel_win_0_val_1_1_lo_reg_1574_pp0_it5 <= src_kernel_win_0_val_1_1_lo_reg_1574;
                ap_reg_ppstg_tmp_108_reg_1474_pp0_it2 <= ap_reg_ppstg_tmp_108_reg_1474_pp0_it1;
                ap_reg_ppstg_tmp_21_reg_1451_pp0_it2 <= ap_reg_ppstg_tmp_21_reg_1451_pp0_it1;
                ap_reg_ppstg_tmp_21_reg_1451_pp0_it3 <= ap_reg_ppstg_tmp_21_reg_1451_pp0_it2;
                ap_reg_ppstg_tmp_21_reg_1451_pp0_it4 <= ap_reg_ppstg_tmp_21_reg_1451_pp0_it3;
                ap_reg_ppstg_tmp_21_reg_1451_pp0_it5 <= ap_reg_ppstg_tmp_21_reg_1451_pp0_it4;
                ap_reg_ppstg_tmp_21_reg_1451_pp0_it6 <= ap_reg_ppstg_tmp_21_reg_1451_pp0_it5;
                src_kernel_win_0_val_0_1_1_reg_1548 <= src_kernel_win_0_val_0_1_fu_136;
                src_kernel_win_0_val_1_1_1_reg_1555 <= src_kernel_win_0_val_1_1_fu_148;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                brmerge1_reg_1447 <= brmerge1_fu_592_p2;
                locy_1_t_reg_1437 <= locy_1_t_fu_568_p2;
                locy_2_t_reg_1442 <= locy_2_t_fu_586_p2;
                locy_reg_1432 <= locy_fu_551_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_21_fu_601_p2)) and (ap_const_lv1_0 = or_cond_i_i_i_fu_666_p2))) then
                brmerge_reg_1482 <= brmerge_fu_680_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_21_reg_1451)) and (ap_const_lv1_0 = or_cond_i_i_i_reg_1469) and (ap_const_lv1_0 = brmerge_reg_1482))) then
                col_assign_3_t_reg_1514 <= col_assign_3_t_fu_719_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_21_fu_601_p2)) and not((ap_const_lv1_0 = or_cond_i_i_i_fu_666_p2)) and (ap_const_lv1_0 = tmp_31_fu_686_p2))) then
                col_assign_reg_1490 <= col_assign_fu_691_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1))) then
                col_buf_0_val_0_0_1_fu_172 <= col_buf_0_val_0_0_7_fu_844_p3;
                col_buf_0_val_0_0_6_fu_176 <= col_buf_0_val_0_0_5_fu_836_p3;
                col_buf_0_val_0_0_8_fu_180 <= col_buf_0_val_0_0_3_fu_820_p3;
                col_buf_0_val_1_0_4_fu_160 <= col_buf_0_val_1_0_5_fu_804_p3;
                col_buf_0_val_1_0_6_fu_164 <= col_buf_0_val_1_0_3_fu_796_p3;
                col_buf_0_val_1_0_7_fu_168 <= col_buf_0_val_1_0_1_fu_780_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_51))) then
                    cols_assign_cast_reg_1213(11 downto 0) <= cols_assign_cast_fu_313_p1(11 downto 0);
                    rows_assign_cast_reg_1204(11 downto 0) <= rows_assign_cast_fu_309_p1(11 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (tmp_13_phi_fu_280_p4 = ap_const_lv1_0))) then
                heightloop_reg_1325 <= heightloop_fu_335_p2;
                p_neg313_i_i_cast_reg_1340 <= p_neg313_i_i_cast_fu_353_p2;
                ref_reg_1346 <= ref_fu_359_p2;
                tmp_16_reg_1335 <= tmp_16_fu_345_p2;
                tmp_40_reg_1351 <= tmp_40_fu_367_p2;
                tmp_94_reg_1356 <= tmp_94_fu_373_p1;
                widthloop_reg_1330 <= widthloop_fu_340_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                i_V_reg_1367 <= i_V_fu_386_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = tmp_18_fu_381_p2)))) then
                icmp_reg_1382 <= icmp_fu_420_p2;
                or_cond_i335_i_i_1_reg_1402 <= or_cond_i335_i_i_1_fu_480_p2;
                or_cond_i335_i_i_2_reg_1417 <= or_cond_i335_i_i_2_fu_523_p2;
                tmp_100_reg_1412 <= tmp_100_fu_494_p1;
                tmp_102_reg_1422 <= y_1_1_fu_498_p2(12 downto 12);
                tmp_103_reg_1427 <= tmp_103_fu_537_p1;
                tmp_19_reg_1372 <= tmp_19_fu_392_p2;
                tmp_27_reg_1377 <= tmp_27_fu_404_p2;
                tmp_29_reg_1387 <= tmp_29_fu_426_p2;
                tmp_47_reg_1397 <= tmp_47_fu_448_p3;
                tmp_96_reg_1393 <= ImagLoc_y_fu_398_p2(12 downto 12);
                tmp_99_reg_1407 <= y_1_fu_455_p2(12 downto 12);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_21_reg_1451)))) then
                k_buf_0_val_0_addr_reg_1496 <= tmp_41_fu_708_p1(11 - 1 downto 0);
                k_buf_0_val_1_addr_reg_1502 <= tmp_41_fu_708_p1(11 - 1 downto 0);
                k_buf_0_val_2_addr_reg_1508 <= tmp_41_fu_708_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_21_fu_601_p2)))) then
                or_cond307_i_i_reg_1460 <= or_cond307_i_i_fu_628_p2;
                or_cond_i_i_i_reg_1469 <= or_cond_i_i_i_fu_666_p2;
                tmp_106_reg_1464 <= tmp_106_fu_643_p1;
                tmp_108_reg_1474 <= ImagLoc_x_fu_633_p2(12 downto 12);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1) and (ap_reg_ppstg_col_assign_reg_1490_pp0_it1 = ap_const_lv2_0))) then
                right_border_buf_0_val_0_0_fu_120 <= k_buf_0_val_2_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1) and (ap_reg_ppstg_col_assign_reg_1490_pp0_it1 = ap_const_lv2_1))) then
                right_border_buf_0_val_0_1_fu_124 <= k_buf_0_val_2_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1) and not((ap_reg_ppstg_col_assign_reg_1490_pp0_it1 = ap_const_lv2_1)) and not((ap_reg_ppstg_col_assign_reg_1490_pp0_it1 = ap_const_lv2_0)))) then
                right_border_buf_0_val_0_2_fu_128 <= k_buf_0_val_2_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then
                src_kernel_win_0_val_0_0_4_reg_1521 <= k_buf_0_val_0_q0;
                src_kernel_win_0_val_1_0_4_reg_1530 <= k_buf_0_val_1_q0;
                src_kernel_win_0_val_2_0_reg_1539 <= k_buf_0_val_2_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it3)))) then
                src_kernel_win_0_val_0_1_lo_reg_1568 <= src_kernel_win_0_val_0_1_fu_136;
                src_kernel_win_0_val_1_1_lo_reg_1574 <= src_kernel_win_0_val_1_1_fu_148;
                temp_0_i_i_i_061_i_i_1_0_2_reg_1580 <= temp_0_i_i_i_061_i_i_1_0_2_fu_1086_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it6)))) then
                src_kernel_win_0_val_0_2_fu_140 <= ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it6;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it4)))) then
                src_kernel_win_0_val_1_2_fu_152 <= ap_reg_ppstg_src_kernel_win_0_val_1_1_1_reg_1555_pp0_it4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it2)))) then
                src_kernel_win_0_val_2_2_fu_144 <= src_kernel_win_0_val_2_1_fu_156;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it2)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it2)))) then
                temp_0_i_i_i_061_i_i_1_0_1_reg_1562 <= temp_0_i_i_i_061_i_i_1_0_1_fu_1059_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it5)))) then
                temp_0_i_i_i_061_i_i_1_1_2_reg_1596 <= temp_0_i_i_i_061_i_i_1_1_2_fu_1127_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it4)))) then
                temp_0_i_i_i_061_i_i_1_1_reg_1586 <= temp_0_i_i_i_061_i_i_1_1_fu_1101_p3;
                tmp_131_1_1_reg_1591 <= tmp_131_1_1_fu_1108_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it6)))) then
                temp_0_i_i_i_061_i_i_1_2_reg_1602 <= temp_0_i_i_i_061_i_i_1_2_fu_1142_p3;
                tmp_131_2_1_reg_1607 <= tmp_131_2_1_fu_1149_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_21_fu_601_p2)) and not((ap_const_lv1_0 = or_cond_i_i_i_fu_666_p2)))) then
                tmp_31_reg_1486 <= tmp_31_fu_686_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it7)))) then
                tmp_44_reg_1612 <= tmp_44_fu_1168_p3;
            end if;
        end if;
    end process;
    rows_assign_cast_reg_1204(12) <= '0';
    cols_assign_cast_reg_1213(12) <= '0';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_bdd_51, tmp_13_phi_fu_280_p4, tmp_18_fu_381_p2, ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it8, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9, tmp_7_phi_fu_258_p4, tmp_10_phi_fu_269_p4)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_51)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((ap_const_lv1_0 = tmp_7_phi_fu_258_p4)) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((ap_const_lv1_0 = tmp_10_phi_fu_269_p4)) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if ((tmp_13_phi_fu_280_p4 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                if ((ap_const_lv1_0 = tmp_18_fu_381_p2)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_6;
            when ap_ST_pp0_stg0_fsm_6 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it9) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_6;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it9) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it8))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4))))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_6;
                end if;
            when ap_ST_st17_fsm_7 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ImagLoc_x_fu_633_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(tmp_20_cast_fu_597_p1));
    ImagLoc_y_fu_398_p2 <= std_logic_vector(signed(ap_const_lv13_1FFC) + signed(tmp_17_cast_fu_377_p1));

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st5_fsm_4, tmp_18_fu_381_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = tmp_18_fu_381_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, tmp_18_fu_381_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = tmp_18_fu_381_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_1040 assign process. --
    ap_sig_bdd_1040_assign_proc : process(tmp_96_reg_1393, brmerge1_reg_1447)
    begin
                ap_sig_bdd_1040 <= ((ap_const_lv1_0 = brmerge1_reg_1447) and (ap_const_lv1_0 = tmp_96_reg_1393));
    end process;


    -- ap_sig_bdd_1043 assign process. --
    ap_sig_bdd_1043_assign_proc : process(brmerge1_reg_1447, ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it2, ap_reg_ppstg_brmerge_reg_1482_pp0_it2)
    begin
                ap_sig_bdd_1043 <= (not((ap_const_lv1_0 = brmerge1_reg_1447)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_brmerge_reg_1482_pp0_it2));
    end process;


    -- ap_sig_bdd_1045 assign process. --
    ap_sig_bdd_1045_assign_proc : process(brmerge1_reg_1447, ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it2, ap_reg_ppstg_brmerge_reg_1482_pp0_it2)
    begin
                ap_sig_bdd_1045 <= (not((ap_const_lv1_0 = brmerge1_reg_1447)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_brmerge_reg_1482_pp0_it2)));
    end process;


    -- ap_sig_bdd_1047 assign process. --
    ap_sig_bdd_1047_assign_proc : process(brmerge1_reg_1447, ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it2)
    begin
                ap_sig_bdd_1047 <= (not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it2)));
    end process;


    -- ap_sig_bdd_110 assign process. --
    ap_sig_bdd_110_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_110 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_147 assign process. --
    ap_sig_bdd_147_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_147 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_162 assign process. --
    ap_sig_bdd_162_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_162 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_181 assign process. --
    ap_sig_bdd_181_assign_proc : process(p_src_data_stream_V_empty_n, brmerge1_reg_1447, ap_reg_ppstg_tmp_21_reg_1451_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)
    begin
                ap_sig_bdd_181 <= ((p_src_data_stream_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)));
    end process;


    -- ap_sig_bdd_203 assign process. --
    ap_sig_bdd_203_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it8)
    begin
                ap_sig_bdd_203 <= ((p_dst_data_stream_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it8)));
    end process;


    -- ap_sig_bdd_27 assign process. --
    ap_sig_bdd_27_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_27 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_410 assign process. --
    ap_sig_bdd_410_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_410 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_485 assign process. --
    ap_sig_bdd_485_assign_proc : process(ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9, ap_reg_ppstg_tmp_21_reg_1451_pp0_it2)
    begin
                ap_sig_bdd_485 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it2)));
    end process;


    -- ap_sig_bdd_51 assign process. --
    ap_sig_bdd_51_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_51 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_65 assign process. --
    ap_sig_bdd_65_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_65 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_74 assign process. --
    ap_sig_bdd_74_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_74 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_83 assign process. --
    ap_sig_bdd_83_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_83 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_6 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_6_assign_proc : process(ap_sig_bdd_162)
    begin
        if (ap_sig_bdd_162) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st17_fsm_7 assign process. --
    ap_sig_cseq_ST_st17_fsm_7_assign_proc : process(ap_sig_bdd_410)
    begin
        if (ap_sig_bdd_410) then 
            ap_sig_cseq_ST_st17_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_27)
    begin
        if (ap_sig_bdd_27) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_65)
    begin
        if (ap_sig_bdd_65) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_74)
    begin
        if (ap_sig_bdd_74) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_83)
    begin
        if (ap_sig_bdd_83) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_110)
    begin
        if (ap_sig_bdd_110) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_147)
    begin
        if (ap_sig_bdd_147) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_fu_592_p2 <= (tmp_27_reg_1377 or or_cond_fu_541_p2);
    brmerge_fu_680_p2 <= (tmp_108_fu_672_p3 or tmp_24_fu_661_p2);
    col_assign_3_t_fu_719_p2 <= std_logic_vector(unsigned(p_neg313_i_i_cast_reg_1340) + unsigned(tmp_109_fu_715_p1));
    col_assign_fu_691_p2 <= std_logic_vector(unsigned(tmp_105_fu_639_p1) + unsigned(p_neg313_i_i_cast_reg_1340));
    col_buf_0_val_0_0_2_fu_812_p3 <= 
        col_buf_0_val_0_0_8_fu_180 when (sel_tmp_fu_762_p2(0) = '1') else 
        k_buf_0_val_0_q0;
    col_buf_0_val_0_0_3_fu_820_p3 <= 
        col_buf_0_val_0_0_8_fu_180 when (sel_tmp1_fu_775_p2(0) = '1') else 
        col_buf_0_val_0_0_2_fu_812_p3;
    col_buf_0_val_0_0_4_fu_828_p3 <= 
        k_buf_0_val_0_q0 when (sel_tmp_fu_762_p2(0) = '1') else 
        col_buf_0_val_0_0_6_fu_176;
    col_buf_0_val_0_0_5_fu_836_p3 <= 
        col_buf_0_val_0_0_6_fu_176 when (sel_tmp1_fu_775_p2(0) = '1') else 
        col_buf_0_val_0_0_4_fu_828_p3;
    col_buf_0_val_0_0_7_fu_844_p3 <= 
        k_buf_0_val_0_q0 when (sel_tmp1_fu_775_p2(0) = '1') else 
        col_buf_0_val_0_0_1_fu_172;
    col_buf_0_val_1_0_1_fu_780_p3 <= 
        col_buf_0_val_1_0_7_fu_168 when (sel_tmp1_fu_775_p2(0) = '1') else 
        col_buf_0_val_1_0_fu_767_p3;
    col_buf_0_val_1_0_2_fu_788_p3 <= 
        k_buf_0_val_1_q0 when (sel_tmp_fu_762_p2(0) = '1') else 
        col_buf_0_val_1_0_6_fu_164;
    col_buf_0_val_1_0_3_fu_796_p3 <= 
        col_buf_0_val_1_0_6_fu_164 when (sel_tmp1_fu_775_p2(0) = '1') else 
        col_buf_0_val_1_0_2_fu_788_p3;
    col_buf_0_val_1_0_5_fu_804_p3 <= 
        k_buf_0_val_1_q0 when (sel_tmp1_fu_775_p2(0) = '1') else 
        col_buf_0_val_1_0_4_fu_160;
    col_buf_0_val_1_0_fu_767_p3 <= 
        col_buf_0_val_1_0_7_fu_168 when (sel_tmp_fu_762_p2(0) = '1') else 
        k_buf_0_val_1_q0;
    cols_assign_cast_fu_313_p1 <= std_logic_vector(resize(unsigned(p_src_cols_V_read),13));
    heightloop_fu_335_p2 <= std_logic_vector(unsigned(ap_const_lv13_5) + unsigned(rows_assign_cast_reg_1204));
    i_V_fu_386_p2 <= std_logic_vector(unsigned(p_016_0_i_i_reg_287) + unsigned(ap_const_lv12_1));
    icmp2_fu_622_p2 <= "0" when (tmp_104_fu_612_p4 = ap_const_lv11_0) else "1";
    icmp_fu_420_p2 <= "1" when (signed(tmp_95_fu_410_p4) > signed(ap_const_lv12_0)) else "0";
    j_V_fu_606_p2 <= std_logic_vector(unsigned(p_029_0_i_i_reg_298) + unsigned(ap_const_lv12_1));
    k_buf_0_val_0_address0 <= tmp_41_fu_708_p1(11 - 1 downto 0);
    k_buf_0_val_0_address1 <= k_buf_0_val_0_addr_reg_1496;

    -- k_buf_0_val_0_ce0 assign process. --
    k_buf_0_val_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
            k_buf_0_val_0_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_0_ce1 assign process. --
    k_buf_0_val_0_ce1_assign_proc : process(ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
            k_buf_0_val_0_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_0_d1 <= p_src_data_stream_V_dout;

    -- k_buf_0_val_0_we1 assign process. --
    k_buf_0_val_0_we1_assign_proc : process(brmerge1_reg_1447, ap_reg_ppstg_tmp_21_reg_1451_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1, ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))))) then 
            k_buf_0_val_0_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_1_address0 <= tmp_41_fu_708_p1(11 - 1 downto 0);
    k_buf_0_val_1_address1 <= k_buf_0_val_1_addr_reg_1502;

    -- k_buf_0_val_1_ce0 assign process. --
    k_buf_0_val_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
            k_buf_0_val_1_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_1_ce1 assign process. --
    k_buf_0_val_1_ce1_assign_proc : process(brmerge1_reg_1447, ap_reg_ppstg_tmp_21_reg_1451_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1, ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9, ap_reg_ppstg_tmp_31_reg_1486_pp0_it1)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1))))) then 
            k_buf_0_val_1_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_1_d1 <= k_buf_0_val_0_q0;

    -- k_buf_0_val_1_we1 assign process. --
    k_buf_0_val_1_we1_assign_proc : process(brmerge1_reg_1447, ap_reg_ppstg_tmp_21_reg_1451_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1, ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9, ap_reg_ppstg_tmp_31_reg_1486_pp0_it1)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1))))) then 
            k_buf_0_val_1_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_2_address0 <= tmp_41_fu_708_p1(11 - 1 downto 0);
    k_buf_0_val_2_address1 <= k_buf_0_val_2_addr_reg_1508;

    -- k_buf_0_val_2_ce0 assign process. --
    k_buf_0_val_2_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_6, ap_reg_ppiten_pp0_it1, ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
            k_buf_0_val_2_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_2_ce1 assign process. --
    k_buf_0_val_2_ce1_assign_proc : process(brmerge1_reg_1447, ap_reg_ppstg_tmp_21_reg_1451_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1, ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9, ap_reg_ppstg_tmp_31_reg_1486_pp0_it1)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1))))) then 
            k_buf_0_val_2_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_2_d1 <= k_buf_0_val_1_q0;

    -- k_buf_0_val_2_we1 assign process. --
    k_buf_0_val_2_we1_assign_proc : process(brmerge1_reg_1447, ap_reg_ppstg_tmp_21_reg_1451_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1, ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9, ap_reg_ppstg_tmp_31_reg_1486_pp0_it1)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_31_reg_1486_pp0_it1))))) then 
            k_buf_0_val_2_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_val_load_0_mux_fu_942_p3 <= 
        src_kernel_win_0_val_0_0_4_reg_1521 when (ap_reg_ppstg_tmp_108_reg_1474_pp0_it2(0) = '1') else 
        src_kernel_win_0_val_0_1_fu_136;
    k_buf_val_load_1_mux_fu_936_p3 <= 
        src_kernel_win_0_val_1_0_4_reg_1530 when (ap_reg_ppstg_tmp_108_reg_1474_pp0_it2(0) = '1') else 
        src_kernel_win_0_val_1_1_fu_148;
    k_buf_val_load_2_mux_fu_930_p3 <= 
        src_kernel_win_0_val_2_0_reg_1539 when (ap_reg_ppstg_tmp_108_reg_1474_pp0_it2(0) = '1') else 
        src_kernel_win_0_val_2_1_fu_156;
    locy_1_t_fu_568_p2 <= std_logic_vector(unsigned(tmp_61_fu_545_p3) - unsigned(tmp_63_fu_562_p3));
    locy_2_t_fu_586_p2 <= std_logic_vector(unsigned(tmp_61_fu_545_p3) - unsigned(tmp_65_fu_580_p3));
    locy_fu_551_p2 <= std_logic_vector(unsigned(tmp_61_fu_545_p3) - unsigned(tmp_47_reg_1397));
    or_cond307_i_i_fu_628_p2 <= (tmp_19_reg_1372 and icmp2_fu_622_p2);
    or_cond_fu_541_p2 <= (icmp_reg_1382 and tmp_29_reg_1387);
    or_cond_i335_i_i_1_fu_480_p2 <= (tmp_82_1_fu_475_p2 and rev_fu_469_p2);
    or_cond_i335_i_i_2_fu_523_p2 <= (tmp_82_2_fu_518_p2 and rev1_fu_512_p2);
    or_cond_i_i_i_fu_666_p2 <= (tmp_24_fu_661_p2 and rev2_fu_655_p2);
    p_assign_1_cast_fu_696_p3 <= 
        ap_const_lv11_0 when (tmp_108_reg_1474(0) = '1') else 
        tmp_40_reg_1351;
    p_dst_data_stream_V_din <= tmp_44_reg_1612;

    -- p_dst_data_stream_V_write assign process. --
    p_dst_data_stream_V_write_assign_proc : process(ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it8, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond307_i_i_reg_1460_pp0_it8)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_neg313_i_i_cast_fu_353_p2 <= (tmp_fu_350_p1 xor ap_const_lv2_3);

    -- p_src_data_stream_V_read assign process. --
    p_src_data_stream_V_read_assign_proc : process(brmerge1_reg_1447, ap_reg_ppstg_tmp_21_reg_1451_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1, ap_sig_bdd_181, ap_reg_ppiten_pp0_it2, ap_sig_bdd_203, ap_reg_ppiten_pp0_it9)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_21_reg_1451_pp0_it1)) and not((ap_const_lv1_0 = brmerge1_reg_1447)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1469_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_181 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_203 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    ref_fu_359_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(rows_assign_cast_reg_1204));
    rev1_fu_512_p2 <= (tmp_101_fu_504_p3 xor ap_const_lv1_1);
    rev2_fu_655_p2 <= (tmp_107_fu_647_p3 xor ap_const_lv1_1);
    rev_fu_469_p2 <= (tmp_98_fu_461_p3 xor ap_const_lv1_1);
    rows_assign_cast_fu_309_p1 <= std_logic_vector(resize(unsigned(p_src_rows_V_read),13));
    sel_tmp1_fu_775_p2 <= "1" when (ap_reg_ppstg_col_assign_reg_1490_pp0_it1 = ap_const_lv2_0) else "0";
    sel_tmp_fu_762_p2 <= "1" when (ap_reg_ppstg_col_assign_reg_1490_pp0_it1 = ap_const_lv2_1) else "0";
    src_kernel_win_0_val_0_0_2_fu_966_p1 <= col_buf_0_val_0_0_1_fu_172;
    src_kernel_win_0_val_0_0_2_fu_966_p2 <= col_buf_0_val_0_0_6_fu_176;
    src_kernel_win_0_val_0_0_2_fu_966_p3 <= col_buf_0_val_0_0_8_fu_180;
    src_kernel_win_0_val_0_0_2_fu_966_p4 <= ap_reg_ppstg_col_assign_3_t_reg_1514_pp0_it2;
    src_kernel_win_0_val_0_0_fu_891_p1 <= src_kernel_win_0_val_0_0_4_reg_1521;
    src_kernel_win_0_val_0_0_fu_891_p2 <= src_kernel_win_0_val_1_0_4_reg_1530;
    src_kernel_win_0_val_0_0_fu_891_p3 <= src_kernel_win_0_val_2_0_reg_1539;
    src_kernel_win_0_val_0_0_fu_891_p4 <= locy_reg_1432;
    src_kernel_win_0_val_1_0_2_fu_977_p1 <= col_buf_0_val_1_0_4_fu_160;
    src_kernel_win_0_val_1_0_2_fu_977_p2 <= col_buf_0_val_1_0_6_fu_164;
    src_kernel_win_0_val_1_0_2_fu_977_p3 <= col_buf_0_val_1_0_7_fu_168;
    src_kernel_win_0_val_1_0_2_fu_977_p4 <= ap_reg_ppstg_col_assign_3_t_reg_1514_pp0_it2;
    src_kernel_win_0_val_1_0_fu_899_p1 <= src_kernel_win_0_val_0_0_4_reg_1521;
    src_kernel_win_0_val_1_0_fu_899_p2 <= src_kernel_win_0_val_1_0_4_reg_1530;
    src_kernel_win_0_val_1_0_fu_899_p3 <= src_kernel_win_0_val_2_0_reg_1539;
    src_kernel_win_0_val_1_0_fu_899_p4 <= locy_1_t_reg_1437;
    src_kernel_win_0_val_2_0_1_fu_907_p1 <= src_kernel_win_0_val_0_0_4_reg_1521;
    src_kernel_win_0_val_2_0_1_fu_907_p2 <= src_kernel_win_0_val_1_0_4_reg_1530;
    src_kernel_win_0_val_2_0_1_fu_907_p3 <= src_kernel_win_0_val_2_0_reg_1539;
    src_kernel_win_0_val_2_0_1_fu_907_p4 <= locy_2_t_reg_1442;
    src_kernel_win_0_val_2_0_2_fu_997_p1 <= right_border_buf_0_val_0_0_fu_120;
    src_kernel_win_0_val_2_0_2_fu_997_p2 <= right_border_buf_0_val_0_1_fu_124;
    src_kernel_win_0_val_2_0_2_fu_997_p3 <= right_border_buf_0_val_0_2_fu_128;
    src_kernel_win_0_val_2_0_2_fu_997_p4 <= ap_reg_ppstg_col_assign_3_t_reg_1514_pp0_it2;
    temp_0_i_i_i_061_i_i_1_0_1_fu_1059_p3 <= 
        src_kernel_win_0_val_2_1_fu_156 when (tmp_131_0_1_fu_1053_p2(0) = '1') else 
        src_kernel_win_0_val_2_2_fu_144;
    temp_0_i_i_i_061_i_i_1_0_2_fu_1086_p3 <= 
        src_kernel_win_0_val_2_1_fu_156 when (tmp_131_0_2_fu_1081_p2(0) = '1') else 
        temp_0_i_i_i_061_i_i_1_0_1_reg_1562;
    temp_0_i_i_i_061_i_i_1_1_1_fu_1117_p3 <= 
        ap_reg_ppstg_src_kernel_win_0_val_1_1_1_reg_1555_pp0_it5 when (tmp_131_1_1_reg_1591(0) = '1') else 
        temp_0_i_i_i_061_i_i_1_1_reg_1586;
    temp_0_i_i_i_061_i_i_1_1_2_fu_1127_p3 <= 
        ap_reg_ppstg_src_kernel_win_0_val_1_1_lo_reg_1574_pp0_it5 when (tmp_131_1_2_fu_1122_p2(0) = '1') else 
        temp_0_i_i_i_061_i_i_1_1_1_fu_1117_p3;
    temp_0_i_i_i_061_i_i_1_1_fu_1101_p3 <= 
        src_kernel_win_0_val_1_2_fu_152 when (tmp_131_1_fu_1096_p2(0) = '1') else 
        temp_0_i_i_i_061_i_i_1_0_2_reg_1580;
    temp_0_i_i_i_061_i_i_1_2_1_fu_1158_p3 <= 
        ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it7 when (tmp_131_2_1_reg_1607(0) = '1') else 
        temp_0_i_i_i_061_i_i_1_2_reg_1602;
    temp_0_i_i_i_061_i_i_1_2_fu_1142_p3 <= 
        src_kernel_win_0_val_0_2_fu_140 when (tmp_131_2_fu_1137_p2(0) = '1') else 
        temp_0_i_i_i_061_i_i_1_1_2_reg_1596;
    tmp_100_fu_494_p1 <= y_1_fu_455_p2(2 - 1 downto 0);
    tmp_101_fu_504_p3 <= y_1_1_fu_498_p2(12 downto 12);
    tmp_103_fu_537_p1 <= y_1_1_fu_498_p2(2 - 1 downto 0);
    tmp_104_fu_612_p4 <= p_029_0_i_i_reg_298(11 downto 1);
    tmp_105_fu_639_p1 <= ImagLoc_x_fu_633_p2(2 - 1 downto 0);
    tmp_106_fu_643_p1 <= ImagLoc_x_fu_633_p2(11 - 1 downto 0);
    tmp_107_fu_647_p3 <= ImagLoc_x_fu_633_p2(12 downto 12);
    tmp_108_fu_672_p3 <= ImagLoc_x_fu_633_p2(12 downto 12);
    tmp_109_fu_715_p1 <= x_fu_702_p3(2 - 1 downto 0);
    tmp_10_phi_fu_269_p4 <= tmp_10_reg_265;
    tmp_11_fu_323_p2 <= (tmp_10_reg_265 xor ap_const_lv1_1);
    tmp_131_0_1_fu_1053_p2 <= "1" when (unsigned(src_kernel_win_0_val_2_1_fu_156) > unsigned(src_kernel_win_0_val_2_2_fu_144)) else "0";
    tmp_131_0_2_fu_1081_p2 <= "1" when (unsigned(src_kernel_win_0_val_2_1_fu_156) > unsigned(temp_0_i_i_i_061_i_i_1_0_1_reg_1562)) else "0";
    tmp_131_1_1_fu_1108_p2 <= "1" when (unsigned(ap_reg_ppstg_src_kernel_win_0_val_1_1_1_reg_1555_pp0_it4) > unsigned(temp_0_i_i_i_061_i_i_1_1_fu_1101_p3)) else "0";
    tmp_131_1_2_fu_1122_p2 <= "1" when (unsigned(ap_reg_ppstg_src_kernel_win_0_val_1_1_lo_reg_1574_pp0_it5) > unsigned(temp_0_i_i_i_061_i_i_1_1_1_fu_1117_p3)) else "0";
    tmp_131_1_fu_1096_p2 <= "1" when (unsigned(src_kernel_win_0_val_1_2_fu_152) > unsigned(temp_0_i_i_i_061_i_i_1_0_2_reg_1580)) else "0";
    tmp_131_2_1_fu_1149_p2 <= "1" when (unsigned(ap_reg_ppstg_src_kernel_win_0_val_0_1_1_reg_1548_pp0_it6) > unsigned(temp_0_i_i_i_061_i_i_1_2_fu_1142_p3)) else "0";
    tmp_131_2_2_fu_1163_p2 <= "1" when (unsigned(ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1568_pp0_it7) > unsigned(temp_0_i_i_i_061_i_i_1_2_1_fu_1158_p3)) else "0";
    tmp_131_2_fu_1137_p2 <= "1" when (unsigned(src_kernel_win_0_val_0_2_fu_140) > unsigned(temp_0_i_i_i_061_i_i_1_1_2_reg_1596)) else "0";
    tmp_13_phi_fu_280_p4 <= tmp_13_reg_276;
    tmp_14_fu_329_p2 <= (tmp_13_reg_276 xor ap_const_lv1_1);
    tmp_16_fu_345_p2 <= std_logic_vector(signed(ap_const_lv13_1FFD) + signed(cols_assign_cast_reg_1213));
    tmp_17_cast_fu_377_p1 <= std_logic_vector(resize(unsigned(p_016_0_i_i_reg_287),13));
    tmp_18_fu_381_p2 <= "1" when (unsigned(tmp_17_cast_fu_377_p1) < unsigned(heightloop_reg_1325)) else "0";
    tmp_19_fu_392_p2 <= "1" when (unsigned(p_016_0_i_i_reg_287) > unsigned(ap_const_lv12_4)) else "0";
    tmp_20_cast_fu_597_p1 <= std_logic_vector(resize(unsigned(p_029_0_i_i_reg_298),13));
    tmp_21_fu_601_p2 <= "1" when (unsigned(tmp_20_cast_fu_597_p1) < unsigned(widthloop_reg_1330)) else "0";
    tmp_24_fu_661_p2 <= "1" when (signed(ImagLoc_x_fu_633_p2) < signed(cols_assign_cast_reg_1213)) else "0";
    tmp_27_fu_404_p2 <= "1" when (signed(ImagLoc_y_fu_398_p2) < signed(ap_const_lv13_1FFF)) else "0";
    tmp_29_fu_426_p2 <= "1" when (signed(ImagLoc_y_fu_398_p2) < signed(ref_reg_1346)) else "0";
    tmp_31_fu_686_p2 <= "1" when (signed(ImagLoc_x_fu_633_p2) < signed(tmp_16_reg_1335)) else "0";
    tmp_40_fu_367_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(tmp_93_fu_364_p1));
    tmp_41_fu_708_p1 <= std_logic_vector(resize(unsigned(x_fu_702_p3),64));
    tmp_42_fu_439_p2 <= "1" when (signed(ImagLoc_y_fu_398_p2) < signed(rows_assign_cast_reg_1204)) else "0";
    tmp_44_fu_1168_p3 <= 
        ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1568_pp0_it7 when (tmp_131_2_2_fu_1163_p2(0) = '1') else 
        temp_0_i_i_i_061_i_i_1_2_1_fu_1158_p3;
    tmp_47_fu_448_p3 <= 
        tmp_97_fu_444_p1 when (tmp_42_fu_439_p2(0) = '1') else 
        tmp_94_reg_1356;
    tmp_61_fu_545_p3 <= 
        ap_const_lv2_2 when (tmp_29_reg_1387(0) = '1') else 
        tmp_94_reg_1356;
    tmp_62_fu_556_p3 <= 
        ap_const_lv2_0 when (tmp_99_reg_1407(0) = '1') else 
        tmp_94_reg_1356;
    tmp_63_fu_562_p3 <= 
        tmp_100_reg_1412 when (or_cond_i335_i_i_1_reg_1402(0) = '1') else 
        tmp_62_fu_556_p3;
    tmp_64_fu_574_p3 <= 
        ap_const_lv2_0 when (tmp_102_reg_1422(0) = '1') else 
        tmp_94_reg_1356;
    tmp_65_fu_580_p3 <= 
        tmp_103_reg_1427 when (or_cond_i335_i_i_2_reg_1417(0) = '1') else 
        tmp_64_fu_574_p3;
    tmp_7_phi_fu_258_p4 <= tmp_7_reg_254;
    tmp_82_1_fu_475_p2 <= "1" when (signed(y_1_fu_455_p2) < signed(rows_assign_cast_reg_1204)) else "0";
    tmp_82_2_fu_518_p2 <= "1" when (signed(y_1_1_fu_498_p2) < signed(rows_assign_cast_reg_1204)) else "0";
    tmp_8_fu_317_p2 <= (tmp_7_reg_254 xor ap_const_lv1_1);
    tmp_93_fu_364_p1 <= p_src_cols_V_read(11 - 1 downto 0);
    tmp_94_fu_373_p1 <= ref_fu_359_p2(2 - 1 downto 0);
    tmp_95_fu_410_p4 <= ImagLoc_y_fu_398_p2(12 downto 1);
    tmp_97_fu_444_p1 <= ImagLoc_y_fu_398_p2(2 - 1 downto 0);
    tmp_98_fu_461_p3 <= y_1_fu_455_p2(12 downto 12);
    tmp_fu_350_p1 <= p_src_cols_V_read(2 - 1 downto 0);
    widthloop_fu_340_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) + unsigned(cols_assign_cast_reg_1213));
    x_fu_702_p3 <= 
        tmp_106_reg_1464 when (or_cond_i_i_i_reg_1469(0) = '1') else 
        p_assign_1_cast_fu_696_p3;
    y_1_1_fu_498_p2 <= std_logic_vector(signed(ap_const_lv13_1FFA) + signed(tmp_17_cast_fu_377_p1));
    y_1_fu_455_p2 <= std_logic_vector(signed(ap_const_lv13_1FFB) + signed(tmp_17_cast_fu_377_p1));
end behav;
