// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="image_filter,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=6.666670,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.100000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=59,HLS_SYN_DSP=3,HLS_SYN_FF=7471,HLS_SYN_LUT=9235}" *)

module image_filter (
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST,
        rows,
        cols,
        ap_clk,
        ap_rst_n,
        ap_start,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY,
        ap_done,
        ap_idle,
        ap_ready
);

parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_true = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_logic_1 = 1'b1;

input  [31:0] INPUT_STREAM_TDATA;
input  [3:0] INPUT_STREAM_TKEEP;
input  [3:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [31:0] OUTPUT_STREAM_TDATA;
output  [3:0] OUTPUT_STREAM_TKEEP;
output  [3:0] OUTPUT_STREAM_TSTRB;
output  [0:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [0:0] OUTPUT_STREAM_TID;
output  [0:0] OUTPUT_STREAM_TDEST;
input  [31:0] rows;
input  [31:0] cols;
input   ap_clk;
input   ap_rst_n;
input   ap_start;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;
output   ap_done;
output   ap_idle;
output   ap_ready;

reg ap_idle;
reg    ap_rst_n_inv;
wire    image_filter_Block_Mat_exit1217_proc_U0_ap_start;
wire    image_filter_Block_Mat_exit1217_proc_U0_ap_done;
reg    image_filter_Block_Mat_exit1217_proc_U0_ap_continue;
wire    image_filter_Block_Mat_exit1217_proc_U0_ap_idle;
wire    image_filter_Block_Mat_exit1217_proc_U0_ap_ready;
wire   [31:0] image_filter_Block_Mat_exit1217_proc_U0_rows;
wire   [31:0] image_filter_Block_Mat_exit1217_proc_U0_cols;
wire   [11:0] image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out_din;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out_full_n;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out_write;
wire   [11:0] image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out1_din;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out1_full_n;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out1_write;
wire   [11:0] image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out_din;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out_full_n;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out_write;
wire   [11:0] image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out2_din;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out2_full_n;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out2_write;
wire   [11:0] image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out_din;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out_full_n;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out_write;
wire   [11:0] image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out3_din;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out3_full_n;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out3_write;
wire   [11:0] image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out_din;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out_full_n;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out_write;
wire   [11:0] image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out4_din;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out4_full_n;
wire    image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out4_write;
wire   [11:0] image_filter_Block_Mat_exit1217_proc_U0_ap_return_0;
wire   [11:0] image_filter_Block_Mat_exit1217_proc_U0_ap_return_1;
reg    ap_chn_write_image_filter_Block_Mat_exit1217_proc_U0_p_dst_rows_V_channel;
wire    p_dst_rows_V_channel_full_n;
reg    ap_reg_ready_p_dst_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_p_dst_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_Mat_exit1217_proc_U0_p_dst_cols_V_channel;
wire    p_dst_cols_V_channel_full_n;
reg    ap_reg_ready_p_dst_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_p_dst_cols_V_channel_full_n;
wire    image_filter_AXIvideo2Mat_U0_ap_start;
wire    image_filter_AXIvideo2Mat_U0_ap_done;
wire    image_filter_AXIvideo2Mat_U0_ap_continue;
wire    image_filter_AXIvideo2Mat_U0_ap_idle;
wire    image_filter_AXIvideo2Mat_U0_ap_ready;
wire   [31:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDATA;
wire    image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TVALID;
wire    image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TREADY;
wire   [3:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP;
wire   [3:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB;
wire   [0:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TUSER;
wire   [0:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TLAST;
wire   [0:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TID;
wire   [0:0] image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDEST;
wire   [11:0] image_filter_AXIvideo2Mat_U0_img_rows_V_dout;
wire    image_filter_AXIvideo2Mat_U0_img_rows_V_empty_n;
wire    image_filter_AXIvideo2Mat_U0_img_rows_V_read;
wire   [11:0] image_filter_AXIvideo2Mat_U0_img_cols_V_dout;
wire    image_filter_AXIvideo2Mat_U0_img_cols_V_empty_n;
wire    image_filter_AXIvideo2Mat_U0_img_cols_V_read;
wire   [7:0] image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_full_n;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_full_n;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_full_n;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_write;
reg    image_filter_Block_Mat_exit121719_proc1_U0_ap_start = 1'b0;
wire    image_filter_Block_Mat_exit121719_proc1_U0_ap_done;
reg    image_filter_Block_Mat_exit121719_proc1_U0_ap_continue;
wire    image_filter_Block_Mat_exit121719_proc1_U0_ap_idle;
wire    image_filter_Block_Mat_exit121719_proc1_U0_ap_ready;
wire   [11:0] image_filter_Block_Mat_exit121719_proc1_U0_p_src_rows_V_2_reload_dout;
wire    image_filter_Block_Mat_exit121719_proc1_U0_p_src_rows_V_2_reload_empty_n;
wire    image_filter_Block_Mat_exit121719_proc1_U0_p_src_rows_V_2_reload_read;
wire   [11:0] image_filter_Block_Mat_exit121719_proc1_U0_p_src_cols_V_2_reload_dout;
wire    image_filter_Block_Mat_exit121719_proc1_U0_p_src_cols_V_2_reload_empty_n;
wire    image_filter_Block_Mat_exit121719_proc1_U0_p_src_cols_V_2_reload_read;
wire   [11:0] image_filter_Block_Mat_exit121719_proc1_U0_ap_return_0;
wire   [11:0] image_filter_Block_Mat_exit121719_proc1_U0_ap_return_1;
wire   [11:0] image_filter_Block_Mat_exit121719_proc1_U0_ap_return_2;
wire   [11:0] image_filter_Block_Mat_exit121719_proc1_U0_ap_return_3;
wire   [11:0] image_filter_Block_Mat_exit121719_proc1_U0_ap_return_4;
wire   [11:0] image_filter_Block_Mat_exit121719_proc1_U0_ap_return_5;
reg    ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_mask_rows_V_channel;
wire    mask_rows_V_channel_full_n;
reg    ap_reg_ready_mask_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_mask_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src0_rows_V_channel;
wire    src0_rows_V_channel_full_n;
reg    ap_reg_ready_src0_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_src0_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src0_cols_V_channel;
wire    src0_cols_V_channel_full_n;
reg    ap_reg_ready_src0_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_src0_cols_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src1_rows_V_channel;
wire    src1_rows_V_channel_full_n;
reg    ap_reg_ready_src1_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_src1_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src1_cols_V_channel;
wire    src1_cols_V_channel_full_n;
reg    ap_reg_ready_src1_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_src1_cols_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_mask_cols_V_channel;
wire    mask_cols_V_channel_full_n;
reg    ap_reg_ready_mask_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_mask_cols_V_channel_full_n;
reg    image_filter_Duplicate_1080_1920_32_32_U0_ap_start = 1'b0;
wire    image_filter_Duplicate_1080_1920_32_32_U0_ap_done;
wire    image_filter_Duplicate_1080_1920_32_32_U0_ap_continue;
wire    image_filter_Duplicate_1080_1920_32_32_U0_ap_idle;
wire    image_filter_Duplicate_1080_1920_32_32_U0_ap_ready;
wire   [11:0] image_filter_Duplicate_1080_1920_32_32_U0_src_rows_V_dout;
wire    image_filter_Duplicate_1080_1920_32_32_U0_src_rows_V_empty_n;
wire    image_filter_Duplicate_1080_1920_32_32_U0_src_rows_V_read;
wire   [11:0] image_filter_Duplicate_1080_1920_32_32_U0_src_cols_V_dout;
wire    image_filter_Duplicate_1080_1920_32_32_U0_src_cols_V_empty_n;
wire    image_filter_Duplicate_1080_1920_32_32_U0_src_cols_V_read;
wire   [7:0] image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_0_V_dout;
wire    image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_0_V_empty_n;
wire    image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_0_V_read;
wire   [7:0] image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_1_V_dout;
wire    image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_1_V_empty_n;
wire    image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_1_V_read;
wire   [7:0] image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_2_V_dout;
wire    image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_2_V_empty_n;
wire    image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_2_V_read;
wire   [7:0] image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_0_V_din;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_0_V_full_n;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_0_V_write;
wire   [7:0] image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_1_V_din;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_1_V_full_n;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_1_V_write;
wire   [7:0] image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_2_V_din;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_2_V_full_n;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_2_V_write;
wire   [7:0] image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_0_V_din;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_0_V_full_n;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_0_V_write;
wire   [7:0] image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_1_V_din;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_1_V_full_n;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_1_V_write;
wire   [7:0] image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_2_V_din;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_2_V_full_n;
wire    image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_2_V_write;
reg    image_filter_Block_Mat_exit121721_proc1_U0_ap_start = 1'b0;
wire    image_filter_Block_Mat_exit121721_proc1_U0_ap_done;
reg    image_filter_Block_Mat_exit121721_proc1_U0_ap_continue;
wire    image_filter_Block_Mat_exit121721_proc1_U0_ap_idle;
wire    image_filter_Block_Mat_exit121721_proc1_U0_ap_ready;
wire   [11:0] image_filter_Block_Mat_exit121721_proc1_U0_p_src_rows_V_2_reload_dout;
wire    image_filter_Block_Mat_exit121721_proc1_U0_p_src_rows_V_2_reload_empty_n;
wire    image_filter_Block_Mat_exit121721_proc1_U0_p_src_rows_V_2_reload_read;
wire   [11:0] image_filter_Block_Mat_exit121721_proc1_U0_p_src_cols_V_2_reload_dout;
wire    image_filter_Block_Mat_exit121721_proc1_U0_p_src_cols_V_2_reload_empty_n;
wire    image_filter_Block_Mat_exit121721_proc1_U0_p_src_cols_V_2_reload_read;
wire   [11:0] image_filter_Block_Mat_exit121721_proc1_U0_ap_return_0;
wire   [11:0] image_filter_Block_Mat_exit121721_proc1_U0_ap_return_1;
reg    ap_chn_write_image_filter_Block_Mat_exit121721_proc1_U0_gray_rows_V_channel;
wire    gray_rows_V_channel_full_n;
reg    ap_reg_ready_gray_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_gray_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_Mat_exit121721_proc1_U0_gray_cols_V_channel;
wire    gray_cols_V_channel_full_n;
reg    ap_reg_ready_gray_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_gray_cols_V_channel_full_n;
wire    image_filter_CvtColor_U0_ap_start;
wire    image_filter_CvtColor_U0_ap_done;
wire    image_filter_CvtColor_U0_ap_continue;
wire    image_filter_CvtColor_U0_ap_idle;
wire    image_filter_CvtColor_U0_ap_ready;
wire   [11:0] image_filter_CvtColor_U0_p_src_rows_V_read;
wire   [11:0] image_filter_CvtColor_U0_p_src_cols_V_read;
wire   [7:0] image_filter_CvtColor_U0_p_src_data_stream_0_V_dout;
wire    image_filter_CvtColor_U0_p_src_data_stream_0_V_empty_n;
wire    image_filter_CvtColor_U0_p_src_data_stream_0_V_read;
wire   [7:0] image_filter_CvtColor_U0_p_src_data_stream_1_V_dout;
wire    image_filter_CvtColor_U0_p_src_data_stream_1_V_empty_n;
wire    image_filter_CvtColor_U0_p_src_data_stream_1_V_read;
wire   [7:0] image_filter_CvtColor_U0_p_src_data_stream_2_V_dout;
wire    image_filter_CvtColor_U0_p_src_data_stream_2_V_empty_n;
wire    image_filter_CvtColor_U0_p_src_data_stream_2_V_read;
wire   [7:0] image_filter_CvtColor_U0_p_dst_data_stream_V_din;
wire    image_filter_CvtColor_U0_p_dst_data_stream_V_full_n;
wire    image_filter_CvtColor_U0_p_dst_data_stream_V_write;
wire    image_filter_FAST_t_opr_U0_ap_start;
wire    image_filter_FAST_t_opr_U0_ap_done;
wire    image_filter_FAST_t_opr_U0_ap_continue;
wire    image_filter_FAST_t_opr_U0_ap_idle;
wire    image_filter_FAST_t_opr_U0_ap_ready;
wire   [11:0] image_filter_FAST_t_opr_U0_p_src_rows_V_read;
wire   [11:0] image_filter_FAST_t_opr_U0_p_src_cols_V_read;
wire   [7:0] image_filter_FAST_t_opr_U0_p_src_data_stream_V_dout;
wire    image_filter_FAST_t_opr_U0_p_src_data_stream_V_empty_n;
wire    image_filter_FAST_t_opr_U0_p_src_data_stream_V_read;
wire   [7:0] image_filter_FAST_t_opr_U0_p_mask_data_stream_V_din;
wire    image_filter_FAST_t_opr_U0_p_mask_data_stream_V_full_n;
wire    image_filter_FAST_t_opr_U0_p_mask_data_stream_V_write;
wire    image_filter_Dilate_0_0_1080_1920_U0_ap_start;
wire    image_filter_Dilate_0_0_1080_1920_U0_ap_done;
wire    image_filter_Dilate_0_0_1080_1920_U0_ap_continue;
wire    image_filter_Dilate_0_0_1080_1920_U0_ap_idle;
wire    image_filter_Dilate_0_0_1080_1920_U0_ap_ready;
wire   [11:0] image_filter_Dilate_0_0_1080_1920_U0_p_src_rows_V_read;
wire   [11:0] image_filter_Dilate_0_0_1080_1920_U0_p_src_cols_V_read;
wire   [7:0] image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_dout;
wire    image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_empty_n;
wire    image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_read;
wire   [7:0] image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_din;
wire    image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_full_n;
wire    image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_write;
wire    image_filter_PaintMask_32_0_1080_1920_U0_ap_start;
wire    image_filter_PaintMask_32_0_1080_1920_U0_ap_done;
wire    image_filter_PaintMask_32_0_1080_1920_U0_ap_continue;
wire    image_filter_PaintMask_32_0_1080_1920_U0_ap_idle;
wire    image_filter_PaintMask_32_0_1080_1920_U0_ap_ready;
wire   [11:0] image_filter_PaintMask_32_0_1080_1920_U0_p_src_rows_V_read;
wire   [11:0] image_filter_PaintMask_32_0_1080_1920_U0_p_src_cols_V_read;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_dout;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_empty_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_read;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_dout;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_empty_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_read;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_dout;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_empty_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_read;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_dout;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_empty_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_read;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_din;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_full_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_write;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_din;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_full_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_write;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_din;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_full_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_write;
wire    image_filter_Mat2AXIvideo_U0_ap_start;
wire    image_filter_Mat2AXIvideo_U0_ap_done;
wire    image_filter_Mat2AXIvideo_U0_ap_continue;
wire    image_filter_Mat2AXIvideo_U0_ap_idle;
wire    image_filter_Mat2AXIvideo_U0_ap_ready;
wire   [11:0] image_filter_Mat2AXIvideo_U0_img_rows_V_read;
wire   [11:0] image_filter_Mat2AXIvideo_U0_img_cols_V_read;
wire   [7:0] image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_dout;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_read;
wire   [7:0] image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_dout;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_read;
wire   [7:0] image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_dout;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_read;
wire   [31:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;
wire    image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;
wire    image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY;
wire   [3:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;
wire   [3:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;
wire   [0:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;
wire   [0:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;
wire   [0:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TID;
wire   [0:0] image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;
wire    ap_sig_hs_continue;
wire    p_src_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] p_src_rows_V_channel_din;
wire    p_src_rows_V_channel_full_n;
wire    p_src_rows_V_channel_write;
wire   [11:0] p_src_rows_V_channel_dout;
wire    p_src_rows_V_channel_empty_n;
wire    p_src_rows_V_channel_read;
wire    p_src_rows_V_channel38_U_ap_dummy_ce;
wire   [11:0] p_src_rows_V_channel38_din;
wire    p_src_rows_V_channel38_full_n;
wire    p_src_rows_V_channel38_write;
wire   [11:0] p_src_rows_V_channel38_dout;
wire    p_src_rows_V_channel38_empty_n;
wire    p_src_rows_V_channel38_read;
wire    p_src_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] p_src_cols_V_channel_din;
wire    p_src_cols_V_channel_full_n;
wire    p_src_cols_V_channel_write;
wire   [11:0] p_src_cols_V_channel_dout;
wire    p_src_cols_V_channel_empty_n;
wire    p_src_cols_V_channel_read;
wire    p_src_cols_V_channel39_U_ap_dummy_ce;
wire   [11:0] p_src_cols_V_channel39_din;
wire    p_src_cols_V_channel39_full_n;
wire    p_src_cols_V_channel39_write;
wire   [11:0] p_src_cols_V_channel39_dout;
wire    p_src_cols_V_channel39_empty_n;
wire    p_src_cols_V_channel39_read;
wire    p_src_rows_V_2_loc_channel_U_ap_dummy_ce;
wire   [11:0] p_src_rows_V_2_loc_channel_din;
wire    p_src_rows_V_2_loc_channel_full_n;
wire    p_src_rows_V_2_loc_channel_write;
wire   [11:0] p_src_rows_V_2_loc_channel_dout;
wire    p_src_rows_V_2_loc_channel_empty_n;
wire    p_src_rows_V_2_loc_channel_read;
wire    p_src_rows_V_2_loc_channel40_U_ap_dummy_ce;
wire   [11:0] p_src_rows_V_2_loc_channel40_din;
wire    p_src_rows_V_2_loc_channel40_full_n;
wire    p_src_rows_V_2_loc_channel40_write;
wire   [11:0] p_src_rows_V_2_loc_channel40_dout;
wire    p_src_rows_V_2_loc_channel40_empty_n;
wire    p_src_rows_V_2_loc_channel40_read;
wire    p_src_cols_V_2_loc_channel_U_ap_dummy_ce;
wire   [11:0] p_src_cols_V_2_loc_channel_din;
wire    p_src_cols_V_2_loc_channel_full_n;
wire    p_src_cols_V_2_loc_channel_write;
wire   [11:0] p_src_cols_V_2_loc_channel_dout;
wire    p_src_cols_V_2_loc_channel_empty_n;
wire    p_src_cols_V_2_loc_channel_read;
wire    p_src_cols_V_2_loc_channel41_U_ap_dummy_ce;
wire   [11:0] p_src_cols_V_2_loc_channel41_din;
wire    p_src_cols_V_2_loc_channel41_full_n;
wire    p_src_cols_V_2_loc_channel41_write;
wire   [11:0] p_src_cols_V_2_loc_channel41_dout;
wire    p_src_cols_V_2_loc_channel41_empty_n;
wire    p_src_cols_V_2_loc_channel41_read;
wire    p_dst_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] p_dst_rows_V_channel_din;
wire    p_dst_rows_V_channel_write;
wire   [11:0] p_dst_rows_V_channel_dout;
wire    p_dst_rows_V_channel_empty_n;
wire    p_dst_rows_V_channel_read;
wire    p_dst_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] p_dst_cols_V_channel_din;
wire    p_dst_cols_V_channel_write;
wire   [11:0] p_dst_cols_V_channel_dout;
wire    p_dst_cols_V_channel_empty_n;
wire    p_dst_cols_V_channel_read;
wire    p_src_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] p_src_data_stream_0_V_din;
wire    p_src_data_stream_0_V_full_n;
wire    p_src_data_stream_0_V_write;
wire   [7:0] p_src_data_stream_0_V_dout;
wire    p_src_data_stream_0_V_empty_n;
wire    p_src_data_stream_0_V_read;
wire    p_src_data_stream_1_V_U_ap_dummy_ce;
wire   [7:0] p_src_data_stream_1_V_din;
wire    p_src_data_stream_1_V_full_n;
wire    p_src_data_stream_1_V_write;
wire   [7:0] p_src_data_stream_1_V_dout;
wire    p_src_data_stream_1_V_empty_n;
wire    p_src_data_stream_1_V_read;
wire    p_src_data_stream_2_V_U_ap_dummy_ce;
wire   [7:0] p_src_data_stream_2_V_din;
wire    p_src_data_stream_2_V_full_n;
wire    p_src_data_stream_2_V_write;
wire   [7:0] p_src_data_stream_2_V_dout;
wire    p_src_data_stream_2_V_empty_n;
wire    p_src_data_stream_2_V_read;
wire    src0_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] src0_rows_V_channel_din;
wire    src0_rows_V_channel_write;
wire   [11:0] src0_rows_V_channel_dout;
wire    src0_rows_V_channel_empty_n;
wire    src0_rows_V_channel_read;
wire    src0_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] src0_cols_V_channel_din;
wire    src0_cols_V_channel_write;
wire   [11:0] src0_cols_V_channel_dout;
wire    src0_cols_V_channel_empty_n;
wire    src0_cols_V_channel_read;
wire    src1_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] src1_rows_V_channel_din;
wire    src1_rows_V_channel_write;
wire   [11:0] src1_rows_V_channel_dout;
wire    src1_rows_V_channel_empty_n;
wire    src1_rows_V_channel_read;
wire    src1_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] src1_cols_V_channel_din;
wire    src1_cols_V_channel_write;
wire   [11:0] src1_cols_V_channel_dout;
wire    src1_cols_V_channel_empty_n;
wire    src1_cols_V_channel_read;
wire    mask_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] mask_rows_V_channel_din;
wire    mask_rows_V_channel_write;
wire   [11:0] mask_rows_V_channel_dout;
wire    mask_rows_V_channel_empty_n;
wire    mask_rows_V_channel_read;
wire    mask_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] mask_cols_V_channel_din;
wire    mask_cols_V_channel_write;
wire   [11:0] mask_cols_V_channel_dout;
wire    mask_cols_V_channel_empty_n;
wire    mask_cols_V_channel_read;
wire    src0_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] src0_data_stream_0_V_din;
wire    src0_data_stream_0_V_full_n;
wire    src0_data_stream_0_V_write;
wire   [7:0] src0_data_stream_0_V_dout;
wire    src0_data_stream_0_V_empty_n;
wire    src0_data_stream_0_V_read;
wire    src0_data_stream_1_V_U_ap_dummy_ce;
wire   [7:0] src0_data_stream_1_V_din;
wire    src0_data_stream_1_V_full_n;
wire    src0_data_stream_1_V_write;
wire   [7:0] src0_data_stream_1_V_dout;
wire    src0_data_stream_1_V_empty_n;
wire    src0_data_stream_1_V_read;
wire    src0_data_stream_2_V_U_ap_dummy_ce;
wire   [7:0] src0_data_stream_2_V_din;
wire    src0_data_stream_2_V_full_n;
wire    src0_data_stream_2_V_write;
wire   [7:0] src0_data_stream_2_V_dout;
wire    src0_data_stream_2_V_empty_n;
wire    src0_data_stream_2_V_read;
wire    src1_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] src1_data_stream_0_V_din;
wire    src1_data_stream_0_V_full_n;
wire    src1_data_stream_0_V_write;
wire   [7:0] src1_data_stream_0_V_dout;
wire    src1_data_stream_0_V_empty_n;
wire    src1_data_stream_0_V_read;
wire    src1_data_stream_1_V_U_ap_dummy_ce;
wire   [7:0] src1_data_stream_1_V_din;
wire    src1_data_stream_1_V_full_n;
wire    src1_data_stream_1_V_write;
wire   [7:0] src1_data_stream_1_V_dout;
wire    src1_data_stream_1_V_empty_n;
wire    src1_data_stream_1_V_read;
wire    src1_data_stream_2_V_U_ap_dummy_ce;
wire   [7:0] src1_data_stream_2_V_din;
wire    src1_data_stream_2_V_full_n;
wire    src1_data_stream_2_V_write;
wire   [7:0] src1_data_stream_2_V_dout;
wire    src1_data_stream_2_V_empty_n;
wire    src1_data_stream_2_V_read;
wire    gray_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] gray_rows_V_channel_din;
wire    gray_rows_V_channel_write;
wire   [11:0] gray_rows_V_channel_dout;
wire    gray_rows_V_channel_empty_n;
wire    gray_rows_V_channel_read;
wire    gray_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] gray_cols_V_channel_din;
wire    gray_cols_V_channel_write;
wire   [11:0] gray_cols_V_channel_dout;
wire    gray_cols_V_channel_empty_n;
wire    gray_cols_V_channel_read;
wire    gray_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] gray_data_stream_0_V_din;
wire    gray_data_stream_0_V_full_n;
wire    gray_data_stream_0_V_write;
wire   [7:0] gray_data_stream_0_V_dout;
wire    gray_data_stream_0_V_empty_n;
wire    gray_data_stream_0_V_read;
wire    mask_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] mask_data_stream_0_V_din;
wire    mask_data_stream_0_V_full_n;
wire    mask_data_stream_0_V_write;
wire   [7:0] mask_data_stream_0_V_dout;
wire    mask_data_stream_0_V_empty_n;
wire    mask_data_stream_0_V_read;
wire    dmask_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] dmask_data_stream_0_V_din;
wire    dmask_data_stream_0_V_full_n;
wire    dmask_data_stream_0_V_write;
wire   [7:0] dmask_data_stream_0_V_dout;
wire    dmask_data_stream_0_V_empty_n;
wire    dmask_data_stream_0_V_read;
wire    p_dst_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] p_dst_data_stream_0_V_din;
wire    p_dst_data_stream_0_V_full_n;
wire    p_dst_data_stream_0_V_write;
wire   [7:0] p_dst_data_stream_0_V_dout;
wire    p_dst_data_stream_0_V_empty_n;
wire    p_dst_data_stream_0_V_read;
wire    p_dst_data_stream_1_V_U_ap_dummy_ce;
wire   [7:0] p_dst_data_stream_1_V_din;
wire    p_dst_data_stream_1_V_full_n;
wire    p_dst_data_stream_1_V_write;
wire   [7:0] p_dst_data_stream_1_V_dout;
wire    p_dst_data_stream_1_V_empty_n;
wire    p_dst_data_stream_1_V_read;
wire    p_dst_data_stream_2_V_U_ap_dummy_ce;
wire   [7:0] p_dst_data_stream_2_V_din;
wire    p_dst_data_stream_2_V_full_n;
wire    p_dst_data_stream_2_V_write;
wire   [7:0] p_dst_data_stream_2_V_dout;
wire    p_dst_data_stream_2_V_empty_n;
wire    p_dst_data_stream_2_V_read;
reg    ap_reg_procdone_image_filter_Block_Mat_exit1217_proc_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_image_filter_AXIvideo2Mat_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Block_Mat_exit121719_proc1_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Duplicate_1080_1920_32_32_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Block_Mat_exit121721_proc1_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_CvtColor_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_FAST_t_opr_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Mat2AXIvideo_U0 = 1'b0;
reg    ap_CS;
wire    ap_sig_top_allready;


image_filter_Block_Mat_exit1217_proc image_filter_Block_Mat_exit1217_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Block_Mat_exit1217_proc_U0_ap_start ),
    .ap_done( image_filter_Block_Mat_exit1217_proc_U0_ap_done ),
    .ap_continue( image_filter_Block_Mat_exit1217_proc_U0_ap_continue ),
    .ap_idle( image_filter_Block_Mat_exit1217_proc_U0_ap_idle ),
    .ap_ready( image_filter_Block_Mat_exit1217_proc_U0_ap_ready ),
    .rows( image_filter_Block_Mat_exit1217_proc_U0_rows ),
    .cols( image_filter_Block_Mat_exit1217_proc_U0_cols ),
    .p_src_rows_V_out_din( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out_din ),
    .p_src_rows_V_out_full_n( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out_full_n ),
    .p_src_rows_V_out_write( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out_write ),
    .p_src_rows_V_out1_din( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out1_din ),
    .p_src_rows_V_out1_full_n( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out1_full_n ),
    .p_src_rows_V_out1_write( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out1_write ),
    .p_src_cols_V_out_din( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out_din ),
    .p_src_cols_V_out_full_n( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out_full_n ),
    .p_src_cols_V_out_write( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out_write ),
    .p_src_cols_V_out2_din( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out2_din ),
    .p_src_cols_V_out2_full_n( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out2_full_n ),
    .p_src_cols_V_out2_write( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out2_write ),
    .p_src_rows_V_2_out_out_din( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out_din ),
    .p_src_rows_V_2_out_out_full_n( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out_full_n ),
    .p_src_rows_V_2_out_out_write( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out_write ),
    .p_src_rows_V_2_out_out3_din( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out3_din ),
    .p_src_rows_V_2_out_out3_full_n( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out3_full_n ),
    .p_src_rows_V_2_out_out3_write( image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out3_write ),
    .p_src_cols_V_2_out_out_din( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out_din ),
    .p_src_cols_V_2_out_out_full_n( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out_full_n ),
    .p_src_cols_V_2_out_out_write( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out_write ),
    .p_src_cols_V_2_out_out4_din( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out4_din ),
    .p_src_cols_V_2_out_out4_full_n( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out4_full_n ),
    .p_src_cols_V_2_out_out4_write( image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out4_write ),
    .ap_return_0( image_filter_Block_Mat_exit1217_proc_U0_ap_return_0 ),
    .ap_return_1( image_filter_Block_Mat_exit1217_proc_U0_ap_return_1 )
);

image_filter_AXIvideo2Mat image_filter_AXIvideo2Mat_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_AXIvideo2Mat_U0_ap_start ),
    .ap_done( image_filter_AXIvideo2Mat_U0_ap_done ),
    .ap_continue( image_filter_AXIvideo2Mat_U0_ap_continue ),
    .ap_idle( image_filter_AXIvideo2Mat_U0_ap_idle ),
    .ap_ready( image_filter_AXIvideo2Mat_U0_ap_ready ),
    .INPUT_STREAM_TDATA( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDATA ),
    .INPUT_STREAM_TVALID( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TVALID ),
    .INPUT_STREAM_TREADY( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TREADY ),
    .INPUT_STREAM_TKEEP( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP ),
    .INPUT_STREAM_TSTRB( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB ),
    .INPUT_STREAM_TUSER( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TUSER ),
    .INPUT_STREAM_TLAST( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TLAST ),
    .INPUT_STREAM_TID( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TID ),
    .INPUT_STREAM_TDEST( image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDEST ),
    .img_rows_V_dout( image_filter_AXIvideo2Mat_U0_img_rows_V_dout ),
    .img_rows_V_empty_n( image_filter_AXIvideo2Mat_U0_img_rows_V_empty_n ),
    .img_rows_V_read( image_filter_AXIvideo2Mat_U0_img_rows_V_read ),
    .img_cols_V_dout( image_filter_AXIvideo2Mat_U0_img_cols_V_dout ),
    .img_cols_V_empty_n( image_filter_AXIvideo2Mat_U0_img_cols_V_empty_n ),
    .img_cols_V_read( image_filter_AXIvideo2Mat_U0_img_cols_V_read ),
    .img_data_stream_0_V_din( image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_din ),
    .img_data_stream_0_V_full_n( image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_full_n ),
    .img_data_stream_0_V_write( image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_write ),
    .img_data_stream_1_V_din( image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_din ),
    .img_data_stream_1_V_full_n( image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_full_n ),
    .img_data_stream_1_V_write( image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_write ),
    .img_data_stream_2_V_din( image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_din ),
    .img_data_stream_2_V_full_n( image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_full_n ),
    .img_data_stream_2_V_write( image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_write )
);

image_filter_Block_Mat_exit121719_proc1 image_filter_Block_Mat_exit121719_proc1_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Block_Mat_exit121719_proc1_U0_ap_start ),
    .ap_done( image_filter_Block_Mat_exit121719_proc1_U0_ap_done ),
    .ap_continue( image_filter_Block_Mat_exit121719_proc1_U0_ap_continue ),
    .ap_idle( image_filter_Block_Mat_exit121719_proc1_U0_ap_idle ),
    .ap_ready( image_filter_Block_Mat_exit121719_proc1_U0_ap_ready ),
    .p_src_rows_V_2_reload_dout( image_filter_Block_Mat_exit121719_proc1_U0_p_src_rows_V_2_reload_dout ),
    .p_src_rows_V_2_reload_empty_n( image_filter_Block_Mat_exit121719_proc1_U0_p_src_rows_V_2_reload_empty_n ),
    .p_src_rows_V_2_reload_read( image_filter_Block_Mat_exit121719_proc1_U0_p_src_rows_V_2_reload_read ),
    .p_src_cols_V_2_reload_dout( image_filter_Block_Mat_exit121719_proc1_U0_p_src_cols_V_2_reload_dout ),
    .p_src_cols_V_2_reload_empty_n( image_filter_Block_Mat_exit121719_proc1_U0_p_src_cols_V_2_reload_empty_n ),
    .p_src_cols_V_2_reload_read( image_filter_Block_Mat_exit121719_proc1_U0_p_src_cols_V_2_reload_read ),
    .ap_return_0( image_filter_Block_Mat_exit121719_proc1_U0_ap_return_0 ),
    .ap_return_1( image_filter_Block_Mat_exit121719_proc1_U0_ap_return_1 ),
    .ap_return_2( image_filter_Block_Mat_exit121719_proc1_U0_ap_return_2 ),
    .ap_return_3( image_filter_Block_Mat_exit121719_proc1_U0_ap_return_3 ),
    .ap_return_4( image_filter_Block_Mat_exit121719_proc1_U0_ap_return_4 ),
    .ap_return_5( image_filter_Block_Mat_exit121719_proc1_U0_ap_return_5 )
);

image_filter_Duplicate_1080_1920_32_32_s image_filter_Duplicate_1080_1920_32_32_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Duplicate_1080_1920_32_32_U0_ap_start ),
    .ap_done( image_filter_Duplicate_1080_1920_32_32_U0_ap_done ),
    .ap_continue( image_filter_Duplicate_1080_1920_32_32_U0_ap_continue ),
    .ap_idle( image_filter_Duplicate_1080_1920_32_32_U0_ap_idle ),
    .ap_ready( image_filter_Duplicate_1080_1920_32_32_U0_ap_ready ),
    .src_rows_V_dout( image_filter_Duplicate_1080_1920_32_32_U0_src_rows_V_dout ),
    .src_rows_V_empty_n( image_filter_Duplicate_1080_1920_32_32_U0_src_rows_V_empty_n ),
    .src_rows_V_read( image_filter_Duplicate_1080_1920_32_32_U0_src_rows_V_read ),
    .src_cols_V_dout( image_filter_Duplicate_1080_1920_32_32_U0_src_cols_V_dout ),
    .src_cols_V_empty_n( image_filter_Duplicate_1080_1920_32_32_U0_src_cols_V_empty_n ),
    .src_cols_V_read( image_filter_Duplicate_1080_1920_32_32_U0_src_cols_V_read ),
    .src_data_stream_0_V_dout( image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_0_V_dout ),
    .src_data_stream_0_V_empty_n( image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_0_V_empty_n ),
    .src_data_stream_0_V_read( image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_0_V_read ),
    .src_data_stream_1_V_dout( image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_1_V_dout ),
    .src_data_stream_1_V_empty_n( image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_1_V_empty_n ),
    .src_data_stream_1_V_read( image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_1_V_read ),
    .src_data_stream_2_V_dout( image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_2_V_dout ),
    .src_data_stream_2_V_empty_n( image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_2_V_empty_n ),
    .src_data_stream_2_V_read( image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_2_V_read ),
    .dst1_data_stream_0_V_din( image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_0_V_din ),
    .dst1_data_stream_0_V_full_n( image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_0_V_full_n ),
    .dst1_data_stream_0_V_write( image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_0_V_write ),
    .dst1_data_stream_1_V_din( image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_1_V_din ),
    .dst1_data_stream_1_V_full_n( image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_1_V_full_n ),
    .dst1_data_stream_1_V_write( image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_1_V_write ),
    .dst1_data_stream_2_V_din( image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_2_V_din ),
    .dst1_data_stream_2_V_full_n( image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_2_V_full_n ),
    .dst1_data_stream_2_V_write( image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_2_V_write ),
    .dst2_data_stream_0_V_din( image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_0_V_din ),
    .dst2_data_stream_0_V_full_n( image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_0_V_full_n ),
    .dst2_data_stream_0_V_write( image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_0_V_write ),
    .dst2_data_stream_1_V_din( image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_1_V_din ),
    .dst2_data_stream_1_V_full_n( image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_1_V_full_n ),
    .dst2_data_stream_1_V_write( image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_1_V_write ),
    .dst2_data_stream_2_V_din( image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_2_V_din ),
    .dst2_data_stream_2_V_full_n( image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_2_V_full_n ),
    .dst2_data_stream_2_V_write( image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_2_V_write )
);

image_filter_Block_Mat_exit121721_proc1 image_filter_Block_Mat_exit121721_proc1_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Block_Mat_exit121721_proc1_U0_ap_start ),
    .ap_done( image_filter_Block_Mat_exit121721_proc1_U0_ap_done ),
    .ap_continue( image_filter_Block_Mat_exit121721_proc1_U0_ap_continue ),
    .ap_idle( image_filter_Block_Mat_exit121721_proc1_U0_ap_idle ),
    .ap_ready( image_filter_Block_Mat_exit121721_proc1_U0_ap_ready ),
    .p_src_rows_V_2_reload_dout( image_filter_Block_Mat_exit121721_proc1_U0_p_src_rows_V_2_reload_dout ),
    .p_src_rows_V_2_reload_empty_n( image_filter_Block_Mat_exit121721_proc1_U0_p_src_rows_V_2_reload_empty_n ),
    .p_src_rows_V_2_reload_read( image_filter_Block_Mat_exit121721_proc1_U0_p_src_rows_V_2_reload_read ),
    .p_src_cols_V_2_reload_dout( image_filter_Block_Mat_exit121721_proc1_U0_p_src_cols_V_2_reload_dout ),
    .p_src_cols_V_2_reload_empty_n( image_filter_Block_Mat_exit121721_proc1_U0_p_src_cols_V_2_reload_empty_n ),
    .p_src_cols_V_2_reload_read( image_filter_Block_Mat_exit121721_proc1_U0_p_src_cols_V_2_reload_read ),
    .ap_return_0( image_filter_Block_Mat_exit121721_proc1_U0_ap_return_0 ),
    .ap_return_1( image_filter_Block_Mat_exit121721_proc1_U0_ap_return_1 )
);

image_filter_CvtColor image_filter_CvtColor_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_CvtColor_U0_ap_start ),
    .ap_done( image_filter_CvtColor_U0_ap_done ),
    .ap_continue( image_filter_CvtColor_U0_ap_continue ),
    .ap_idle( image_filter_CvtColor_U0_ap_idle ),
    .ap_ready( image_filter_CvtColor_U0_ap_ready ),
    .p_src_rows_V_read( image_filter_CvtColor_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( image_filter_CvtColor_U0_p_src_cols_V_read ),
    .p_src_data_stream_0_V_dout( image_filter_CvtColor_U0_p_src_data_stream_0_V_dout ),
    .p_src_data_stream_0_V_empty_n( image_filter_CvtColor_U0_p_src_data_stream_0_V_empty_n ),
    .p_src_data_stream_0_V_read( image_filter_CvtColor_U0_p_src_data_stream_0_V_read ),
    .p_src_data_stream_1_V_dout( image_filter_CvtColor_U0_p_src_data_stream_1_V_dout ),
    .p_src_data_stream_1_V_empty_n( image_filter_CvtColor_U0_p_src_data_stream_1_V_empty_n ),
    .p_src_data_stream_1_V_read( image_filter_CvtColor_U0_p_src_data_stream_1_V_read ),
    .p_src_data_stream_2_V_dout( image_filter_CvtColor_U0_p_src_data_stream_2_V_dout ),
    .p_src_data_stream_2_V_empty_n( image_filter_CvtColor_U0_p_src_data_stream_2_V_empty_n ),
    .p_src_data_stream_2_V_read( image_filter_CvtColor_U0_p_src_data_stream_2_V_read ),
    .p_dst_data_stream_V_din( image_filter_CvtColor_U0_p_dst_data_stream_V_din ),
    .p_dst_data_stream_V_full_n( image_filter_CvtColor_U0_p_dst_data_stream_V_full_n ),
    .p_dst_data_stream_V_write( image_filter_CvtColor_U0_p_dst_data_stream_V_write )
);

image_filter_FAST_t_opr image_filter_FAST_t_opr_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_FAST_t_opr_U0_ap_start ),
    .ap_done( image_filter_FAST_t_opr_U0_ap_done ),
    .ap_continue( image_filter_FAST_t_opr_U0_ap_continue ),
    .ap_idle( image_filter_FAST_t_opr_U0_ap_idle ),
    .ap_ready( image_filter_FAST_t_opr_U0_ap_ready ),
    .p_src_rows_V_read( image_filter_FAST_t_opr_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( image_filter_FAST_t_opr_U0_p_src_cols_V_read ),
    .p_src_data_stream_V_dout( image_filter_FAST_t_opr_U0_p_src_data_stream_V_dout ),
    .p_src_data_stream_V_empty_n( image_filter_FAST_t_opr_U0_p_src_data_stream_V_empty_n ),
    .p_src_data_stream_V_read( image_filter_FAST_t_opr_U0_p_src_data_stream_V_read ),
    .p_mask_data_stream_V_din( image_filter_FAST_t_opr_U0_p_mask_data_stream_V_din ),
    .p_mask_data_stream_V_full_n( image_filter_FAST_t_opr_U0_p_mask_data_stream_V_full_n ),
    .p_mask_data_stream_V_write( image_filter_FAST_t_opr_U0_p_mask_data_stream_V_write )
);

image_filter_Dilate_0_0_1080_1920_s image_filter_Dilate_0_0_1080_1920_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Dilate_0_0_1080_1920_U0_ap_start ),
    .ap_done( image_filter_Dilate_0_0_1080_1920_U0_ap_done ),
    .ap_continue( image_filter_Dilate_0_0_1080_1920_U0_ap_continue ),
    .ap_idle( image_filter_Dilate_0_0_1080_1920_U0_ap_idle ),
    .ap_ready( image_filter_Dilate_0_0_1080_1920_U0_ap_ready ),
    .p_src_rows_V_read( image_filter_Dilate_0_0_1080_1920_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( image_filter_Dilate_0_0_1080_1920_U0_p_src_cols_V_read ),
    .p_src_data_stream_V_dout( image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_dout ),
    .p_src_data_stream_V_empty_n( image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_empty_n ),
    .p_src_data_stream_V_read( image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_read ),
    .p_dst_data_stream_V_din( image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_din ),
    .p_dst_data_stream_V_full_n( image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_full_n ),
    .p_dst_data_stream_V_write( image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_write )
);

image_filter_PaintMask_32_0_1080_1920_s image_filter_PaintMask_32_0_1080_1920_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_PaintMask_32_0_1080_1920_U0_ap_start ),
    .ap_done( image_filter_PaintMask_32_0_1080_1920_U0_ap_done ),
    .ap_continue( image_filter_PaintMask_32_0_1080_1920_U0_ap_continue ),
    .ap_idle( image_filter_PaintMask_32_0_1080_1920_U0_ap_idle ),
    .ap_ready( image_filter_PaintMask_32_0_1080_1920_U0_ap_ready ),
    .p_src_rows_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_src_cols_V_read ),
    .p_src_data_stream_0_V_dout( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_dout ),
    .p_src_data_stream_0_V_empty_n( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_empty_n ),
    .p_src_data_stream_0_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_read ),
    .p_src_data_stream_1_V_dout( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_dout ),
    .p_src_data_stream_1_V_empty_n( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_empty_n ),
    .p_src_data_stream_1_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_read ),
    .p_src_data_stream_2_V_dout( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_dout ),
    .p_src_data_stream_2_V_empty_n( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_empty_n ),
    .p_src_data_stream_2_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_read ),
    .p_mask_data_stream_V_dout( image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_dout ),
    .p_mask_data_stream_V_empty_n( image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_empty_n ),
    .p_mask_data_stream_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_read ),
    .p_dst_data_stream_0_V_din( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_din ),
    .p_dst_data_stream_0_V_full_n( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_full_n ),
    .p_dst_data_stream_0_V_write( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_write ),
    .p_dst_data_stream_1_V_din( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_din ),
    .p_dst_data_stream_1_V_full_n( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_full_n ),
    .p_dst_data_stream_1_V_write( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_write ),
    .p_dst_data_stream_2_V_din( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_din ),
    .p_dst_data_stream_2_V_full_n( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_full_n ),
    .p_dst_data_stream_2_V_write( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_write )
);

image_filter_Mat2AXIvideo image_filter_Mat2AXIvideo_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Mat2AXIvideo_U0_ap_start ),
    .ap_done( image_filter_Mat2AXIvideo_U0_ap_done ),
    .ap_continue( image_filter_Mat2AXIvideo_U0_ap_continue ),
    .ap_idle( image_filter_Mat2AXIvideo_U0_ap_idle ),
    .ap_ready( image_filter_Mat2AXIvideo_U0_ap_ready ),
    .img_rows_V_read( image_filter_Mat2AXIvideo_U0_img_rows_V_read ),
    .img_cols_V_read( image_filter_Mat2AXIvideo_U0_img_cols_V_read ),
    .img_data_stream_0_V_dout( image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_dout ),
    .img_data_stream_0_V_empty_n( image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n ),
    .img_data_stream_0_V_read( image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_read ),
    .img_data_stream_1_V_dout( image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_dout ),
    .img_data_stream_1_V_empty_n( image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n ),
    .img_data_stream_1_V_read( image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_read ),
    .img_data_stream_2_V_dout( image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_dout ),
    .img_data_stream_2_V_empty_n( image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n ),
    .img_data_stream_2_V_read( image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_read ),
    .OUTPUT_STREAM_TDATA( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA ),
    .OUTPUT_STREAM_TVALID( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID ),
    .OUTPUT_STREAM_TREADY( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY ),
    .OUTPUT_STREAM_TKEEP( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP ),
    .OUTPUT_STREAM_TSTRB( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB ),
    .OUTPUT_STREAM_TUSER( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER ),
    .OUTPUT_STREAM_TLAST( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST ),
    .OUTPUT_STREAM_TID( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TID ),
    .OUTPUT_STREAM_TDEST( image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST )
);

FIFO_image_filter_p_src_rows_V_channel p_src_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_src_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( p_src_rows_V_channel_U_ap_dummy_ce ),
    .if_din( p_src_rows_V_channel_din ),
    .if_full_n( p_src_rows_V_channel_full_n ),
    .if_write( p_src_rows_V_channel_write ),
    .if_dout( p_src_rows_V_channel_dout ),
    .if_empty_n( p_src_rows_V_channel_empty_n ),
    .if_read( p_src_rows_V_channel_read )
);

FIFO_image_filter_p_src_rows_V_channel38 p_src_rows_V_channel38_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_src_rows_V_channel38_U_ap_dummy_ce ),
    .if_write_ce( p_src_rows_V_channel38_U_ap_dummy_ce ),
    .if_din( p_src_rows_V_channel38_din ),
    .if_full_n( p_src_rows_V_channel38_full_n ),
    .if_write( p_src_rows_V_channel38_write ),
    .if_dout( p_src_rows_V_channel38_dout ),
    .if_empty_n( p_src_rows_V_channel38_empty_n ),
    .if_read( p_src_rows_V_channel38_read )
);

FIFO_image_filter_p_src_cols_V_channel p_src_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_src_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( p_src_cols_V_channel_U_ap_dummy_ce ),
    .if_din( p_src_cols_V_channel_din ),
    .if_full_n( p_src_cols_V_channel_full_n ),
    .if_write( p_src_cols_V_channel_write ),
    .if_dout( p_src_cols_V_channel_dout ),
    .if_empty_n( p_src_cols_V_channel_empty_n ),
    .if_read( p_src_cols_V_channel_read )
);

FIFO_image_filter_p_src_cols_V_channel39 p_src_cols_V_channel39_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_src_cols_V_channel39_U_ap_dummy_ce ),
    .if_write_ce( p_src_cols_V_channel39_U_ap_dummy_ce ),
    .if_din( p_src_cols_V_channel39_din ),
    .if_full_n( p_src_cols_V_channel39_full_n ),
    .if_write( p_src_cols_V_channel39_write ),
    .if_dout( p_src_cols_V_channel39_dout ),
    .if_empty_n( p_src_cols_V_channel39_empty_n ),
    .if_read( p_src_cols_V_channel39_read )
);

FIFO_image_filter_p_src_rows_V_2_loc_channel p_src_rows_V_2_loc_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_src_rows_V_2_loc_channel_U_ap_dummy_ce ),
    .if_write_ce( p_src_rows_V_2_loc_channel_U_ap_dummy_ce ),
    .if_din( p_src_rows_V_2_loc_channel_din ),
    .if_full_n( p_src_rows_V_2_loc_channel_full_n ),
    .if_write( p_src_rows_V_2_loc_channel_write ),
    .if_dout( p_src_rows_V_2_loc_channel_dout ),
    .if_empty_n( p_src_rows_V_2_loc_channel_empty_n ),
    .if_read( p_src_rows_V_2_loc_channel_read )
);

FIFO_image_filter_p_src_rows_V_2_loc_channel40 p_src_rows_V_2_loc_channel40_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_src_rows_V_2_loc_channel40_U_ap_dummy_ce ),
    .if_write_ce( p_src_rows_V_2_loc_channel40_U_ap_dummy_ce ),
    .if_din( p_src_rows_V_2_loc_channel40_din ),
    .if_full_n( p_src_rows_V_2_loc_channel40_full_n ),
    .if_write( p_src_rows_V_2_loc_channel40_write ),
    .if_dout( p_src_rows_V_2_loc_channel40_dout ),
    .if_empty_n( p_src_rows_V_2_loc_channel40_empty_n ),
    .if_read( p_src_rows_V_2_loc_channel40_read )
);

FIFO_image_filter_p_src_cols_V_2_loc_channel p_src_cols_V_2_loc_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_src_cols_V_2_loc_channel_U_ap_dummy_ce ),
    .if_write_ce( p_src_cols_V_2_loc_channel_U_ap_dummy_ce ),
    .if_din( p_src_cols_V_2_loc_channel_din ),
    .if_full_n( p_src_cols_V_2_loc_channel_full_n ),
    .if_write( p_src_cols_V_2_loc_channel_write ),
    .if_dout( p_src_cols_V_2_loc_channel_dout ),
    .if_empty_n( p_src_cols_V_2_loc_channel_empty_n ),
    .if_read( p_src_cols_V_2_loc_channel_read )
);

FIFO_image_filter_p_src_cols_V_2_loc_channel41 p_src_cols_V_2_loc_channel41_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_src_cols_V_2_loc_channel41_U_ap_dummy_ce ),
    .if_write_ce( p_src_cols_V_2_loc_channel41_U_ap_dummy_ce ),
    .if_din( p_src_cols_V_2_loc_channel41_din ),
    .if_full_n( p_src_cols_V_2_loc_channel41_full_n ),
    .if_write( p_src_cols_V_2_loc_channel41_write ),
    .if_dout( p_src_cols_V_2_loc_channel41_dout ),
    .if_empty_n( p_src_cols_V_2_loc_channel41_empty_n ),
    .if_read( p_src_cols_V_2_loc_channel41_read )
);

FIFO_image_filter_p_dst_rows_V_channel p_dst_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_dst_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( p_dst_rows_V_channel_U_ap_dummy_ce ),
    .if_din( p_dst_rows_V_channel_din ),
    .if_full_n( p_dst_rows_V_channel_full_n ),
    .if_write( p_dst_rows_V_channel_write ),
    .if_dout( p_dst_rows_V_channel_dout ),
    .if_empty_n( p_dst_rows_V_channel_empty_n ),
    .if_read( p_dst_rows_V_channel_read )
);

FIFO_image_filter_p_dst_cols_V_channel p_dst_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_dst_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( p_dst_cols_V_channel_U_ap_dummy_ce ),
    .if_din( p_dst_cols_V_channel_din ),
    .if_full_n( p_dst_cols_V_channel_full_n ),
    .if_write( p_dst_cols_V_channel_write ),
    .if_dout( p_dst_cols_V_channel_dout ),
    .if_empty_n( p_dst_cols_V_channel_empty_n ),
    .if_read( p_dst_cols_V_channel_read )
);

FIFO_image_filter_p_src_data_stream_0_V p_src_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_src_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( p_src_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( p_src_data_stream_0_V_din ),
    .if_full_n( p_src_data_stream_0_V_full_n ),
    .if_write( p_src_data_stream_0_V_write ),
    .if_dout( p_src_data_stream_0_V_dout ),
    .if_empty_n( p_src_data_stream_0_V_empty_n ),
    .if_read( p_src_data_stream_0_V_read )
);

FIFO_image_filter_p_src_data_stream_1_V p_src_data_stream_1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_src_data_stream_1_V_U_ap_dummy_ce ),
    .if_write_ce( p_src_data_stream_1_V_U_ap_dummy_ce ),
    .if_din( p_src_data_stream_1_V_din ),
    .if_full_n( p_src_data_stream_1_V_full_n ),
    .if_write( p_src_data_stream_1_V_write ),
    .if_dout( p_src_data_stream_1_V_dout ),
    .if_empty_n( p_src_data_stream_1_V_empty_n ),
    .if_read( p_src_data_stream_1_V_read )
);

FIFO_image_filter_p_src_data_stream_2_V p_src_data_stream_2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_src_data_stream_2_V_U_ap_dummy_ce ),
    .if_write_ce( p_src_data_stream_2_V_U_ap_dummy_ce ),
    .if_din( p_src_data_stream_2_V_din ),
    .if_full_n( p_src_data_stream_2_V_full_n ),
    .if_write( p_src_data_stream_2_V_write ),
    .if_dout( p_src_data_stream_2_V_dout ),
    .if_empty_n( p_src_data_stream_2_V_empty_n ),
    .if_read( p_src_data_stream_2_V_read )
);

FIFO_image_filter_src0_rows_V_channel src0_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( src0_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( src0_rows_V_channel_U_ap_dummy_ce ),
    .if_din( src0_rows_V_channel_din ),
    .if_full_n( src0_rows_V_channel_full_n ),
    .if_write( src0_rows_V_channel_write ),
    .if_dout( src0_rows_V_channel_dout ),
    .if_empty_n( src0_rows_V_channel_empty_n ),
    .if_read( src0_rows_V_channel_read )
);

FIFO_image_filter_src0_cols_V_channel src0_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( src0_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( src0_cols_V_channel_U_ap_dummy_ce ),
    .if_din( src0_cols_V_channel_din ),
    .if_full_n( src0_cols_V_channel_full_n ),
    .if_write( src0_cols_V_channel_write ),
    .if_dout( src0_cols_V_channel_dout ),
    .if_empty_n( src0_cols_V_channel_empty_n ),
    .if_read( src0_cols_V_channel_read )
);

FIFO_image_filter_src1_rows_V_channel src1_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( src1_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( src1_rows_V_channel_U_ap_dummy_ce ),
    .if_din( src1_rows_V_channel_din ),
    .if_full_n( src1_rows_V_channel_full_n ),
    .if_write( src1_rows_V_channel_write ),
    .if_dout( src1_rows_V_channel_dout ),
    .if_empty_n( src1_rows_V_channel_empty_n ),
    .if_read( src1_rows_V_channel_read )
);

FIFO_image_filter_src1_cols_V_channel src1_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( src1_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( src1_cols_V_channel_U_ap_dummy_ce ),
    .if_din( src1_cols_V_channel_din ),
    .if_full_n( src1_cols_V_channel_full_n ),
    .if_write( src1_cols_V_channel_write ),
    .if_dout( src1_cols_V_channel_dout ),
    .if_empty_n( src1_cols_V_channel_empty_n ),
    .if_read( src1_cols_V_channel_read )
);

FIFO_image_filter_mask_rows_V_channel mask_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( mask_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( mask_rows_V_channel_U_ap_dummy_ce ),
    .if_din( mask_rows_V_channel_din ),
    .if_full_n( mask_rows_V_channel_full_n ),
    .if_write( mask_rows_V_channel_write ),
    .if_dout( mask_rows_V_channel_dout ),
    .if_empty_n( mask_rows_V_channel_empty_n ),
    .if_read( mask_rows_V_channel_read )
);

FIFO_image_filter_mask_cols_V_channel mask_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( mask_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( mask_cols_V_channel_U_ap_dummy_ce ),
    .if_din( mask_cols_V_channel_din ),
    .if_full_n( mask_cols_V_channel_full_n ),
    .if_write( mask_cols_V_channel_write ),
    .if_dout( mask_cols_V_channel_dout ),
    .if_empty_n( mask_cols_V_channel_empty_n ),
    .if_read( mask_cols_V_channel_read )
);

FIFO_image_filter_src0_data_stream_0_V src0_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( src0_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( src0_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( src0_data_stream_0_V_din ),
    .if_full_n( src0_data_stream_0_V_full_n ),
    .if_write( src0_data_stream_0_V_write ),
    .if_dout( src0_data_stream_0_V_dout ),
    .if_empty_n( src0_data_stream_0_V_empty_n ),
    .if_read( src0_data_stream_0_V_read )
);

FIFO_image_filter_src0_data_stream_1_V src0_data_stream_1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( src0_data_stream_1_V_U_ap_dummy_ce ),
    .if_write_ce( src0_data_stream_1_V_U_ap_dummy_ce ),
    .if_din( src0_data_stream_1_V_din ),
    .if_full_n( src0_data_stream_1_V_full_n ),
    .if_write( src0_data_stream_1_V_write ),
    .if_dout( src0_data_stream_1_V_dout ),
    .if_empty_n( src0_data_stream_1_V_empty_n ),
    .if_read( src0_data_stream_1_V_read )
);

FIFO_image_filter_src0_data_stream_2_V src0_data_stream_2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( src0_data_stream_2_V_U_ap_dummy_ce ),
    .if_write_ce( src0_data_stream_2_V_U_ap_dummy_ce ),
    .if_din( src0_data_stream_2_V_din ),
    .if_full_n( src0_data_stream_2_V_full_n ),
    .if_write( src0_data_stream_2_V_write ),
    .if_dout( src0_data_stream_2_V_dout ),
    .if_empty_n( src0_data_stream_2_V_empty_n ),
    .if_read( src0_data_stream_2_V_read )
);

FIFO_image_filter_src1_data_stream_0_V src1_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( src1_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( src1_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( src1_data_stream_0_V_din ),
    .if_full_n( src1_data_stream_0_V_full_n ),
    .if_write( src1_data_stream_0_V_write ),
    .if_dout( src1_data_stream_0_V_dout ),
    .if_empty_n( src1_data_stream_0_V_empty_n ),
    .if_read( src1_data_stream_0_V_read )
);

FIFO_image_filter_src1_data_stream_1_V src1_data_stream_1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( src1_data_stream_1_V_U_ap_dummy_ce ),
    .if_write_ce( src1_data_stream_1_V_U_ap_dummy_ce ),
    .if_din( src1_data_stream_1_V_din ),
    .if_full_n( src1_data_stream_1_V_full_n ),
    .if_write( src1_data_stream_1_V_write ),
    .if_dout( src1_data_stream_1_V_dout ),
    .if_empty_n( src1_data_stream_1_V_empty_n ),
    .if_read( src1_data_stream_1_V_read )
);

FIFO_image_filter_src1_data_stream_2_V src1_data_stream_2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( src1_data_stream_2_V_U_ap_dummy_ce ),
    .if_write_ce( src1_data_stream_2_V_U_ap_dummy_ce ),
    .if_din( src1_data_stream_2_V_din ),
    .if_full_n( src1_data_stream_2_V_full_n ),
    .if_write( src1_data_stream_2_V_write ),
    .if_dout( src1_data_stream_2_V_dout ),
    .if_empty_n( src1_data_stream_2_V_empty_n ),
    .if_read( src1_data_stream_2_V_read )
);

FIFO_image_filter_gray_rows_V_channel gray_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( gray_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( gray_rows_V_channel_U_ap_dummy_ce ),
    .if_din( gray_rows_V_channel_din ),
    .if_full_n( gray_rows_V_channel_full_n ),
    .if_write( gray_rows_V_channel_write ),
    .if_dout( gray_rows_V_channel_dout ),
    .if_empty_n( gray_rows_V_channel_empty_n ),
    .if_read( gray_rows_V_channel_read )
);

FIFO_image_filter_gray_cols_V_channel gray_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( gray_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( gray_cols_V_channel_U_ap_dummy_ce ),
    .if_din( gray_cols_V_channel_din ),
    .if_full_n( gray_cols_V_channel_full_n ),
    .if_write( gray_cols_V_channel_write ),
    .if_dout( gray_cols_V_channel_dout ),
    .if_empty_n( gray_cols_V_channel_empty_n ),
    .if_read( gray_cols_V_channel_read )
);

FIFO_image_filter_gray_data_stream_0_V gray_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( gray_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( gray_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( gray_data_stream_0_V_din ),
    .if_full_n( gray_data_stream_0_V_full_n ),
    .if_write( gray_data_stream_0_V_write ),
    .if_dout( gray_data_stream_0_V_dout ),
    .if_empty_n( gray_data_stream_0_V_empty_n ),
    .if_read( gray_data_stream_0_V_read )
);

FIFO_image_filter_mask_data_stream_0_V mask_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( mask_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( mask_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( mask_data_stream_0_V_din ),
    .if_full_n( mask_data_stream_0_V_full_n ),
    .if_write( mask_data_stream_0_V_write ),
    .if_dout( mask_data_stream_0_V_dout ),
    .if_empty_n( mask_data_stream_0_V_empty_n ),
    .if_read( mask_data_stream_0_V_read )
);

FIFO_image_filter_dmask_data_stream_0_V dmask_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( dmask_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( dmask_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( dmask_data_stream_0_V_din ),
    .if_full_n( dmask_data_stream_0_V_full_n ),
    .if_write( dmask_data_stream_0_V_write ),
    .if_dout( dmask_data_stream_0_V_dout ),
    .if_empty_n( dmask_data_stream_0_V_empty_n ),
    .if_read( dmask_data_stream_0_V_read )
);

FIFO_image_filter_p_dst_data_stream_0_V p_dst_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_dst_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( p_dst_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( p_dst_data_stream_0_V_din ),
    .if_full_n( p_dst_data_stream_0_V_full_n ),
    .if_write( p_dst_data_stream_0_V_write ),
    .if_dout( p_dst_data_stream_0_V_dout ),
    .if_empty_n( p_dst_data_stream_0_V_empty_n ),
    .if_read( p_dst_data_stream_0_V_read )
);

FIFO_image_filter_p_dst_data_stream_1_V p_dst_data_stream_1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_dst_data_stream_1_V_U_ap_dummy_ce ),
    .if_write_ce( p_dst_data_stream_1_V_U_ap_dummy_ce ),
    .if_din( p_dst_data_stream_1_V_din ),
    .if_full_n( p_dst_data_stream_1_V_full_n ),
    .if_write( p_dst_data_stream_1_V_write ),
    .if_dout( p_dst_data_stream_1_V_dout ),
    .if_empty_n( p_dst_data_stream_1_V_empty_n ),
    .if_read( p_dst_data_stream_1_V_read )
);

FIFO_image_filter_p_dst_data_stream_2_V p_dst_data_stream_2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( p_dst_data_stream_2_V_U_ap_dummy_ce ),
    .if_write_ce( p_dst_data_stream_2_V_U_ap_dummy_ce ),
    .if_din( p_dst_data_stream_2_V_din ),
    .if_full_n( p_dst_data_stream_2_V_full_n ),
    .if_write( p_dst_data_stream_2_V_write ),
    .if_dout( p_dst_data_stream_2_V_dout ),
    .if_empty_n( p_dst_data_stream_2_V_empty_n ),
    .if_read( p_dst_data_stream_2_V_read )
);



/// ap_reg_procdone_image_filter_AXIvideo2Mat_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_AXIvideo2Mat_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_AXIvideo2Mat_U0_ap_done)) begin
            ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Block_Mat_exit121719_proc1_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Block_Mat_exit121719_proc1_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Block_Mat_exit121719_proc1_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Block_Mat_exit121719_proc1_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Block_Mat_exit121719_proc1_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Block_Mat_exit121721_proc1_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Block_Mat_exit121721_proc1_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Block_Mat_exit121721_proc1_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Block_Mat_exit121721_proc1_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Block_Mat_exit121721_proc1_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Block_Mat_exit121721_proc1_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Block_Mat_exit1217_proc_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Block_Mat_exit1217_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Block_Mat_exit1217_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Block_Mat_exit1217_proc_U0 <= ap_const_logic_0;
        end else if ((image_filter_Block_Mat_exit1217_proc_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_image_filter_Block_Mat_exit1217_proc_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_CvtColor_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_CvtColor_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_CvtColor_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_CvtColor_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_CvtColor_U0_ap_done)) begin
            ap_reg_procdone_image_filter_CvtColor_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Dilate_0_0_1080_1920_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Duplicate_1080_1920_32_32_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Duplicate_1080_1920_32_32_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Duplicate_1080_1920_32_32_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Duplicate_1080_1920_32_32_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Duplicate_1080_1920_32_32_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Duplicate_1080_1920_32_32_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_FAST_t_opr_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_FAST_t_opr_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_FAST_t_opr_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_FAST_t_opr_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_FAST_t_opr_U0_ap_done)) begin
            ap_reg_procdone_image_filter_FAST_t_opr_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Mat2AXIvideo_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Mat2AXIvideo_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_PaintMask_32_0_1080_1920_U0_ap_done)) begin
            ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_gray_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_gray_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_gray_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_Mat_exit121721_proc1_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_Mat_exit121721_proc1_U0_ap_continue))) begin
            ap_reg_ready_gray_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_Mat_exit121721_proc1_U0_ap_done) & (ap_const_logic_1 == gray_cols_V_channel_full_n))) begin
            ap_reg_ready_gray_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_gray_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_gray_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_gray_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_Mat_exit121721_proc1_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_Mat_exit121721_proc1_U0_ap_continue))) begin
            ap_reg_ready_gray_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_Mat_exit121721_proc1_U0_ap_done) & (ap_const_logic_1 == gray_rows_V_channel_full_n))) begin
            ap_reg_ready_gray_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_mask_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_mask_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_mask_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_continue))) begin
            ap_reg_ready_mask_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == mask_cols_V_channel_full_n))) begin
            ap_reg_ready_mask_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_mask_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_mask_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_mask_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_continue))) begin
            ap_reg_ready_mask_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == mask_rows_V_channel_full_n))) begin
            ap_reg_ready_mask_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_p_dst_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_p_dst_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_p_dst_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((image_filter_Block_Mat_exit1217_proc_U0_ap_done == ap_const_logic_1) & (image_filter_Block_Mat_exit1217_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_p_dst_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((image_filter_Block_Mat_exit1217_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == p_dst_cols_V_channel_full_n))) begin
            ap_reg_ready_p_dst_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_p_dst_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_p_dst_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_p_dst_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((image_filter_Block_Mat_exit1217_proc_U0_ap_done == ap_const_logic_1) & (image_filter_Block_Mat_exit1217_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_p_dst_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((image_filter_Block_Mat_exit1217_proc_U0_ap_done == ap_const_logic_1) & (p_dst_rows_V_channel_full_n == ap_const_logic_1))) begin
            ap_reg_ready_p_dst_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_src0_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_src0_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_src0_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_continue))) begin
            ap_reg_ready_src0_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == src0_cols_V_channel_full_n))) begin
            ap_reg_ready_src0_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_src0_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_src0_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_src0_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_continue))) begin
            ap_reg_ready_src0_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == src0_rows_V_channel_full_n))) begin
            ap_reg_ready_src0_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_src1_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_src1_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_src1_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_continue))) begin
            ap_reg_ready_src1_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == src1_cols_V_channel_full_n))) begin
            ap_reg_ready_src1_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_src1_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_src1_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_src1_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_continue))) begin
            ap_reg_ready_src1_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_done) & (ap_const_logic_1 == src1_rows_V_channel_full_n))) begin
            ap_reg_ready_src1_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// image_filter_Block_Mat_exit121719_proc1_U0_ap_start assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_image_filter_Block_Mat_exit121719_proc1_U0_ap_start
    if (ap_rst_n_inv == 1'b1) begin
        image_filter_Block_Mat_exit121719_proc1_U0_ap_start <= ap_const_logic_0;
    end else begin
        image_filter_Block_Mat_exit121719_proc1_U0_ap_start <= ap_const_logic_1;
    end
end

/// image_filter_Block_Mat_exit121721_proc1_U0_ap_start assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_image_filter_Block_Mat_exit121721_proc1_U0_ap_start
    if (ap_rst_n_inv == 1'b1) begin
        image_filter_Block_Mat_exit121721_proc1_U0_ap_start <= ap_const_logic_0;
    end else begin
        image_filter_Block_Mat_exit121721_proc1_U0_ap_start <= ap_const_logic_1;
    end
end

/// image_filter_Duplicate_1080_1920_32_32_U0_ap_start assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_image_filter_Duplicate_1080_1920_32_32_U0_ap_start
    if (ap_rst_n_inv == 1'b1) begin
        image_filter_Duplicate_1080_1920_32_32_U0_ap_start <= ap_const_logic_0;
    end else begin
        image_filter_Duplicate_1080_1920_32_32_U0_ap_start <= ap_const_logic_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_mask_cols_V_channel assign process. ///
always @ (image_filter_Block_Mat_exit121719_proc1_U0_ap_done or ap_reg_ready_mask_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_mask_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_mask_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_mask_cols_V_channel = image_filter_Block_Mat_exit121719_proc1_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_mask_rows_V_channel assign process. ///
always @ (image_filter_Block_Mat_exit121719_proc1_U0_ap_done or ap_reg_ready_mask_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_mask_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_mask_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_mask_rows_V_channel = image_filter_Block_Mat_exit121719_proc1_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src0_cols_V_channel assign process. ///
always @ (image_filter_Block_Mat_exit121719_proc1_U0_ap_done or ap_reg_ready_src0_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_src0_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src0_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src0_cols_V_channel = image_filter_Block_Mat_exit121719_proc1_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src0_rows_V_channel assign process. ///
always @ (image_filter_Block_Mat_exit121719_proc1_U0_ap_done or ap_reg_ready_src0_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_src0_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src0_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src0_rows_V_channel = image_filter_Block_Mat_exit121719_proc1_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src1_cols_V_channel assign process. ///
always @ (image_filter_Block_Mat_exit121719_proc1_U0_ap_done or ap_reg_ready_src1_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_src1_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src1_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src1_cols_V_channel = image_filter_Block_Mat_exit121719_proc1_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src1_rows_V_channel assign process. ///
always @ (image_filter_Block_Mat_exit121719_proc1_U0_ap_done or ap_reg_ready_src1_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_src1_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src1_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src1_rows_V_channel = image_filter_Block_Mat_exit121719_proc1_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_Mat_exit121721_proc1_U0_gray_cols_V_channel assign process. ///
always @ (image_filter_Block_Mat_exit121721_proc1_U0_ap_done or ap_reg_ready_gray_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_gray_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_Mat_exit121721_proc1_U0_gray_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_Mat_exit121721_proc1_U0_gray_cols_V_channel = image_filter_Block_Mat_exit121721_proc1_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_Mat_exit121721_proc1_U0_gray_rows_V_channel assign process. ///
always @ (image_filter_Block_Mat_exit121721_proc1_U0_ap_done or ap_reg_ready_gray_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_gray_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_Mat_exit121721_proc1_U0_gray_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_Mat_exit121721_proc1_U0_gray_rows_V_channel = image_filter_Block_Mat_exit121721_proc1_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_Mat_exit1217_proc_U0_p_dst_cols_V_channel assign process. ///
always @ (image_filter_Block_Mat_exit1217_proc_U0_ap_done or ap_reg_ready_p_dst_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_p_dst_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_Mat_exit1217_proc_U0_p_dst_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_Mat_exit1217_proc_U0_p_dst_cols_V_channel = image_filter_Block_Mat_exit1217_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_Mat_exit1217_proc_U0_p_dst_rows_V_channel assign process. ///
always @ (image_filter_Block_Mat_exit1217_proc_U0_ap_done or ap_reg_ready_p_dst_rows_V_channel_full_n)
begin
    if ((ap_reg_ready_p_dst_rows_V_channel_full_n == ap_const_logic_1)) begin
        ap_chn_write_image_filter_Block_Mat_exit1217_proc_U0_p_dst_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_Mat_exit1217_proc_U0_p_dst_rows_V_channel = image_filter_Block_Mat_exit1217_proc_U0_ap_done;
    end
end

/// ap_idle assign process. ///
always @ (image_filter_Block_Mat_exit1217_proc_U0_ap_idle or image_filter_AXIvideo2Mat_U0_ap_idle or image_filter_Block_Mat_exit121719_proc1_U0_ap_idle or image_filter_Duplicate_1080_1920_32_32_U0_ap_idle or image_filter_Block_Mat_exit121721_proc1_U0_ap_idle or image_filter_CvtColor_U0_ap_idle or image_filter_FAST_t_opr_U0_ap_idle or image_filter_Dilate_0_0_1080_1920_U0_ap_idle or image_filter_PaintMask_32_0_1080_1920_U0_ap_idle or image_filter_Mat2AXIvideo_U0_ap_idle or p_dst_rows_V_channel_empty_n or p_dst_cols_V_channel_empty_n or src0_rows_V_channel_empty_n or src0_cols_V_channel_empty_n or src1_rows_V_channel_empty_n or src1_cols_V_channel_empty_n or mask_rows_V_channel_empty_n or mask_cols_V_channel_empty_n or gray_rows_V_channel_empty_n or gray_cols_V_channel_empty_n)
begin
    if (((image_filter_Block_Mat_exit1217_proc_U0_ap_idle == ap_const_logic_1) & (ap_const_logic_1 == image_filter_AXIvideo2Mat_U0_ap_idle) & (ap_const_logic_1 == image_filter_Block_Mat_exit121719_proc1_U0_ap_idle) & (ap_const_logic_1 == image_filter_Duplicate_1080_1920_32_32_U0_ap_idle) & (ap_const_logic_1 == image_filter_Block_Mat_exit121721_proc1_U0_ap_idle) & (ap_const_logic_1 == image_filter_CvtColor_U0_ap_idle) & (ap_const_logic_1 == image_filter_FAST_t_opr_U0_ap_idle) & (ap_const_logic_1 == image_filter_Dilate_0_0_1080_1920_U0_ap_idle) & (ap_const_logic_1 == image_filter_PaintMask_32_0_1080_1920_U0_ap_idle) & (ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_idle) & (ap_const_logic_0 == p_dst_rows_V_channel_empty_n) & (ap_const_logic_0 == p_dst_cols_V_channel_empty_n) & (ap_const_logic_0 == src0_rows_V_channel_empty_n) & (ap_const_logic_0 == src0_cols_V_channel_empty_n) & (ap_const_logic_0 == src1_rows_V_channel_empty_n) & (ap_const_logic_0 == src1_cols_V_channel_empty_n) & (ap_const_logic_0 == mask_rows_V_channel_empty_n) & (ap_const_logic_0 == mask_cols_V_channel_empty_n) & (ap_const_logic_0 == gray_rows_V_channel_empty_n) & (ap_const_logic_0 == gray_cols_V_channel_empty_n))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (image_filter_Mat2AXIvideo_U0_ap_done)
begin
    if ((ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

/// ap_sig_ready_gray_cols_V_channel_full_n assign process. ///
always @ (gray_cols_V_channel_full_n or ap_reg_ready_gray_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_gray_cols_V_channel_full_n)) begin
        ap_sig_ready_gray_cols_V_channel_full_n = gray_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_gray_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_gray_rows_V_channel_full_n assign process. ///
always @ (gray_rows_V_channel_full_n or ap_reg_ready_gray_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_gray_rows_V_channel_full_n)) begin
        ap_sig_ready_gray_rows_V_channel_full_n = gray_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_gray_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_mask_cols_V_channel_full_n assign process. ///
always @ (mask_cols_V_channel_full_n or ap_reg_ready_mask_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_mask_cols_V_channel_full_n)) begin
        ap_sig_ready_mask_cols_V_channel_full_n = mask_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_mask_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_mask_rows_V_channel_full_n assign process. ///
always @ (mask_rows_V_channel_full_n or ap_reg_ready_mask_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_mask_rows_V_channel_full_n)) begin
        ap_sig_ready_mask_rows_V_channel_full_n = mask_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_mask_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_p_dst_cols_V_channel_full_n assign process. ///
always @ (p_dst_cols_V_channel_full_n or ap_reg_ready_p_dst_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_p_dst_cols_V_channel_full_n)) begin
        ap_sig_ready_p_dst_cols_V_channel_full_n = p_dst_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_p_dst_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_p_dst_rows_V_channel_full_n assign process. ///
always @ (p_dst_rows_V_channel_full_n or ap_reg_ready_p_dst_rows_V_channel_full_n)
begin
    if ((ap_reg_ready_p_dst_rows_V_channel_full_n == ap_const_logic_0)) begin
        ap_sig_ready_p_dst_rows_V_channel_full_n = p_dst_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_p_dst_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_src0_cols_V_channel_full_n assign process. ///
always @ (src0_cols_V_channel_full_n or ap_reg_ready_src0_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_src0_cols_V_channel_full_n)) begin
        ap_sig_ready_src0_cols_V_channel_full_n = src0_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_src0_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_src0_rows_V_channel_full_n assign process. ///
always @ (src0_rows_V_channel_full_n or ap_reg_ready_src0_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_src0_rows_V_channel_full_n)) begin
        ap_sig_ready_src0_rows_V_channel_full_n = src0_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_src0_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_src1_cols_V_channel_full_n assign process. ///
always @ (src1_cols_V_channel_full_n or ap_reg_ready_src1_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_src1_cols_V_channel_full_n)) begin
        ap_sig_ready_src1_cols_V_channel_full_n = src1_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_src1_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_src1_rows_V_channel_full_n assign process. ///
always @ (src1_rows_V_channel_full_n or ap_reg_ready_src1_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_src1_rows_V_channel_full_n)) begin
        ap_sig_ready_src1_rows_V_channel_full_n = src1_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_src1_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// image_filter_Block_Mat_exit121719_proc1_U0_ap_continue assign process. ///
always @ (ap_sig_ready_mask_rows_V_channel_full_n or ap_sig_ready_src0_rows_V_channel_full_n or ap_sig_ready_src0_cols_V_channel_full_n or ap_sig_ready_src1_rows_V_channel_full_n or ap_sig_ready_src1_cols_V_channel_full_n or ap_sig_ready_mask_cols_V_channel_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_mask_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_src0_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_src0_cols_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_src1_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_src1_cols_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_mask_cols_V_channel_full_n))) begin
        image_filter_Block_Mat_exit121719_proc1_U0_ap_continue = ap_const_logic_1;
    end else begin
        image_filter_Block_Mat_exit121719_proc1_U0_ap_continue = ap_const_logic_0;
    end
end

/// image_filter_Block_Mat_exit121721_proc1_U0_ap_continue assign process. ///
always @ (ap_sig_ready_gray_rows_V_channel_full_n or ap_sig_ready_gray_cols_V_channel_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_gray_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_gray_cols_V_channel_full_n))) begin
        image_filter_Block_Mat_exit121721_proc1_U0_ap_continue = ap_const_logic_1;
    end else begin
        image_filter_Block_Mat_exit121721_proc1_U0_ap_continue = ap_const_logic_0;
    end
end

/// image_filter_Block_Mat_exit1217_proc_U0_ap_continue assign process. ///
always @ (ap_sig_ready_p_dst_rows_V_channel_full_n or ap_sig_ready_p_dst_cols_V_channel_full_n)
begin
    if (((ap_sig_ready_p_dst_rows_V_channel_full_n == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_ready_p_dst_cols_V_channel_full_n))) begin
        image_filter_Block_Mat_exit1217_proc_U0_ap_continue = ap_const_logic_1;
    end else begin
        image_filter_Block_Mat_exit1217_proc_U0_ap_continue = ap_const_logic_0;
    end
end
assign INPUT_STREAM_TREADY = image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TREADY;
assign OUTPUT_STREAM_TDATA = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;
assign OUTPUT_STREAM_TDEST = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;
assign OUTPUT_STREAM_TID = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TID;
assign OUTPUT_STREAM_TKEEP = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;
assign OUTPUT_STREAM_TLAST = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;
assign OUTPUT_STREAM_TSTRB = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;
assign OUTPUT_STREAM_TUSER = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;
assign OUTPUT_STREAM_TVALID = image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end
assign ap_sig_hs_continue = ap_const_logic_1;
assign ap_sig_top_allready = image_filter_AXIvideo2Mat_U0_ap_ready;
assign dmask_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign dmask_data_stream_0_V_din = image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_din;
assign dmask_data_stream_0_V_read = image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_read;
assign dmask_data_stream_0_V_write = image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_write;
assign gray_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign gray_cols_V_channel_din = image_filter_Block_Mat_exit121721_proc1_U0_ap_return_1;
assign gray_cols_V_channel_read = image_filter_FAST_t_opr_U0_ap_ready;
assign gray_cols_V_channel_write = ap_chn_write_image_filter_Block_Mat_exit121721_proc1_U0_gray_cols_V_channel;
assign gray_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign gray_data_stream_0_V_din = image_filter_CvtColor_U0_p_dst_data_stream_V_din;
assign gray_data_stream_0_V_read = image_filter_FAST_t_opr_U0_p_src_data_stream_V_read;
assign gray_data_stream_0_V_write = image_filter_CvtColor_U0_p_dst_data_stream_V_write;
assign gray_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign gray_rows_V_channel_din = image_filter_Block_Mat_exit121721_proc1_U0_ap_return_0;
assign gray_rows_V_channel_read = image_filter_FAST_t_opr_U0_ap_ready;
assign gray_rows_V_channel_write = ap_chn_write_image_filter_Block_Mat_exit121721_proc1_U0_gray_rows_V_channel;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDATA = INPUT_STREAM_TDATA;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TDEST = INPUT_STREAM_TDEST;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TID = INPUT_STREAM_TID;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TKEEP = INPUT_STREAM_TKEEP;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TLAST = INPUT_STREAM_TLAST;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TSTRB = INPUT_STREAM_TSTRB;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TUSER = INPUT_STREAM_TUSER;
assign image_filter_AXIvideo2Mat_U0_INPUT_STREAM_TVALID = INPUT_STREAM_TVALID;
assign image_filter_AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
assign image_filter_AXIvideo2Mat_U0_ap_start = ap_start;
assign image_filter_AXIvideo2Mat_U0_img_cols_V_dout = p_src_cols_V_channel39_dout;
assign image_filter_AXIvideo2Mat_U0_img_cols_V_empty_n = p_src_cols_V_channel39_empty_n;
assign image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_full_n = p_src_data_stream_0_V_full_n;
assign image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_full_n = p_src_data_stream_1_V_full_n;
assign image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_full_n = p_src_data_stream_2_V_full_n;
assign image_filter_AXIvideo2Mat_U0_img_rows_V_dout = p_src_rows_V_channel38_dout;
assign image_filter_AXIvideo2Mat_U0_img_rows_V_empty_n = p_src_rows_V_channel38_empty_n;
assign image_filter_Block_Mat_exit121719_proc1_U0_p_src_cols_V_2_reload_dout = p_src_cols_V_2_loc_channel41_dout;
assign image_filter_Block_Mat_exit121719_proc1_U0_p_src_cols_V_2_reload_empty_n = p_src_cols_V_2_loc_channel41_empty_n;
assign image_filter_Block_Mat_exit121719_proc1_U0_p_src_rows_V_2_reload_dout = p_src_rows_V_2_loc_channel40_dout;
assign image_filter_Block_Mat_exit121719_proc1_U0_p_src_rows_V_2_reload_empty_n = p_src_rows_V_2_loc_channel40_empty_n;
assign image_filter_Block_Mat_exit121721_proc1_U0_p_src_cols_V_2_reload_dout = p_src_cols_V_2_loc_channel_dout;
assign image_filter_Block_Mat_exit121721_proc1_U0_p_src_cols_V_2_reload_empty_n = p_src_cols_V_2_loc_channel_empty_n;
assign image_filter_Block_Mat_exit121721_proc1_U0_p_src_rows_V_2_reload_dout = p_src_rows_V_2_loc_channel_dout;
assign image_filter_Block_Mat_exit121721_proc1_U0_p_src_rows_V_2_reload_empty_n = p_src_rows_V_2_loc_channel_empty_n;
assign image_filter_Block_Mat_exit1217_proc_U0_ap_start = ap_start;
assign image_filter_Block_Mat_exit1217_proc_U0_cols = cols;
assign image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out4_full_n = p_src_cols_V_2_loc_channel41_full_n;
assign image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out_full_n = p_src_cols_V_2_loc_channel_full_n;
assign image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out2_full_n = p_src_cols_V_channel39_full_n;
assign image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out_full_n = p_src_cols_V_channel_full_n;
assign image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out3_full_n = p_src_rows_V_2_loc_channel40_full_n;
assign image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out_full_n = p_src_rows_V_2_loc_channel_full_n;
assign image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out1_full_n = p_src_rows_V_channel38_full_n;
assign image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out_full_n = p_src_rows_V_channel_full_n;
assign image_filter_Block_Mat_exit1217_proc_U0_rows = rows;
assign image_filter_CvtColor_U0_ap_continue = ap_const_logic_1;
assign image_filter_CvtColor_U0_ap_start = (src0_rows_V_channel_empty_n & src0_cols_V_channel_empty_n);
assign image_filter_CvtColor_U0_p_dst_data_stream_V_full_n = gray_data_stream_0_V_full_n;
assign image_filter_CvtColor_U0_p_src_cols_V_read = src0_cols_V_channel_dout;
assign image_filter_CvtColor_U0_p_src_data_stream_0_V_dout = src0_data_stream_0_V_dout;
assign image_filter_CvtColor_U0_p_src_data_stream_0_V_empty_n = src0_data_stream_0_V_empty_n;
assign image_filter_CvtColor_U0_p_src_data_stream_1_V_dout = src0_data_stream_1_V_dout;
assign image_filter_CvtColor_U0_p_src_data_stream_1_V_empty_n = src0_data_stream_1_V_empty_n;
assign image_filter_CvtColor_U0_p_src_data_stream_2_V_dout = src0_data_stream_2_V_dout;
assign image_filter_CvtColor_U0_p_src_data_stream_2_V_empty_n = src0_data_stream_2_V_empty_n;
assign image_filter_CvtColor_U0_p_src_rows_V_read = src0_rows_V_channel_dout;
assign image_filter_Dilate_0_0_1080_1920_U0_ap_continue = ap_const_logic_1;
assign image_filter_Dilate_0_0_1080_1920_U0_ap_start = (mask_rows_V_channel_empty_n & mask_cols_V_channel_empty_n);
assign image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_full_n = dmask_data_stream_0_V_full_n;
assign image_filter_Dilate_0_0_1080_1920_U0_p_src_cols_V_read = mask_cols_V_channel_dout;
assign image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_dout = mask_data_stream_0_V_dout;
assign image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_empty_n = mask_data_stream_0_V_empty_n;
assign image_filter_Dilate_0_0_1080_1920_U0_p_src_rows_V_read = mask_rows_V_channel_dout;
assign image_filter_Duplicate_1080_1920_32_32_U0_ap_continue = ap_const_logic_1;
assign image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_0_V_full_n = src0_data_stream_0_V_full_n;
assign image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_1_V_full_n = src0_data_stream_1_V_full_n;
assign image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_2_V_full_n = src0_data_stream_2_V_full_n;
assign image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_0_V_full_n = src1_data_stream_0_V_full_n;
assign image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_1_V_full_n = src1_data_stream_1_V_full_n;
assign image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_2_V_full_n = src1_data_stream_2_V_full_n;
assign image_filter_Duplicate_1080_1920_32_32_U0_src_cols_V_dout = p_src_cols_V_channel_dout;
assign image_filter_Duplicate_1080_1920_32_32_U0_src_cols_V_empty_n = p_src_cols_V_channel_empty_n;
assign image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_0_V_dout = p_src_data_stream_0_V_dout;
assign image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_0_V_empty_n = p_src_data_stream_0_V_empty_n;
assign image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_1_V_dout = p_src_data_stream_1_V_dout;
assign image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_1_V_empty_n = p_src_data_stream_1_V_empty_n;
assign image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_2_V_dout = p_src_data_stream_2_V_dout;
assign image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_2_V_empty_n = p_src_data_stream_2_V_empty_n;
assign image_filter_Duplicate_1080_1920_32_32_U0_src_rows_V_dout = p_src_rows_V_channel_dout;
assign image_filter_Duplicate_1080_1920_32_32_U0_src_rows_V_empty_n = p_src_rows_V_channel_empty_n;
assign image_filter_FAST_t_opr_U0_ap_continue = ap_const_logic_1;
assign image_filter_FAST_t_opr_U0_ap_start = (gray_rows_V_channel_empty_n & gray_cols_V_channel_empty_n);
assign image_filter_FAST_t_opr_U0_p_mask_data_stream_V_full_n = mask_data_stream_0_V_full_n;
assign image_filter_FAST_t_opr_U0_p_src_cols_V_read = gray_cols_V_channel_dout;
assign image_filter_FAST_t_opr_U0_p_src_data_stream_V_dout = gray_data_stream_0_V_dout;
assign image_filter_FAST_t_opr_U0_p_src_data_stream_V_empty_n = gray_data_stream_0_V_empty_n;
assign image_filter_FAST_t_opr_U0_p_src_rows_V_read = gray_rows_V_channel_dout;
assign image_filter_Mat2AXIvideo_U0_OUTPUT_STREAM_TREADY = OUTPUT_STREAM_TREADY;
assign image_filter_Mat2AXIvideo_U0_ap_continue = ap_sig_hs_continue;
assign image_filter_Mat2AXIvideo_U0_ap_start = (p_dst_rows_V_channel_empty_n & p_dst_cols_V_channel_empty_n);
assign image_filter_Mat2AXIvideo_U0_img_cols_V_read = p_dst_cols_V_channel_dout;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_dout = p_dst_data_stream_0_V_dout;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n = p_dst_data_stream_0_V_empty_n;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_dout = p_dst_data_stream_1_V_dout;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n = p_dst_data_stream_1_V_empty_n;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_dout = p_dst_data_stream_2_V_dout;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_empty_n = p_dst_data_stream_2_V_empty_n;
assign image_filter_Mat2AXIvideo_U0_img_rows_V_read = p_dst_rows_V_channel_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_ap_continue = ap_const_logic_1;
assign image_filter_PaintMask_32_0_1080_1920_U0_ap_start = (src1_rows_V_channel_empty_n & src1_cols_V_channel_empty_n);
assign image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_full_n = p_dst_data_stream_0_V_full_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_full_n = p_dst_data_stream_1_V_full_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_full_n = p_dst_data_stream_2_V_full_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_dout = dmask_data_stream_0_V_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_empty_n = dmask_data_stream_0_V_empty_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_cols_V_read = src1_cols_V_channel_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_dout = src1_data_stream_0_V_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_empty_n = src1_data_stream_0_V_empty_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_dout = src1_data_stream_1_V_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_empty_n = src1_data_stream_1_V_empty_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_dout = src1_data_stream_2_V_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_empty_n = src1_data_stream_2_V_empty_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_rows_V_read = src1_rows_V_channel_dout;
assign mask_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign mask_cols_V_channel_din = image_filter_Block_Mat_exit121719_proc1_U0_ap_return_5;
assign mask_cols_V_channel_read = image_filter_Dilate_0_0_1080_1920_U0_ap_ready;
assign mask_cols_V_channel_write = ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_mask_cols_V_channel;
assign mask_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign mask_data_stream_0_V_din = image_filter_FAST_t_opr_U0_p_mask_data_stream_V_din;
assign mask_data_stream_0_V_read = image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_read;
assign mask_data_stream_0_V_write = image_filter_FAST_t_opr_U0_p_mask_data_stream_V_write;
assign mask_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign mask_rows_V_channel_din = image_filter_Block_Mat_exit121719_proc1_U0_ap_return_4;
assign mask_rows_V_channel_read = image_filter_Dilate_0_0_1080_1920_U0_ap_ready;
assign mask_rows_V_channel_write = ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_mask_rows_V_channel;
assign p_dst_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign p_dst_cols_V_channel_din = image_filter_Block_Mat_exit1217_proc_U0_ap_return_1;
assign p_dst_cols_V_channel_read = image_filter_Mat2AXIvideo_U0_ap_ready;
assign p_dst_cols_V_channel_write = ap_chn_write_image_filter_Block_Mat_exit1217_proc_U0_p_dst_cols_V_channel;
assign p_dst_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign p_dst_data_stream_0_V_din = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_din;
assign p_dst_data_stream_0_V_read = image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_read;
assign p_dst_data_stream_0_V_write = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_write;
assign p_dst_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
assign p_dst_data_stream_1_V_din = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_din;
assign p_dst_data_stream_1_V_read = image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_read;
assign p_dst_data_stream_1_V_write = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_write;
assign p_dst_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
assign p_dst_data_stream_2_V_din = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_din;
assign p_dst_data_stream_2_V_read = image_filter_Mat2AXIvideo_U0_img_data_stream_2_V_read;
assign p_dst_data_stream_2_V_write = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_write;
assign p_dst_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign p_dst_rows_V_channel_din = image_filter_Block_Mat_exit1217_proc_U0_ap_return_0;
assign p_dst_rows_V_channel_read = image_filter_Mat2AXIvideo_U0_ap_ready;
assign p_dst_rows_V_channel_write = ap_chn_write_image_filter_Block_Mat_exit1217_proc_U0_p_dst_rows_V_channel;
assign p_src_cols_V_2_loc_channel41_U_ap_dummy_ce = ap_const_logic_1;
assign p_src_cols_V_2_loc_channel41_din = image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out4_din;
assign p_src_cols_V_2_loc_channel41_read = image_filter_Block_Mat_exit121719_proc1_U0_p_src_cols_V_2_reload_read;
assign p_src_cols_V_2_loc_channel41_write = image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out4_write;
assign p_src_cols_V_2_loc_channel_U_ap_dummy_ce = ap_const_logic_1;
assign p_src_cols_V_2_loc_channel_din = image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out_din;
assign p_src_cols_V_2_loc_channel_read = image_filter_Block_Mat_exit121721_proc1_U0_p_src_cols_V_2_reload_read;
assign p_src_cols_V_2_loc_channel_write = image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_2_out_out_write;
assign p_src_cols_V_channel39_U_ap_dummy_ce = ap_const_logic_1;
assign p_src_cols_V_channel39_din = image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out2_din;
assign p_src_cols_V_channel39_read = image_filter_AXIvideo2Mat_U0_img_cols_V_read;
assign p_src_cols_V_channel39_write = image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out2_write;
assign p_src_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign p_src_cols_V_channel_din = image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out_din;
assign p_src_cols_V_channel_read = image_filter_Duplicate_1080_1920_32_32_U0_src_cols_V_read;
assign p_src_cols_V_channel_write = image_filter_Block_Mat_exit1217_proc_U0_p_src_cols_V_out_write;
assign p_src_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign p_src_data_stream_0_V_din = image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_din;
assign p_src_data_stream_0_V_read = image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_0_V_read;
assign p_src_data_stream_0_V_write = image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_write;
assign p_src_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
assign p_src_data_stream_1_V_din = image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_din;
assign p_src_data_stream_1_V_read = image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_1_V_read;
assign p_src_data_stream_1_V_write = image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_write;
assign p_src_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
assign p_src_data_stream_2_V_din = image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_din;
assign p_src_data_stream_2_V_read = image_filter_Duplicate_1080_1920_32_32_U0_src_data_stream_2_V_read;
assign p_src_data_stream_2_V_write = image_filter_AXIvideo2Mat_U0_img_data_stream_2_V_write;
assign p_src_rows_V_2_loc_channel40_U_ap_dummy_ce = ap_const_logic_1;
assign p_src_rows_V_2_loc_channel40_din = image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out3_din;
assign p_src_rows_V_2_loc_channel40_read = image_filter_Block_Mat_exit121719_proc1_U0_p_src_rows_V_2_reload_read;
assign p_src_rows_V_2_loc_channel40_write = image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out3_write;
assign p_src_rows_V_2_loc_channel_U_ap_dummy_ce = ap_const_logic_1;
assign p_src_rows_V_2_loc_channel_din = image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out_din;
assign p_src_rows_V_2_loc_channel_read = image_filter_Block_Mat_exit121721_proc1_U0_p_src_rows_V_2_reload_read;
assign p_src_rows_V_2_loc_channel_write = image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_2_out_out_write;
assign p_src_rows_V_channel38_U_ap_dummy_ce = ap_const_logic_1;
assign p_src_rows_V_channel38_din = image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out1_din;
assign p_src_rows_V_channel38_read = image_filter_AXIvideo2Mat_U0_img_rows_V_read;
assign p_src_rows_V_channel38_write = image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out1_write;
assign p_src_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign p_src_rows_V_channel_din = image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out_din;
assign p_src_rows_V_channel_read = image_filter_Duplicate_1080_1920_32_32_U0_src_rows_V_read;
assign p_src_rows_V_channel_write = image_filter_Block_Mat_exit1217_proc_U0_p_src_rows_V_out_write;
assign src0_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign src0_cols_V_channel_din = image_filter_Block_Mat_exit121719_proc1_U0_ap_return_1;
assign src0_cols_V_channel_read = image_filter_CvtColor_U0_ap_ready;
assign src0_cols_V_channel_write = ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src0_cols_V_channel;
assign src0_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign src0_data_stream_0_V_din = image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_0_V_din;
assign src0_data_stream_0_V_read = image_filter_CvtColor_U0_p_src_data_stream_0_V_read;
assign src0_data_stream_0_V_write = image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_0_V_write;
assign src0_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
assign src0_data_stream_1_V_din = image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_1_V_din;
assign src0_data_stream_1_V_read = image_filter_CvtColor_U0_p_src_data_stream_1_V_read;
assign src0_data_stream_1_V_write = image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_1_V_write;
assign src0_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
assign src0_data_stream_2_V_din = image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_2_V_din;
assign src0_data_stream_2_V_read = image_filter_CvtColor_U0_p_src_data_stream_2_V_read;
assign src0_data_stream_2_V_write = image_filter_Duplicate_1080_1920_32_32_U0_dst1_data_stream_2_V_write;
assign src0_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign src0_rows_V_channel_din = image_filter_Block_Mat_exit121719_proc1_U0_ap_return_0;
assign src0_rows_V_channel_read = image_filter_CvtColor_U0_ap_ready;
assign src0_rows_V_channel_write = ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src0_rows_V_channel;
assign src1_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign src1_cols_V_channel_din = image_filter_Block_Mat_exit121719_proc1_U0_ap_return_3;
assign src1_cols_V_channel_read = image_filter_PaintMask_32_0_1080_1920_U0_ap_ready;
assign src1_cols_V_channel_write = ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src1_cols_V_channel;
assign src1_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign src1_data_stream_0_V_din = image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_0_V_din;
assign src1_data_stream_0_V_read = image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_read;
assign src1_data_stream_0_V_write = image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_0_V_write;
assign src1_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
assign src1_data_stream_1_V_din = image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_1_V_din;
assign src1_data_stream_1_V_read = image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_read;
assign src1_data_stream_1_V_write = image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_1_V_write;
assign src1_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
assign src1_data_stream_2_V_din = image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_2_V_din;
assign src1_data_stream_2_V_read = image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_read;
assign src1_data_stream_2_V_write = image_filter_Duplicate_1080_1920_32_32_U0_dst2_data_stream_2_V_write;
assign src1_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign src1_rows_V_channel_din = image_filter_Block_Mat_exit121719_proc1_U0_ap_return_2;
assign src1_rows_V_channel_read = image_filter_PaintMask_32_0_1080_1920_U0_ap_ready;
assign src1_rows_V_channel_write = ap_chn_write_image_filter_Block_Mat_exit121719_proc1_U0_src1_rows_V_channel;


endmodule //image_filter

